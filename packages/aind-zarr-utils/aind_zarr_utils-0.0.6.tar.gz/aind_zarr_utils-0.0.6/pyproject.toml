[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-zarr-utils"
description = "Utilities for working with ZARR data and AIND metadata"
license = { text = "MIT" }
requires-python = ">=3.10, <3.14"
authors = [
    { name = "Galen Lynch", email = "galen@galenlynch.com" },
    { name = "Allen Institute for Neural Dynamics" },
]
classifiers = ["Programming Language :: Python :: 3"]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    "antspyx>=0.5,<0.6",
    "boto3>=1,<2",
    "numpy>=1,<2",
    "ome-zarr>=0.11,<0.12",
    "requests>2,<3",
    "SimpleITK>=2,<3",
]

[project.optional-dependencies]
dev = [
    'black',
    'coverage',
    'flake8',
    'interrogate',
    'isort',
    'Sphinx',
    'furo',
    'pip',
    'ipykernel',
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "aind_zarr_utils.__version__" }

[tool.black]
line-length = 79
target_version = ['py312']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  | .gitignore
)
'''

[tool.ruff]
line-length = 79
target-version = 'py312'

[tool.ruff.lint]
# pyflakes, pycodestyle, isort
select = ["F", "E", "W", "I", "C90"]
ignore = ["E501"]

[tool.coverage.run]
omit = ["*__init__*"]
source = ["aind_zarr_utils", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "^from .* import .*",
    "^import .*",
    "pragma: no cover",
]
fail_under = 0

[tool.isort]
line_length = 79
profile = "black"

[tool.interrogate]
exclude = ["setup.py", "docs", "build"]
fail-under = 50
