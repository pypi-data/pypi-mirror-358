<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2023-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXmicrostructure_ipf" extends="NXprocess" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <symbol name="n_z">
            <doc>
                 Number of pixel along the z slowest direction.
            </doc>
        </symbol>
        <symbol name="n_y">
            <doc>
                 Number of pixel along the y slow direction.
            </doc>
        </symbol>
        <symbol name="n_x">
            <doc>
                 Number of pixel along the x fast direction.
            </doc>
        </symbol>
        <symbol name="n_rgb">
            <doc>
                 Number of RGB values along the fastest direction, always three.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Base class to store an inverse pole figure (IPF) mapping (IPF map).
    </doc>
    <field name="depends_on" type="NX_CHAR">
        <doc>
             Reference to an :ref:`NXcoordinate_system` in which the projection_direction is defined.
             
             If the field depends_on is not provided but parents of the instance of this base class or its
             specializations define an instance of :ref:`NXcoordinate_system`, projection_direction
             is defined in this coordinate system.
             
             If nothing is provided it is assumed that projection_direction is defined in the McStas coordinate system.
        </doc>
    </field>
    <field name="projection_direction" type="NX_NUMBER" units="NX_UNITLESS">
        <doc>
             The direction along which orientations are projected.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="3"/>
        </dimensions>
    </field>
    <group name="input_grid" type="NXcg_grid">
        <doc>
             Details about the original grid.
             
             Here original grid means the grid for which the IPF map was computed when that
             IPF map was exported from the tech partner's file format representation.
        </doc>
    </group>
    <group name="output_grid" type="NXcg_grid">
        <doc>
             Details about the grid onto which the IPF is recomputed.
             
             Rescaling the visualization of the IPF map may be needed to enable
             visualization in specific software tools like H5Web.
        </doc>
    </group>
    <field name="interpolation" type="NX_CHAR">
        <doc>
             How where orientation values at positions of input_grid computed to values on output_grid.
             
             Nearest neighbour means the orientation of the closed (Euclidean distance) grid point of the input_grid was taken.
        </doc>
        <enumeration>
            <item value="nearest_neighbour"/>
        </enumeration>
    </field>
    <group name="map" type="NXdata">
        <doc>
             Inverse pole figure mapping.
             
             Instances named phase0 should by definition refer to the null phase notIndexed.
             Inspect the definition of :ref:`NXphase` and its field identifier_phase
             for further details.
             
             Details about possible regridding and associated interpolation
             during the computation of the IPF map visualization can be stored
             using the input_grid, output_grid, and interpolation fields.
             
             The main purpose of this map is to offer a normalized default representation
             of the IPF map for consumption by a research data management system (RDMS).
             This is aligned with the first aim of :ref:`NXmicrostructure_ipf`, to bring colleagues
             and users of IPF maps together to discuss which pieces of information need storage.
             
             We are convinced a step-by-step design and community-driven discussion is a practical
             strategy to work towards an interoperable description and data model for exchanging
             IPF maps as a specific community-accepted method to convey orientation maps.
             
             With this design the individual RDMS solutions and tools can still continue
             to support specific custom data analyses workflow and routes but at least
             there is one common understanding which enables also those users who are
             not necessarily experts in all the details of the underlying techniques an
             understanding if the dataset is worth to become reused or repurposed.
        </doc>
        <!--\@signal: data
\@axes: [axis_y, axis_x]
\@axis_x_indices: 0
\@axis_y_indices: 1-->
        <field name="data" type="NX_NUMBER" units="NX_UNITLESS">
            <!--
assume a mapping with step size 0.5 micron
we need to distinguish
pixel position, i.e. 0, 1, 2, 3, unit px
  answers in which pixel on the map but map is disconnected from sample surface context
calibrated pixel position 0., 0.5, 1.0, 1.5, unit micron
  answers in addition physical dimensions (relevant to get crystal extent etc.) but still disconnected from sample surface context
calibrated pixel position including the offset of the original coordinate system
  answers everything would enable one to point if still in the microscope where on the sample surface each pixel is located
tech partners oftentimes do not report to more than calibrated pixel position
-->
            <doc>
                 Inverse pole figure color code for each map coordinate.
            </doc>
            <dimensions rank="3">
                <dim index="1" value="n_y"/>
                <dim index="2" value="n_x"/>
                <dim index="3" value="3"/>
            </dimensions>
        </field>
        <field name="axis_z" type="NX_NUMBER" units="NX_LENGTH">
            <doc>
                 Pixel center coordinate calibrated for step size along the z axis of the map.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_z"/>
            </dimensions>
        </field>
        <!--\@long_name(NX_CHAR):-->
        <field name="axis_y" type="NX_NUMBER" units="NX_LENGTH">
            <doc>
                 Pixel center coordinate calibrated for step size along the y axis of the map.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_y"/>
            </dimensions>
        </field>
        <!--\@long_name(NX_CHAR):-->
        <field name="axis_x" type="NX_NUMBER" units="NX_LENGTH">
            <doc>
                 Pixel center coordinate calibrated for step size along the x axis of the map.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_x"/>
            </dimensions>
        </field>
    </group>
    <!--\@long_name(NX_CHAR):
title:-->
    <group name="legend" type="NXdata">
        <doc>
             The color code which maps colors to orientation in the fundamental zone.
             
             For each stereographic standard triangle (SST), i.e. a rendering of the
             fundamental zone of the crystal-symmetry-reduced orientation space
             SO3, it is possible to define a color model which assigns a color to each
             point in the fundamental zone.
             
             Different mapping models are used. These implement (slightly) different
             scaling relations. Differences exist across representations of tech partners.
             
             Differences are which base colors of the RGB color model are placed in
             which extremal position of the SST and where the white point is located.
             
             For further details see:
             
             * [G. Nolze et al.](https://doi.org/10.1107/S1600576716012942)
             * [S. Patala et al.](https://doi.org/10.1016/j.pmatsci.2012.04.002).
             
             Details are implementation-specific and not standardized yet.
             
             Given that the SST has a complicated geometry, it can not yet be
             visualized using tools like H5Web, which is why for now the matrix
             of a rasterized image which is rendered by the backend tool gets
             copied into an RGB matrix to offer a default plot.
        </doc>
        <!--\@signal: data
\@axes: [axis_y, axis_x]
\@axis_x_indices: 0
\@axis_y_indices: 1-->
        <field name="data" type="NX_NUMBER" units="NX_UNITLESS">
            <!--
hehe, but can be larger than one but could also be an NX_DIMENSIONLESS !
-->
            <doc>
                 Inverse pole figure color code for each map coordinate.
            </doc>
            <dimensions rank="3">
                <dim index="1" value="n_y"/>
                <dim index="2" value="n_x"/>
                <dim index="3" value="3"/>
            </dimensions>
        </field>
        <field name="axis_y" type="NX_NUMBER" units="NX_UNITLESS">
            <doc>
                 Pixel along the y-axis.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_y"/>
            </dimensions>
        </field>
        <!--\@long_name(NX_CHAR):-->
        <field name="axis_x" type="NX_NUMBER" units="NX_UNITLESS">
            <doc>
                 Pixel along the x-axis.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_x"/>
            </dimensions>
        </field>
    </group>
    <!--\@long_name(NX_CHAR):
title:-->
    <!--for further contextualization see comments in NXms_ipf.yaml
https://github.com/FAIRmat-NFDI/nexus_definitions/commit/26d4faa5c6950161e48f0672f3fdfd8c9bc907e2-->
</definition>
