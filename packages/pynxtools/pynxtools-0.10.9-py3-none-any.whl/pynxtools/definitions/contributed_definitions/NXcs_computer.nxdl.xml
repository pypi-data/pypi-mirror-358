<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2022-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXcs_computer" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <doc>
         Base class for reporting the description of a computer
    </doc>
    <field name="name" type="NX_CHAR">
        <doc>
             Given name/alias to the computing system, e.g. MyDesktop.
        </doc>
    </field>
    <field name="operating_system" type="NX_CHAR">
        <doc>
             Name of the operating system, e.g. Windows, Linux, Mac, Android.
        </doc>
        <attribute name="version">
            <doc>
                 Version plus build number, commit hash, or description of an ever
                 persistent resource where the source code of the program and build
                 instructions can be found so that the program can be configured in
                 such a manner that the result file is ideally recreatable yielding
                 the same results.
            </doc>
        </attribute>
    </field>
    <!--difference e.g. in Win11 between hardware ID, UUID, and device ID-->
    <field name="uuid" type="NX_CHAR">
        <doc>
             Ideally a (globally) unique persistent identifier of the computer, i.e.
             the Universally Unique Identifier (UUID) of the computing node.
        </doc>
    </field>
    <!--when it comes to performance monitoring-->
    <group name="processing" type="NXobject">
        <doc>
             Details about the system of processing units e.g. (classical) processing units (CPUs),
             coprocessor, graphic cards, accelerator processing units or a system of these.
        </doc>
        <group type="NXcircuit">
            <doc>
                 Granularizing the processing units. Typical examples, a desktop computer
                 with a single CPU one could describe using one instance of NXcircuit.
                 A dual-socket server one could describe using two instances NXcircuit
                 A server with two dual-socket server nodes one could describe with
                 four instances of NXcircuit surplus a field with their level in the hierarchy.
            </doc>
            <field name="type" type="NX_CHAR">
                <doc>
                     General type of the processing unit
                </doc>
                <enumeration open="true">
                    <item value="cpu"/>
                    <item value="gpu"/>
                    <item value="fpga"/>
                </enumeration>
            </field>
            <field name="name" type="NX_CHAR">
                <doc>
                     Given name
                </doc>
            </field>
        </group>
    </group>
    <group name="memory" type="NXobject">
        <doc>
             Details about the memory system.
        </doc>
        <group type="NXcircuit">
            <doc>
                 Granularizing the components of the memory system.
            </doc>
            <field name="type" type="NX_CHAR">
                <doc>
                     Qualifier for the type of random access memory.
                </doc>
                <enumeration>
                    <item value="ddr4"/>
                    <item value="ddr5"/>
                </enumeration>
            </field>
            <field name="max_physical_capacity" type="NX_POSINT" units="NX_ANY">
                <doc>
                     Total amount of data which the medium can hold.
                </doc>
            </field>
            <field name="name" type="NX_CHAR">
                <doc>
                     Given name
                </doc>
            </field>
        </group>
    </group>
    <group name="storage" type="NXobject">
        <doc>
             Details about the I/O system.
        </doc>
        <group type="NXcircuit">
            <doc>
                 Granularizing the components of the I/O system.
            </doc>
            <field name="type" type="NX_CHAR">
                <doc>
                     Qualifier for the type of storage medium used.
                </doc>
                <enumeration>
                    <item value="solid_state_disk"/>
                    <item value="hard_disk"/>
                    <item value="tape"/>
                </enumeration>
            </field>
            <field name="max_physical_capacity" type="NX_POSINT" units="NX_ANY">
                <doc>
                     Total amount of data which the medium can hold.
                </doc>
            </field>
            <field name="name" type="NX_CHAR">
                <doc>
                     Given name
                </doc>
            </field>
        </group>
    </group>
    <!--NXcircuit inherits fabrication from NXcomponent-->
</definition>
