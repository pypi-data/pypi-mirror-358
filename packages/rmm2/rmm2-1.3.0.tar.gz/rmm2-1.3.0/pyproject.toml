[project]
name = "rmm2"
version = "1.3.0"
description = "A RimWorld Mod Manager (forked from rmm-spoons)"
authors = [
    { name = "Duong"},
    { name = "Michael Ciociola"},
]
maintainers = [
    {name = "Duong", email = "dotungduong2@gmail.com"}
]
requires-python = ">3.8,<4.0"
readme = "README.md"
license = "GPL-3.0-only"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Topic :: System :: Archiving :: Packaging",
    "Topic :: Games/Entertainment",
]
dependencies = [
    "beautifulsoup4>=4.12.2,<5",
    "tabulate>=0.9.0,<0.10",
    "networkx~=3.1",
]

[project.urls]
Homepage = "https://github.com/duong-dt/rmm2"
Repository = "https://github.com/duong-dt/rmm2"

[project.scripts]
rmm = "rmm.cli:run"

[dependency-groups]
dev = [
]

[tool.hatch.build.targets.sdist]
include = ["rmm"]

[tool.hatch.build.targets.wheel]
include = ["rmm"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.semantic_release]
assets = []
build_command = "just pre-release"
build_command_env = []
commit_message = "v{version}\tAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version:nf"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "docs"]
other_allowed_tags = ["build", "chore", "ci", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
token = { env = "GH_TOKEN" }
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
upload_to_vcs_release = false

[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = ["I", "TID252", "A", "UP", "PTH", "RUF", "ANN"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
