[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "estceque"
version = "0.5"
description = "Elasticsearch ingest pipeline validation"
readme = "README.rst"
requires-python = ">=3.9,<4.0"
authors = [
    { name = "Thomas Touhey", email = "thomas@touhey.fr" },
]
keywords = [
    "elasticsearch",
    "es_query",
    "es-query",
    "ingest",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: CeCILL-C Free Software License Agreement (CECILL-C)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
]
dependencies = [
    "annotated-types>=0.7,<0.8",
    "dissec>=1.0,<2.0",
    "eval-type-backport>=0.2,<0.3; python_version < '3.10'",
    "pydantic>=2.7,<3",
    "typing-extensions>=4.12,<5",
]

[project.urls]
homepage = "https://estceque.touhey.pro/"
"Documentation" = "https://estceque.touhey.pro/"
"Source Code" = "https://gitlab.com/kaquel/estceque"
"Bug Tracker" = "https://gitlab.com/kaquel/estceque/-/issues"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
sphinx-autobuild = "^2024.4.16"

[tool.poetry.group.docs.dependencies]
autodoc-pydantic = "^2.2.0"
furo = "^2024.5.6"
sphinx = "^7.3.7"
sphinxcontrib-mermaid = "^0.9.2"
toml = "^0.10.2"

[tool.black]
target_version = ['py311']
line-length = 79

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
update_changelog_on_bump = true
version = "0.1.4"
version_files = [
    "pyproject.toml:version",
]

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "@override",
    "pragma: no cover"
]

[tool.flake8]
application-import-names = "estceque"
ignore = [
    "ANN002", # No type annotations for *args
    "ANN003", # No type annotations for **kwargs
    "ANN101", # No type annotations for self in method
    "ANN102", # No type annotations for cls in classmethod
    "ANN204", # No return type for special method
    "ANN401", # We allow typing.Any in certain annoying cases
    "D105",   # No need for docstrings in magic __methods__
    "D107",   # No need for docstrings in __init__
    "E203",   # flake8 and black disagree on this
    "FI58",   # We use future annotations.
    "W503",   # Line breaks are before binary operators, not after
]
per-file-ignores = [
    "docs/*:D100,D102",
    "tests/*:S101"
]
rst-roles = [
  "py:class",
  "py:attr",
  "py:data",
  "py:func",
  "py:meth",
  "py:exc",
  "py:mod",
  "ref",
]
rst-directives = [
  "py:data",
  "doctest",
]

[tool.isort]
add_imports = ["from __future__ import annotations"]
ensure_newline_before_comments = true
force_grid_wrap = 0
force_sort_within_sections = true
group_by_package = true
include_trailing_comma = true
line_length = 79
lines_after_imports = 2
multi_line_output = 3
no_inline_sort = true
profile = "black"
py_version = 311
use_parentheses = true
combine_as_imports = true

[tool.mypy]
ignore_missing_imports = true
mypy_path = "."
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = """
--cov=estceque --cov-report html --cov-report term --doctest-modules
--ignore=docs
"""
