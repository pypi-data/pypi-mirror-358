# Default refactor urgency analysis configuration for CodeGuard CLI
# This file contains the built-in default values for refactor scoring

# Scoring weights for refactor urgency calculation
scoring_weights:
  base_multiplier: 1.0               # Base scoring multiplier
  size_penalty_weight: 1.5           # Weight for file size penalty  
  maintainability_bonus_weight: 0.5  # Weight for maintainability bonus
  coupling_penalty_weight: 0.3       # Weight for coupling penalty
  density_penalty_weight: 2.0        # Weight for code density penalty
  change_impact_weight: 0.8          # Weight for change impact scoring

# Language-specific complexity multipliers
language_multipliers:
  python: 1.0      # Baseline language
  javascript: 1.2  # Higher complexity due to async/callbacks
  java: 0.9        # Structured language, lower penalty
  cpp: 1.3         # Memory management complexity
  typescript: 1.1  # Type complexity
  c: 1.3           # Manual memory management
  go: 0.8          # Simple, structured language
  rust: 0.7        # Strong type system helps maintainability
  php: 1.4         # Dynamic typing issues
  ruby: 1.1        # Dynamic but cleaner than PHP

# Urgency category thresholds  
urgency_thresholds:
  critical: 15000  # Immediate refactoring required
  high: 7500       # Refactor within current sprint
  medium: 3000     # Schedule for next quarter
  low: 1000        # Monitor, consider for tech debt backlog

# Analysis settings
min_lines_for_analysis: 10     # Minimum lines of code to analyze
max_lines_for_analysis: 10000  # Maximum lines to analyze (performance limit)

# Display settings
default_limit: 15              # Default number of files to show in results
show_categories: true          # Show urgency categories in output
show_recommendations: true     # Show refactoring recommendations