[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyclad"
description = "Python Library for Continual Lifelong Anomaly Detection"
version = "0.3.0"
dependencies = [
    "datasets>=3.5.0",
    "numpy>=2.0.0",
    "scikit-learn>=1.5.0",
    "seaborn>=0.13.2",
    "pyod>=2.0.1",
    "codecarbon>=3.0.2",
    "pydantic>=2.11.2",
]
requires-python = ">= 3.8"
authors = [
    { name = "Kamil Faber", email = "kfaber@agh.edu.pl" },
    { name = "Roberto Corizzo", email = "rcorizzo@american.edu" }
]
maintainers = [
    { name = "Kamil Faber", email = "kfaber@agh.edu.pl" },
    { name = "Roberto Corizzo", email = "rcorizzo@american.edu" },
    { name = "Mateusz Smendowski", email = "smendowski@agh.edu.pl"}
]
readme = "README.md"
license = { text = "MIT License" }
keywords = ["continual anomaly detection", "continual learning", "anomaly detection", "lifelong learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

#[project.urls]
#Homepage = "https://example.com"
#Documentation = "https://readthedocs.org"
#Repository = "https://github.com/me/spam.git"
#Issues = "https://github.com/me/spam/issues"
#Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

[project.optional-dependencies]
dev = ["black>=24.4", "flake8>=7.1.0", "isort>=5.13.0", "pytest>=8.2.2"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
pythonpath = [
  ".", "src",
]
markers = [
    "longrun: marks tests that take long time to execute (for example downloading big files). These tests are disabled by default, you can run them adding flag `--longrun` to `pytest`)",
]