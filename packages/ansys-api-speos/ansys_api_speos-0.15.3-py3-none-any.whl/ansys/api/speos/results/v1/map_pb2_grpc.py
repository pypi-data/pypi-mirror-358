# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.speos.results.v1 import map_pb2 as ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2


class MapActionsStub(object):
    """Actions available with XMP and Speos360 result file.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MergeXMPsToXMPOrSpeos360 = channel.unary_unary(
                '/ansys.api.speos.results.v1.MapActions/MergeXMPsToXMPOrSpeos360',
                request_serializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeXMPsToXMPOrSpeos360_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeXMPsToXMPOrSpeos360_Response.FromString,
                )
        self.MergeSpeos360ToStereoSpeos360 = channel.unary_unary(
                '/ansys.api.speos.results.v1.MapActions/MergeSpeos360ToStereoSpeos360',
                request_serializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeSpeos360ToStereoSpeos360_Request.SerializeToString,
                response_deserializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeSpeos360ToStereoSpeos360_Response.FromString,
                )


class MapActionsServicer(object):
    """Actions available with XMP and Speos360 result file.
    """

    def MergeXMPsToXMPOrSpeos360(self, request, context):
        """Merge list of XMP files into a XMP or Speos360 file. [Unsupported]
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MergeSpeos360ToStereoSpeos360(self, request, context):
        """Merge left and right speos360 files into a stereoscopic Speos360 file. [Unsupported]
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapActionsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MergeXMPsToXMPOrSpeos360': grpc.unary_unary_rpc_method_handler(
                    servicer.MergeXMPsToXMPOrSpeos360,
                    request_deserializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeXMPsToXMPOrSpeos360_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeXMPsToXMPOrSpeos360_Response.SerializeToString,
            ),
            'MergeSpeos360ToStereoSpeos360': grpc.unary_unary_rpc_method_handler(
                    servicer.MergeSpeos360ToStereoSpeos360,
                    request_deserializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeSpeos360ToStereoSpeos360_Request.FromString,
                    response_serializer=ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeSpeos360ToStereoSpeos360_Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.speos.results.v1.MapActions', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MapActions(object):
    """Actions available with XMP and Speos360 result file.
    """

    @staticmethod
    def MergeXMPsToXMPOrSpeos360(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.results.v1.MapActions/MergeXMPsToXMPOrSpeos360',
            ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeXMPsToXMPOrSpeos360_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeXMPsToXMPOrSpeos360_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MergeSpeos360ToStereoSpeos360(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.speos.results.v1.MapActions/MergeSpeos360ToStereoSpeos360',
            ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeSpeos360ToStereoSpeos360_Request.SerializeToString,
            ansys_dot_api_dot_speos_dot_results_dot_v1_dot_map__pb2.MergeSpeos360ToStereoSpeos360_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
