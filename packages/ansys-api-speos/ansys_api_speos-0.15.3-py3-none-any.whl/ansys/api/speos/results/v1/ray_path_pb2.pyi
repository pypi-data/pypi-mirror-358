"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.speos.common.v1.data_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class RayPath(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PhotonStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PhotonStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PhotonStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        StatusAbsorbed: RayPath.PhotonStatus.ValueType = ...  # 0
        StatusSpecularTransmitted: RayPath.PhotonStatus.ValueType = ...  # 1
        StatusGaussianTransmitted: RayPath.PhotonStatus.ValueType = ...  # 2
        StatusLambertianTransmitted: RayPath.PhotonStatus.ValueType = ...  # 3
        StatusVolumicDiffused: RayPath.PhotonStatus.ValueType = ...  # 4
        StatusJustEmitted: RayPath.PhotonStatus.ValueType = ...  # 5
        StatusDiracTransmitted: RayPath.PhotonStatus.ValueType = ...  # 6
        StatusError: RayPath.PhotonStatus.ValueType = ...  # 7
        StatusErrorVolumicBodyNotClosed: RayPath.PhotonStatus.ValueType = ...  # 8
        StatusErrorVolumeConflict: RayPath.PhotonStatus.ValueType = ...  # 9
        StatusError2DTangency: RayPath.PhotonStatus.ValueType = ...  # 10
        StatusError2DIntersect3DWarning: RayPath.PhotonStatus.ValueType = ...  # 11
        StatusErrorNonOpticalMaterial: RayPath.PhotonStatus.ValueType = ...  # 12
        StatusErrorIntersection: RayPath.PhotonStatus.ValueType = ...  # 13
        StatusErrorNonOpticalMaterialAtEmission: RayPath.PhotonStatus.ValueType = ...  # 14
        StatusError3DTextureSupportTangency: RayPath.PhotonStatus.ValueType = ...  # 15
        StatusLast: RayPath.PhotonStatus.ValueType = ...  # 16
        StatusFirst: RayPath.PhotonStatus.ValueType = ...  # -7
        StatusDiracReflected: RayPath.PhotonStatus.ValueType = ...  # -6
        StatusReserved: RayPath.PhotonStatus.ValueType = ...  # -5
        StatusGrinStep: RayPath.PhotonStatus.ValueType = ...  # -4
        StatusLambertianReflected: RayPath.PhotonStatus.ValueType = ...  # -3
        StatusGaussianReflected: RayPath.PhotonStatus.ValueType = ...  # -2
        StatusSpecularReflected: RayPath.PhotonStatus.ValueType = ...  # -1
    class PhotonStatus(_PhotonStatus, metaclass=_PhotonStatusEnumTypeWrapper):
        pass

    StatusAbsorbed: RayPath.PhotonStatus.ValueType = ...  # 0
    StatusSpecularTransmitted: RayPath.PhotonStatus.ValueType = ...  # 1
    StatusGaussianTransmitted: RayPath.PhotonStatus.ValueType = ...  # 2
    StatusLambertianTransmitted: RayPath.PhotonStatus.ValueType = ...  # 3
    StatusVolumicDiffused: RayPath.PhotonStatus.ValueType = ...  # 4
    StatusJustEmitted: RayPath.PhotonStatus.ValueType = ...  # 5
    StatusDiracTransmitted: RayPath.PhotonStatus.ValueType = ...  # 6
    StatusError: RayPath.PhotonStatus.ValueType = ...  # 7
    StatusErrorVolumicBodyNotClosed: RayPath.PhotonStatus.ValueType = ...  # 8
    StatusErrorVolumeConflict: RayPath.PhotonStatus.ValueType = ...  # 9
    StatusError2DTangency: RayPath.PhotonStatus.ValueType = ...  # 10
    StatusError2DIntersect3DWarning: RayPath.PhotonStatus.ValueType = ...  # 11
    StatusErrorNonOpticalMaterial: RayPath.PhotonStatus.ValueType = ...  # 12
    StatusErrorIntersection: RayPath.PhotonStatus.ValueType = ...  # 13
    StatusErrorNonOpticalMaterialAtEmission: RayPath.PhotonStatus.ValueType = ...  # 14
    StatusError3DTextureSupportTangency: RayPath.PhotonStatus.ValueType = ...  # 15
    StatusLast: RayPath.PhotonStatus.ValueType = ...  # 16
    StatusFirst: RayPath.PhotonStatus.ValueType = ...  # -7
    StatusDiracReflected: RayPath.PhotonStatus.ValueType = ...  # -6
    StatusReserved: RayPath.PhotonStatus.ValueType = ...  # -5
    StatusGrinStep: RayPath.PhotonStatus.ValueType = ...  # -4
    StatusLambertianReflected: RayPath.PhotonStatus.ValueType = ...  # -3
    StatusGaussianReflected: RayPath.PhotonStatus.ValueType = ...  # -2
    StatusSpecularReflected: RayPath.PhotonStatus.ValueType = ...  # -1

    IMPACTS_COORDINATES_FIELD_NUMBER: builtins.int
    WAVELENGTHS_FIELD_NUMBER: builtins.int
    BODY_CONTEXT_IDS_FIELD_NUMBER: builtins.int
    UNIQUE_FACE_IDS_FIELD_NUMBER: builtins.int
    INTERACTION_STATUSES_FIELD_NUMBER: builtins.int
    LAST_DIRECTION_FIELD_NUMBER: builtins.int
    COLORS_FIELD_NUMBER: builtins.int
    @property
    def impacts_coordinates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Impacts coordinates of this RayPath. (i0x, i0y, i0z, i1x, i1y, i1z, ..., iNx, iNy, iNz) with N+1 impacts"""
        pass
    @property
    def wavelengths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Wavelength at each impact."""
        pass
    @property
    def body_context_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """ID of the body impacted at each impact."""
        pass
    @property
    def unique_face_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """ID of the face impacted at each impact."""
        pass
    @property
    def interaction_statuses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___RayPath.PhotonStatus.ValueType]:
        """Interaction type at each impact with the elements encountered."""
        pass
    @property
    def last_direction(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Direction after the last impact. (x, y, z)"""
        pass
    @property
    def colors(self) -> ansys.api.speos.common.v1.data_pb2.DataBytes:
        """The color in RGB24 format at each impact"""
        pass
    def __init__(self,
        *,
        impacts_coordinates : typing.Optional[typing.Iterable[builtins.float]] = ...,
        wavelengths : typing.Optional[typing.Iterable[builtins.float]] = ...,
        body_context_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        unique_face_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        interaction_statuses : typing.Optional[typing.Iterable[global___RayPath.PhotonStatus.ValueType]] = ...,
        last_direction : typing.Optional[typing.Iterable[builtins.float]] = ...,
        colors : typing.Optional[ansys.api.speos.common.v1.data_pb2.DataBytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["colors",b"colors"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body_context_ids",b"body_context_ids","colors",b"colors","impacts_coordinates",b"impacts_coordinates","interaction_statuses",b"interaction_statuses","last_direction",b"last_direction","unique_face_ids",b"unique_face_ids","wavelengths",b"wavelengths"]) -> None: ...
global___RayPath = RayPath
