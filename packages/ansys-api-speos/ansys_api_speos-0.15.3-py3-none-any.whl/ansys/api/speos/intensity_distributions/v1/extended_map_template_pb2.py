# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ansys/api/speos/intensity_distributions/v1/extended_map_template.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ansys.api.speos.intensity_distributions.v1 import base_map_template_pb2 as ansys_dot_api_dot_speos_dot_intensity__distributions_dot_v1_dot_base__map__template__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nFansys/api/speos/intensity_distributions/v1/extended_map_template.proto\x12.ansys.api.speos.intensity_distributions.v1.xmp\x1a\x42\x61nsys/api/speos/intensity_distributions/v1/base_map_template.proto\"\xbe\x01\n\x06Values\x12L\n\x05layer\x18\x01 \x03(\x0b\x32=.ansys.api.speos.intensity_distributions.v1.xmp.Values.Layers\x1a\x66\n\x06Layers\x12K\n\x01y\x18\x01 \x03(\x0b\x32@.ansys.api.speos.intensity_distributions.v1.xmp.Values.Layers.ys\x1a\x0f\n\x02ys\x12\t\n\x01x\x18\x01 \x03(\x01\"\x9c\x01\n\x0b\x45xtendedMap\x12\x46\n\tbase_data\x18\x01 \x01(\x0b\x32\x33.ansys.api.speos.intensity_distributions.v1.xmp.Map\x12\x45\n\x05value\x18\x02 \x01(\x0b\x32\x36.ansys.api.speos.intensity_distributions.v1.xmp.Valuesb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ansys.api.speos.intensity_distributions.v1.extended_map_template_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _VALUES._serialized_start=191
  _VALUES._serialized_end=381
  _VALUES_LAYERS._serialized_start=279
  _VALUES_LAYERS._serialized_end=381
  _VALUES_LAYERS_YS._serialized_start=366
  _VALUES_LAYERS_YS._serialized_end=381
  _EXTENDEDMAP._serialized_start=384
  _EXTENDEDMAP._serialized_end=540
# @@protoc_insertion_point(module_scope)
