"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.speos.intensity_distributions.v1.ies_pb2
import grpc

class IesIntensityServiceStub:
    """service to manage IES files"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Load: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.ies_pb2.Load_Request,
        ansys.api.speos.intensity_distributions.v1.ies_pb2.Load_Response] = ...
    """serialization for native files"""

    Save: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.ies_pb2.Save_Request,
        ansys.api.speos.intensity_distributions.v1.ies_pb2.Save_Response] = ...

    Import: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.ies_pb2.IesIntensityDistribution,
        ansys.api.speos.intensity_distributions.v1.ies_pb2.Import_Response] = ...
    """import export of IesIntensityDistribution to CIES"""

    Export: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.ies_pb2.Export_Request,
        ansys.api.speos.intensity_distributions.v1.ies_pb2.IesIntensityDistribution] = ...


class IesIntensityServiceServicer(metaclass=abc.ABCMeta):
    """service to manage IES files"""
    @abc.abstractmethod
    def Load(self,
        request: ansys.api.speos.intensity_distributions.v1.ies_pb2.Load_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.ies_pb2.Load_Response:
        """serialization for native files"""
        pass

    @abc.abstractmethod
    def Save(self,
        request: ansys.api.speos.intensity_distributions.v1.ies_pb2.Save_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.ies_pb2.Save_Response: ...

    @abc.abstractmethod
    def Import(self,
        request: ansys.api.speos.intensity_distributions.v1.ies_pb2.IesIntensityDistribution,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.ies_pb2.Import_Response:
        """import export of IesIntensityDistribution to CIES"""
        pass

    @abc.abstractmethod
    def Export(self,
        request: ansys.api.speos.intensity_distributions.v1.ies_pb2.Export_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.ies_pb2.IesIntensityDistribution: ...


def add_IesIntensityServiceServicer_to_server(servicer: IesIntensityServiceServicer, server: grpc.Server) -> None: ...
