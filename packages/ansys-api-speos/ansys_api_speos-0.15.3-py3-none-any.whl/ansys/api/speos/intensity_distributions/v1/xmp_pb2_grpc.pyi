"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.speos.intensity_distributions.v1.xmp_pb2
import grpc

class XmpIntensityServiceStub:
    """service to manage XMP files"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Load: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.Load_Request,
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.Load_Response] = ...
    """Load XMP intensity distributions from file"""

    Save: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.Save_Request,
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.Save_Response] = ...
    """Save XMP intensity distributions to file"""

    Import: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.XmpDistribution,
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.Import_Response] = ...
    """import XmpDistribution to COptisMap"""

    Export: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.Export_Request,
        ansys.api.speos.intensity_distributions.v1.xmp_pb2.XmpDistribution] = ...
    """export COPtisMap to XmpDistribution"""


class XmpIntensityServiceServicer(metaclass=abc.ABCMeta):
    """service to manage XMP files"""
    @abc.abstractmethod
    def Load(self,
        request: ansys.api.speos.intensity_distributions.v1.xmp_pb2.Load_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.xmp_pb2.Load_Response:
        """Load XMP intensity distributions from file"""
        pass

    @abc.abstractmethod
    def Save(self,
        request: ansys.api.speos.intensity_distributions.v1.xmp_pb2.Save_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.xmp_pb2.Save_Response:
        """Save XMP intensity distributions to file"""
        pass

    @abc.abstractmethod
    def Import(self,
        request: ansys.api.speos.intensity_distributions.v1.xmp_pb2.XmpDistribution,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.xmp_pb2.Import_Response:
        """import XmpDistribution to COptisMap"""
        pass

    @abc.abstractmethod
    def Export(self,
        request: ansys.api.speos.intensity_distributions.v1.xmp_pb2.Export_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.intensity_distributions.v1.xmp_pb2.XmpDistribution:
        """export COPtisMap to XmpDistribution"""
        pass


def add_XmpIntensityServiceServicer_to_server(servicer: XmpIntensityServiceServicer, server: grpc.Server) -> None: ...
