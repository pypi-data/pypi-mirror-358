"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.speos.common.v1.data_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class IntensityTemplate(google.protobuf.message.Message):
    """Intensity with its basic characteristics"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Library(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INTENSITY_FILE_URI_FIELD_NUMBER: builtins.int
        intensity_file_uri: typing.Text = ...
        """uri of the intensity file IES (.ies), Eulumdat (.ldt), speos intensities (.xmp)"""

        def __init__(self,
            *,
            intensity_file_uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["intensity_file_uri",b"intensity_file_uri"]) -> None: ...

    class Lambertian(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TOTAL_ANGLE_FIELD_NUMBER: builtins.int
        total_angle: builtins.float = ...
        """total angle in degrees of the emission of the light source"""

        def __init__(self,
            *,
            total_angle : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["total_angle",b"total_angle"]) -> None: ...

    class Cos(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        N_FIELD_NUMBER: builtins.int
        TOTAL_ANGLE_FIELD_NUMBER: builtins.int
        N: builtins.float = ...
        """Order of cos law"""

        total_angle: builtins.float = ...
        """total angle in degrees of the emission of the light source"""

        def __init__(self,
            *,
            N : builtins.float = ...,
            total_angle : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["N",b"N","total_angle",b"total_angle"]) -> None: ...

    class SymmetricGaussian(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FWHM_ANGLE_FIELD_NUMBER: builtins.int
        TOTAL_ANGLE_FIELD_NUMBER: builtins.int
        FWHM_angle: builtins.float = ...
        """Full Width in degrees at Half Maximum"""

        total_angle: builtins.float = ...
        """total angle in degrees of the emission of the light source"""

        def __init__(self,
            *,
            FWHM_angle : builtins.float = ...,
            total_angle : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["FWHM_angle",b"FWHM_angle","total_angle",b"total_angle"]) -> None: ...

    class AsymmetricGaussian(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FWHM_ANGLE_X_FIELD_NUMBER: builtins.int
        FWHM_ANGLE_Y_FIELD_NUMBER: builtins.int
        TOTAL_ANGLE_FIELD_NUMBER: builtins.int
        FWHM_angle_x: builtins.float = ...
        """Full Width in degrees following x at Half Maximum"""

        FWHM_angle_y: builtins.float = ...
        """Full Width in degrees following y at Half Maximum"""

        total_angle: builtins.float = ...
        """total angle in degrees of the emission of the light source"""

        def __init__(self,
            *,
            FWHM_angle_x : builtins.float = ...,
            FWHM_angle_y : builtins.float = ...,
            total_angle : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["FWHM_angle_x",b"FWHM_angle_x","FWHM_angle_y",b"FWHM_angle_y","total_angle",b"total_angle"]) -> None: ...

    class Gaussian(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FWHM_ANGLE_X_FIELD_NUMBER: builtins.int
        FWHM_ANGLE_Y_FIELD_NUMBER: builtins.int
        TOTAL_ANGLE_FIELD_NUMBER: builtins.int
        FWHM_angle_x: builtins.float = ...
        """Full Width in degrees following x at Half Maximum"""

        FWHM_angle_y: builtins.float = ...
        """Full Width in degrees following y at Half Maximum"""

        total_angle: builtins.float = ...
        """total angle in degrees of the emission of the light source"""

        def __init__(self,
            *,
            FWHM_angle_x : builtins.float = ...,
            FWHM_angle_y : builtins.float = ...,
            total_angle : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["FWHM_angle_x",b"FWHM_angle_x","FWHM_angle_y",b"FWHM_angle_y","total_angle",b"total_angle"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    LIBRARY_FIELD_NUMBER: builtins.int
    LAMBERTIAN_FIELD_NUMBER: builtins.int
    COS_FIELD_NUMBER: builtins.int
    SYMMETRIC_GAUSSIAN_FIELD_NUMBER: builtins.int
    ASYMMETRIC_GAUSSIAN_FIELD_NUMBER: builtins.int
    GAUSSIAN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Intensity name"""

    description: typing.Text = ...
    """Intensity descrition"""

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User defined metadatas"""
        pass
    @property
    def library(self) -> global___IntensityTemplate.Library:
        """From file"""
        pass
    @property
    def lambertian(self) -> global___IntensityTemplate.Lambertian:
        """Deprecated (use cos instead) - Lambertian distribution"""
        pass
    @property
    def cos(self) -> global___IntensityTemplate.Cos:
        """Lambert cosine law distribution"""
        pass
    @property
    def symmetric_gaussian(self) -> global___IntensityTemplate.SymmetricGaussian:
        """Deprecated (use gaussian instead) - Symmetric gaussian distribution"""
        pass
    @property
    def asymmetric_gaussian(self) -> global___IntensityTemplate.AsymmetricGaussian:
        """Deprecated (use gaussian instead) - Asymmetric gaussian distribution"""
        pass
    @property
    def gaussian(self) -> global___IntensityTemplate.Gaussian:
        """Gaussian distribution"""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        library : typing.Optional[global___IntensityTemplate.Library] = ...,
        lambertian : typing.Optional[global___IntensityTemplate.Lambertian] = ...,
        cos : typing.Optional[global___IntensityTemplate.Cos] = ...,
        symmetric_gaussian : typing.Optional[global___IntensityTemplate.SymmetricGaussian] = ...,
        asymmetric_gaussian : typing.Optional[global___IntensityTemplate.AsymmetricGaussian] = ...,
        gaussian : typing.Optional[global___IntensityTemplate.Gaussian] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asymmetric_gaussian",b"asymmetric_gaussian","cos",b"cos","gaussian",b"gaussian","intensity",b"intensity","lambertian",b"lambertian","library",b"library","symmetric_gaussian",b"symmetric_gaussian"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asymmetric_gaussian",b"asymmetric_gaussian","cos",b"cos","description",b"description","gaussian",b"gaussian","intensity",b"intensity","lambertian",b"lambertian","library",b"library","metadata",b"metadata","name",b"name","symmetric_gaussian",b"symmetric_gaussian"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["intensity",b"intensity"]) -> typing.Optional[typing_extensions.Literal["library","lambertian","cos","symmetric_gaussian","asymmetric_gaussian","gaussian"]]: ...
global___IntensityTemplate = IntensityTemplate

class Create_Request(google.protobuf.message.Message):
    """Request to create a Intensity in IntensityTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTENSITY_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def intensity_template(self) -> global___IntensityTemplate:
        """Intensity containing its basic characteristics"""
        pass
    def __init__(self,
        *,
        intensity_template : typing.Optional[global___IntensityTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intensity_template",b"intensity_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["intensity_template",b"intensity_template"]) -> None: ...
global___Create_Request = Create_Request

class Create_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the Intensity created in IntensityTemplatesManager"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Create_Response = Create_Response

class Read_Request(google.protobuf.message.Message):
    """Request to read a Intensity in IntensityTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the Intensity to be read"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Read_Request = Read_Request

class Read_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTENSITY_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def intensity_template(self) -> global___IntensityTemplate:
        """Intensity corresponding to the guid given in Read_Request"""
        pass
    def __init__(self,
        *,
        intensity_template : typing.Optional[global___IntensityTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intensity_template",b"intensity_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["intensity_template",b"intensity_template"]) -> None: ...
global___Read_Response = Read_Response

class Update_Request(google.protobuf.message.Message):
    """Request to update a Intensity in IntensityTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    INTENSITY_TEMPLATE_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the Intensity to be updated"""

    @property
    def intensity_template(self) -> global___IntensityTemplate:
        """Intensity that will be used for the update"""
        pass
    def __init__(self,
        *,
        guid : typing.Text = ...,
        intensity_template : typing.Optional[global___IntensityTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intensity_template",b"intensity_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid","intensity_template",b"intensity_template"]) -> None: ...
global___Update_Request = Update_Request

class Update_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Update_Response = Update_Response

class Delete_Request(google.protobuf.message.Message):
    """Request to delete a Intensity in IntensityTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the Intensity to be deleted"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Delete_Request = Delete_Request

class Delete_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Delete_Response = Delete_Response

class List_Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___List_Request = List_Request

class List_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUIDS_FIELD_NUMBER: builtins.int
    @property
    def guids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Guids of the Intensities in IntensityTemplatesManager"""
        pass
    def __init__(self,
        *,
        guids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guids",b"guids"]) -> None: ...
global___List_Response = List_Response

class GetLibraryTypeInfo_Request(google.protobuf.message.Message):
    """Request of GetLibraryTypeInfo"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the IntensityTemplate to get information about intensity file (example: flux). Only for IntensityTemplate of type Library."""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___GetLibraryTypeInfo_Request = GetLibraryTypeInfo_Request

class GetLibraryTypeInfo_Response(google.protobuf.message.Message):
    """Response of GetLibraryTypeInfo"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FLUX_FIELD_NUMBER: builtins.int
    @property
    def flux(self) -> ansys.api.speos.common.v1.data_pb2.DataDoubles:
        """Flux of the intensity file"""
        pass
    def __init__(self,
        *,
        flux : typing.Optional[ansys.api.speos.common.v1.data_pb2.DataDoubles] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["flux",b"flux"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["flux",b"flux"]) -> None: ...
global___GetLibraryTypeInfo_Response = GetLibraryTypeInfo_Response
