"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _Unit:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _UnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Unit.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    watts: Unit.ValueType = ...  # 0
    """W"""

    watts_per_square_meters: Unit.ValueType = ...  # 1
    """W/(m2)"""

    watts_per_steradians: Unit.ValueType = ...  # 2
    """W/(sr)"""

    watts_per_nanometers: Unit.ValueType = ...  # 3
    """W/(nm)"""

    watts_per_square_meters_steradians: Unit.ValueType = ...  # 4
    """W/(m2.sr)"""

    watts_per_steradians_nanometers: Unit.ValueType = ...  # 5
    """W/(sr.nm)"""

    watts_per_square_meters_nanometers: Unit.ValueType = ...  # 6
    """W/(m2.nm)"""

    joules: Unit.ValueType = ...  # 16
    """J"""

    joules_per_nanometers: Unit.ValueType = ...  # 17
    """J/(nm)"""

    joules_per_square_meters: Unit.ValueType = ...  # 18
    """J/(m2)"""

    joules_per_square_meters_nanometers: Unit.ValueType = ...  # 19
    """J/(m2.nm)"""

    luxes: Unit.ValueType = ...  # 29
    """lx"""

    luxes_seconds: Unit.ValueType = ...  # 30
    """lx.s"""

    luxes_per_nanometers: Unit.ValueType = ...  # 31
    """lx.s/(nm)"""

    luxes_seconds_per_nanometers: Unit.ValueType = ...  # 32
    """lx.s/(nm)"""

    candelas: Unit.ValueType = ...  # 42
    """cd"""

    candelas_per_square_meters: Unit.ValueType = ...  # 43
    """cd/(m2)"""

    candelas_per_nanometers: Unit.ValueType = ...  # 44
    """cd/(m2)"""

    candelas_per_squaremeters_nanometers: Unit.ValueType = ...  # 45
    """cd/(m2.nm)"""

    lumens: Unit.ValueType = ...  # 55
    """lm"""

    lumens_seconds: Unit.ValueType = ...  # 56
    """lm.s"""

    lumens_per_nanometers: Unit.ValueType = ...  # 57
    """lm/(nm)"""

    lumens_per_square_meters_nanometers: Unit.ValueType = ...  # 49
    """lm/(m2.nm)"""

    percent: Unit.ValueType = ...  # 60
    """%"""

    color_XYZ: Unit.ValueType = ...  # 70
    """XYZ CIE"""

    color_xyY: Unit.ValueType = ...  # 71
    """xy CIE"""

    color_uvY: Unit.ValueType = ...  # 72
    """uvY 1960 UCS CIE"""

    color_uvY_prime: Unit.ValueType = ...  # 73
    """u'v'Y' 1976 UCS CIE"""

    color_Luv: Unit.ValueType = ...  # 74
    """L*u*v CIELUV"""

    color_Lab: Unit.ValueType = ...  # 75
    """L*a*b CIELAB"""

    color_LCh: Unit.ValueType = ...  # 76
    """L*C*h  CIELAB"""

    color_rgb: Unit.ValueType = ...  # 77
    """rgb"""

    color_rgba: Unit.ValueType = ...  # 79
    """rgba"""

    nanometers: Unit.ValueType = ...  # 120
    """nm"""

    micrometers: Unit.ValueType = ...  # 121
    """um"""

    millimeters: Unit.ValueType = ...  # 122
    """mm"""

    meters: Unit.ValueType = ...  # 123
    """m"""

    radians: Unit.ValueType = ...  # 124
    """rad"""

    degrees: Unit.ValueType = ...  # 125
    """deg"""

    steradians: Unit.ValueType = ...  # 126
    """sr"""

    ray_per_pixel: Unit.ValueType = ...  # 127
    """rays/pixel"""

class Unit(_Unit, metaclass=_UnitEnumTypeWrapper):
    """////////////
    MESSAGES //
    ////////////

    Units used in Speos data
    """
    pass

watts: Unit.ValueType = ...  # 0
"""W"""

watts_per_square_meters: Unit.ValueType = ...  # 1
"""W/(m2)"""

watts_per_steradians: Unit.ValueType = ...  # 2
"""W/(sr)"""

watts_per_nanometers: Unit.ValueType = ...  # 3
"""W/(nm)"""

watts_per_square_meters_steradians: Unit.ValueType = ...  # 4
"""W/(m2.sr)"""

watts_per_steradians_nanometers: Unit.ValueType = ...  # 5
"""W/(sr.nm)"""

watts_per_square_meters_nanometers: Unit.ValueType = ...  # 6
"""W/(m2.nm)"""

joules: Unit.ValueType = ...  # 16
"""J"""

joules_per_nanometers: Unit.ValueType = ...  # 17
"""J/(nm)"""

joules_per_square_meters: Unit.ValueType = ...  # 18
"""J/(m2)"""

joules_per_square_meters_nanometers: Unit.ValueType = ...  # 19
"""J/(m2.nm)"""

luxes: Unit.ValueType = ...  # 29
"""lx"""

luxes_seconds: Unit.ValueType = ...  # 30
"""lx.s"""

luxes_per_nanometers: Unit.ValueType = ...  # 31
"""lx.s/(nm)"""

luxes_seconds_per_nanometers: Unit.ValueType = ...  # 32
"""lx.s/(nm)"""

candelas: Unit.ValueType = ...  # 42
"""cd"""

candelas_per_square_meters: Unit.ValueType = ...  # 43
"""cd/(m2)"""

candelas_per_nanometers: Unit.ValueType = ...  # 44
"""cd/(m2)"""

candelas_per_squaremeters_nanometers: Unit.ValueType = ...  # 45
"""cd/(m2.nm)"""

lumens: Unit.ValueType = ...  # 55
"""lm"""

lumens_seconds: Unit.ValueType = ...  # 56
"""lm.s"""

lumens_per_nanometers: Unit.ValueType = ...  # 57
"""lm/(nm)"""

lumens_per_square_meters_nanometers: Unit.ValueType = ...  # 49
"""lm/(m2.nm)"""

percent: Unit.ValueType = ...  # 60
"""%"""

color_XYZ: Unit.ValueType = ...  # 70
"""XYZ CIE"""

color_xyY: Unit.ValueType = ...  # 71
"""xy CIE"""

color_uvY: Unit.ValueType = ...  # 72
"""uvY 1960 UCS CIE"""

color_uvY_prime: Unit.ValueType = ...  # 73
"""u'v'Y' 1976 UCS CIE"""

color_Luv: Unit.ValueType = ...  # 74
"""L*u*v CIELUV"""

color_Lab: Unit.ValueType = ...  # 75
"""L*a*b CIELAB"""

color_LCh: Unit.ValueType = ...  # 76
"""L*C*h  CIELAB"""

color_rgb: Unit.ValueType = ...  # 77
"""rgb"""

color_rgba: Unit.ValueType = ...  # 79
"""rgba"""

nanometers: Unit.ValueType = ...  # 120
"""nm"""

micrometers: Unit.ValueType = ...  # 121
"""um"""

millimeters: Unit.ValueType = ...  # 122
"""mm"""

meters: Unit.ValueType = ...  # 123
"""m"""

radians: Unit.ValueType = ...  # 124
"""rad"""

degrees: Unit.ValueType = ...  # 125
"""deg"""

steradians: Unit.ValueType = ...  # 126
"""sr"""

ray_per_pixel: Unit.ValueType = ...  # 127
"""rays/pixel"""

global___Unit = Unit


class _Magnitude:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _MagnitudeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Magnitude.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    irradiance: Magnitude.ValueType = ...  # 0
    """radiometric irradiance"""

    illuminance: Magnitude.ValueType = ...  # 1
    """photometric irradiance"""

    spectral_irradiance: Magnitude.ValueType = ...  # 2
    """spectral radiometric irradiance"""

    spectral_illuminance: Magnitude.ValueType = ...  # 3
    """spectral photometric irradiance"""

    radiance: Magnitude.ValueType = ...  # 4
    """radiometric radiance"""

    luminance: Magnitude.ValueType = ...  # 5
    """photometric radiance"""

    spectral_radiance: Magnitude.ValueType = ...  # 6
    """spectral radiometric radiance"""

    spectral_luminance: Magnitude.ValueType = ...  # 7
    """spectral photometric radiance"""

    radiant_intensity: Magnitude.ValueType = ...  # 8
    """radiometric intensity"""

    luminous_intensity: Magnitude.ValueType = ...  # 9
    """photometric intensity"""

    spectral_radiant_intensity: Magnitude.ValueType = ...  # 10
    """spectral radiometric intensity"""

    spectral_luminous_intensity: Magnitude.ValueType = ...  # 11
    """spectral photometric intensity"""

    exposure: Magnitude.ValueType = ...  # 12
    """radiometric exposure"""

    luminous_exposure: Magnitude.ValueType = ...  # 13
    """photometric exposure"""

    spectral_exposure: Magnitude.ValueType = ...  # 14
    """spectral radiometric exposure"""

    spectral_luminous_exposure: Magnitude.ValueType = ...  # 15
    """spectral photometric exposure"""

    radiant_flux: Magnitude.ValueType = ...  # 16
    """radiometric flux"""

    luminous_flux: Magnitude.ValueType = ...  # 17
    """photometric flux"""

    ratio: Magnitude.ValueType = ...  # 27
    """magnitude ratio"""

    color: Magnitude.ValueType = ...  # 37
    """color"""

    ray_sampling: Magnitude.ValueType = ...  # 38
    """rays sampling"""

class Magnitude(_Magnitude, metaclass=_MagnitudeEnumTypeWrapper):
    """magnitudes in Speos data"""
    pass

irradiance: Magnitude.ValueType = ...  # 0
"""radiometric irradiance"""

illuminance: Magnitude.ValueType = ...  # 1
"""photometric irradiance"""

spectral_irradiance: Magnitude.ValueType = ...  # 2
"""spectral radiometric irradiance"""

spectral_illuminance: Magnitude.ValueType = ...  # 3
"""spectral photometric irradiance"""

radiance: Magnitude.ValueType = ...  # 4
"""radiometric radiance"""

luminance: Magnitude.ValueType = ...  # 5
"""photometric radiance"""

spectral_radiance: Magnitude.ValueType = ...  # 6
"""spectral radiometric radiance"""

spectral_luminance: Magnitude.ValueType = ...  # 7
"""spectral photometric radiance"""

radiant_intensity: Magnitude.ValueType = ...  # 8
"""radiometric intensity"""

luminous_intensity: Magnitude.ValueType = ...  # 9
"""photometric intensity"""

spectral_radiant_intensity: Magnitude.ValueType = ...  # 10
"""spectral radiometric intensity"""

spectral_luminous_intensity: Magnitude.ValueType = ...  # 11
"""spectral photometric intensity"""

exposure: Magnitude.ValueType = ...  # 12
"""radiometric exposure"""

luminous_exposure: Magnitude.ValueType = ...  # 13
"""photometric exposure"""

spectral_exposure: Magnitude.ValueType = ...  # 14
"""spectral radiometric exposure"""

spectral_luminous_exposure: Magnitude.ValueType = ...  # 15
"""spectral photometric exposure"""

radiant_flux: Magnitude.ValueType = ...  # 16
"""radiometric flux"""

luminous_flux: Magnitude.ValueType = ...  # 17
"""photometric flux"""

ratio: Magnitude.ValueType = ...  # 27
"""magnitude ratio"""

color: Magnitude.ValueType = ...  # 37
"""color"""

ray_sampling: Magnitude.ValueType = ...  # 38
"""rays sampling"""

global___Magnitude = Magnitude


class DataDoubles(google.protobuf.message.Message):
    """arrays values of doubles"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """raw values"""
        pass
    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.float]] = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataDoubles = DataDoubles

class DataFloats(google.protobuf.message.Message):
    """arrays values of floats"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """raw values"""
        pass
    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.float]] = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataFloats = DataFloats

class DataIntegers64(google.protobuf.message.Message):
    """arrays values of integers"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """raw values"""
        pass
    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataIntegers64 = DataIntegers64

class DataIntegers32(google.protobuf.message.Message):
    """arrays values of integers"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """raw values"""
        pass
    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataIntegers32 = DataIntegers32

class DataUIntegers64(google.protobuf.message.Message):
    """arrays values of integers"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """raw values"""
        pass
    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataUIntegers64 = DataUIntegers64

class DataUIntegers32(google.protobuf.message.Message):
    """arrays values of integers"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """raw values"""
        pass
    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataUIntegers32 = DataUIntegers32

class DataBytes(google.protobuf.message.Message):
    """raw buffer in bytes, to send any kind of data"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    MAGNITUDE_SIZE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    MAGNITUDE_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    values: builtins.bytes = ...
    """raw values"""

    magnitude_size: builtins.int = ...
    """number of values needed to describe the magnitude (ex : simple value=1 / vector=3 / color_rgb=3 ...)"""

    @property
    def dimensions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """size of dimensions where the magnitudes are applied = total number of dimension representation of the data, each value representing its dimension size"""
        pass
    magnitude: global___Magnitude.ValueType = ...
    """magnitude of the value of what we have received"""

    unit: global___Unit.ValueType = ...
    """units of the values"""

    def __init__(self,
        *,
        values : builtins.bytes = ...,
        magnitude_size : builtins.int = ...,
        dimensions : typing.Optional[typing.Iterable[builtins.int]] = ...,
        magnitude : global___Magnitude.ValueType = ...,
        unit : global___Unit.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","magnitude",b"magnitude","magnitude_size",b"magnitude_size","unit",b"unit","values",b"values"]) -> None: ...
global___DataBytes = DataBytes
