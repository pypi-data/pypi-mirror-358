# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ansys/api/speos/sensor/v1/camera_sensor.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ansys.api.speos.sensor.v1 import common_pb2 as ansys_dot_api_dot_speos_dot_sensor_dot_v1_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-ansys/api/speos/sensor/v1/camera_sensor.proto\x12\x19\x61nsys.api.speos.sensor.v1\x1a&ansys/api/speos/sensor/v1/common.proto\"\x1d\n\x1bSensorCameraBalanceModeNone\"\"\n SensorCameraBalanceModeGreyworld\"[\n SensorCameraBalanceModeUserwhite\x12\x10\n\x08red_gain\x18\x01 \x01(\x01\x12\x12\n\ngreen_gain\x18\x02 \x01(\x01\x12\x11\n\tblue_gain\x18\x03 \x01(\x01\"}\n\x1eSensorCameraBalanceModeDisplay\x12\x1c\n\x14red_display_file_uri\x18\x01 \x01(\t\x12\x1e\n\x16green_display_file_uri\x18\x02 \x01(\t\x12\x1d\n\x15\x62lue_display_file_uri\x18\x03 \x01(\t\"\xfa\x03\n\x1aSensorCameraColorModeColor\x12\x1d\n\x15red_spectrum_file_uri\x18\x01 \x01(\t\x12\x1f\n\x17green_spectrum_file_uri\x18\x02 \x01(\t\x12\x1e\n\x16\x62lue_spectrum_file_uri\x18\x03 \x01(\t\x12S\n\x11\x62\x61lance_mode_none\x18\x08 \x01(\x0b\x32\x36.ansys.api.speos.sensor.v1.SensorCameraBalanceModeNoneH\x00\x12]\n\x16\x62\x61lance_mode_greyworld\x18\t \x01(\x0b\x32;.ansys.api.speos.sensor.v1.SensorCameraBalanceModeGreyworldH\x00\x12]\n\x16\x62\x61lance_mode_userwhite\x18\n \x01(\x0b\x32;.ansys.api.speos.sensor.v1.SensorCameraBalanceModeUserwhiteH\x00\x12Y\n\x14\x62\x61lance_mode_display\x18\x0b \x01(\x0b\x32\x39.ansys.api.speos.sensor.v1.SensorCameraBalanceModeDisplayH\x00\x42\x0e\n\x0c\x62\x61lance_mode\"?\n\"SensorCameraColorModeMonochromatic\x12\x19\n\x11spectrum_file_uri\x18\x01 \x01(\t\"\x1b\n\x19SensorCameraModeGeometric\"\xe8\x03\n\x1bSensorCameraModePhotometric\x12\x1f\n\x17\x61\x63quisition_integration\x18\x01 \x01(\x01\x12\x1c\n\x14\x61\x63quisition_lag_time\x18\x02 \x01(\x01\x12\x1e\n\x16transmittance_file_uri\x18\x03 \x01(\t\x12\x18\n\x10gamma_correction\x18\x04 \x01(\x02\x12\x44\n\x08png_bits\x18\x05 \x01(\x0e\x32\x32.ansys.api.speos.sensor.v1.EnumSensorCameraPNGBits\x12Q\n\x10\x63olor_mode_color\x18\x06 \x01(\x0b\x32\x35.ansys.api.speos.sensor.v1.SensorCameraColorModeColorH\x00\x12\x61\n\x18\x63olor_mode_monochromatic\x18\x07 \x01(\x0b\x32=.ansys.api.speos.sensor.v1.SensorCameraColorModeMonochromaticH\x00\x12\x46\n\x11wavelengths_range\x18\x0c \x01(\x0b\x32+.ansys.api.speos.sensor.v1.WavelengthsRangeB\x0c\n\ncolor_mode\"\x99\x03\n\x14\x43\x61meraSensorTemplate\x12U\n\x15sensor_mode_geometric\x18\x02 \x01(\x0b\x32\x34.ansys.api.speos.sensor.v1.SensorCameraModeGeometricH\x00\x12Y\n\x17sensor_mode_photometric\x18\x03 \x01(\x0b\x32\x36.ansys.api.speos.sensor.v1.SensorCameraModePhotometricH\x00\x12\x14\n\x0c\x66ocal_length\x18\x04 \x01(\x01\x12\x17\n\x0fimager_distance\x18\x05 \x01(\x01\x12\x10\n\x08\x66_number\x18\x06 \x01(\x01\x12\x1b\n\x13\x64istorsion_file_uri\x18\x07 \x01(\t\x12\x1b\n\x13\x64istortion_file_uri\x18\x0c \x01(\t\x12\x12\n\nhorz_pixel\x18\x08 \x01(\r\x12\x12\n\nvert_pixel\x18\t \x01(\r\x12\r\n\x05width\x18\n \x01(\x01\x12\x0e\n\x06height\x18\x0b \x01(\x01\x42\r\n\x0bsensor_mode*I\n\x17\x45numSensorCameraPNGBits\x12\n\n\x06PNG_08\x10\x00\x12\n\n\x06PNG_10\x10\x01\x12\n\n\x06PNG_12\x10\x02\x12\n\n\x06PNG_16\x10\x03\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ansys.api.speos.sensor.v1.camera_sensor_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ENUMSENSORCAMERAPNGBITS._serialized_start=1909
  _ENUMSENSORCAMERAPNGBITS._serialized_end=1982
  _SENSORCAMERABALANCEMODENONE._serialized_start=116
  _SENSORCAMERABALANCEMODENONE._serialized_end=145
  _SENSORCAMERABALANCEMODEGREYWORLD._serialized_start=147
  _SENSORCAMERABALANCEMODEGREYWORLD._serialized_end=181
  _SENSORCAMERABALANCEMODEUSERWHITE._serialized_start=183
  _SENSORCAMERABALANCEMODEUSERWHITE._serialized_end=274
  _SENSORCAMERABALANCEMODEDISPLAY._serialized_start=276
  _SENSORCAMERABALANCEMODEDISPLAY._serialized_end=401
  _SENSORCAMERACOLORMODECOLOR._serialized_start=404
  _SENSORCAMERACOLORMODECOLOR._serialized_end=910
  _SENSORCAMERACOLORMODEMONOCHROMATIC._serialized_start=912
  _SENSORCAMERACOLORMODEMONOCHROMATIC._serialized_end=975
  _SENSORCAMERAMODEGEOMETRIC._serialized_start=977
  _SENSORCAMERAMODEGEOMETRIC._serialized_end=1004
  _SENSORCAMERAMODEPHOTOMETRIC._serialized_start=1007
  _SENSORCAMERAMODEPHOTOMETRIC._serialized_end=1495
  _CAMERASENSORTEMPLATE._serialized_start=1498
  _CAMERASENSORTEMPLATE._serialized_end=1907
# @@protoc_insertion_point(module_scope)
