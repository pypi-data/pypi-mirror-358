"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.speos.job.v2.job_pb2
import ansys.api.speos.results.v1.ray_path_pb2
import grpc
import typing

class JobsManagerStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.Create_Request,
        ansys.api.speos.job.v2.job_pb2.Create_Response] = ...
    """Create a Job"""

    Read: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.Read_Request,
        ansys.api.speos.job.v2.job_pb2.Read_Response] = ...
    """Read a Job"""

    Update: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.Update_Request,
        ansys.api.speos.job.v2.job_pb2.Update_Response] = ...
    """Update a Job"""

    Delete: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.Delete_Request,
        ansys.api.speos.job.v2.job_pb2.Delete_Response] = ...
    """Delete a Job"""

    List: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.List_Request,
        ansys.api.speos.job.v2.job_pb2.List_Response] = ...
    """List all Jobs in manager"""


class JobsManagerServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.speos.job.v2.job_pb2.Create_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.Create_Response:
        """Create a Job"""
        pass

    @abc.abstractmethod
    def Read(self,
        request: ansys.api.speos.job.v2.job_pb2.Read_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.Read_Response:
        """Read a Job"""
        pass

    @abc.abstractmethod
    def Update(self,
        request: ansys.api.speos.job.v2.job_pb2.Update_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.Update_Response:
        """Update a Job"""
        pass

    @abc.abstractmethod
    def Delete(self,
        request: ansys.api.speos.job.v2.job_pb2.Delete_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.Delete_Response:
        """Delete a Job"""
        pass

    @abc.abstractmethod
    def List(self,
        request: ansys.api.speos.job.v2.job_pb2.List_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.List_Response:
        """List all Jobs in manager"""
        pass


def add_JobsManagerServicer_to_server(servicer: JobsManagerServicer, server: grpc.Server) -> None: ...

class JobActionsStub:
    """Service to handle a job"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetState: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.GetState_Request,
        ansys.api.speos.job.v2.job_pb2.GetState_Response] = ...
    """Get the state of a Job"""

    Start: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.Start_Request,
        ansys.api.speos.job.v2.job_pb2.Start_Response] = ...
    """Start a Job"""

    Stop: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.Stop_Request,
        ansys.api.speos.job.v2.job_pb2.Stop_Response] = ...
    """Stop a Job"""

    GetError: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.GetError_Request,
        ansys.api.speos.job.v2.job_pb2.GetError_Response] = ...
    """Get error of a Job"""

    GetResults: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.GetResults_Request,
        ansys.api.speos.job.v2.job_pb2.GetResults_Response] = ...
    """Get the results of a Job"""

    GetInformation: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.GetInformation_Request,
        ansys.api.speos.job.v2.job_pb2.GetInformation_Response] = ...
    """Get Information about a Job"""

    GetRayPaths: grpc.UnaryStreamMultiCallable[
        ansys.api.speos.job.v2.job_pb2.GetRayPaths_Request,
        ansys.api.speos.results.v1.ray_path_pb2.RayPath] = ...
    """Get RayPaths generated by a Job based on an interactive simulation"""

    GetProgressStatus: grpc.UnaryUnaryMultiCallable[
        ansys.api.speos.job.v2.job_pb2.GetProgressStatus_Request,
        ansys.api.speos.job.v2.job_pb2.GetProgressStatus_Response] = ...
    """Get progress status about a Job"""


class JobActionsServicer(metaclass=abc.ABCMeta):
    """Service to handle a job"""
    @abc.abstractmethod
    def GetState(self,
        request: ansys.api.speos.job.v2.job_pb2.GetState_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.GetState_Response:
        """Get the state of a Job"""
        pass

    @abc.abstractmethod
    def Start(self,
        request: ansys.api.speos.job.v2.job_pb2.Start_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.Start_Response:
        """Start a Job"""
        pass

    @abc.abstractmethod
    def Stop(self,
        request: ansys.api.speos.job.v2.job_pb2.Stop_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.Stop_Response:
        """Stop a Job"""
        pass

    @abc.abstractmethod
    def GetError(self,
        request: ansys.api.speos.job.v2.job_pb2.GetError_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.GetError_Response:
        """Get error of a Job"""
        pass

    @abc.abstractmethod
    def GetResults(self,
        request: ansys.api.speos.job.v2.job_pb2.GetResults_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.GetResults_Response:
        """Get the results of a Job"""
        pass

    @abc.abstractmethod
    def GetInformation(self,
        request: ansys.api.speos.job.v2.job_pb2.GetInformation_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.GetInformation_Response:
        """Get Information about a Job"""
        pass

    @abc.abstractmethod
    def GetRayPaths(self,
        request: ansys.api.speos.job.v2.job_pb2.GetRayPaths_Request,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.speos.results.v1.ray_path_pb2.RayPath]:
        """Get RayPaths generated by a Job based on an interactive simulation"""
        pass

    @abc.abstractmethod
    def GetProgressStatus(self,
        request: ansys.api.speos.job.v2.job_pb2.GetProgressStatus_Request,
        context: grpc.ServicerContext,
    ) -> ansys.api.speos.job.v2.job_pb2.GetProgressStatus_Response:
        """Get progress status about a Job"""
        pass


def add_JobActionsServicer_to_server(servicer: JobActionsServicer, server: grpc.Server) -> None: ...
