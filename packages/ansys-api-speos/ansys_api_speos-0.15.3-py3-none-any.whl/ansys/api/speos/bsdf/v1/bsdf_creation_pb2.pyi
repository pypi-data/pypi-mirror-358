"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Bsdf180InputData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUT_FRONT_BSDF_FILE_NAME_FIELD_NUMBER: builtins.int
    INPUT_OPPOSITE_BSDF_FILE_NAME_FIELD_NUMBER: builtins.int
    OUTPUT_FILE_NAME_FIELD_NUMBER: builtins.int
    input_front_bsdf_file_name: typing.Text = ...
    """*.coated *.brdf *.anisotropicbsdf *.scattering"""

    input_opposite_bsdf_file_name: typing.Text = ...
    """*.coated *.brdf *.anisotropicbsdf *.scattering"""

    output_file_name: typing.Text = ...
    """*.bsdf180"""

    def __init__(self,
        *,
        input_front_bsdf_file_name : typing.Text = ...,
        input_opposite_bsdf_file_name : typing.Text = ...,
        output_file_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_front_bsdf_file_name",b"input_front_bsdf_file_name","input_opposite_bsdf_file_name",b"input_opposite_bsdf_file_name","output_file_name",b"output_file_name"]) -> None: ...
global___Bsdf180InputData = Bsdf180InputData

class SpectralBsdfInputData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Sample(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        WAVELENGTH_FIELD_NUMBER: builtins.int
        FILE_NAME_FIELD_NUMBER: builtins.int
        wavelength: builtins.float = ...
        """nanometers"""

        file_name: typing.Text = ...
        """*.anisotropicbsdf"""

        def __init__(self,
            *,
            wavelength : builtins.float = ...,
            file_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["file_name",b"file_name","wavelength",b"wavelength"]) -> None: ...

    INPUT_ANISOTROPIC_SAMPLES_FIELD_NUMBER: builtins.int
    OUTPUT_FILE_NAME_FIELD_NUMBER: builtins.int
    @property
    def input_anisotropic_samples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SpectralBsdfInputData.Sample]: ...
    output_file_name: typing.Text = ...
    """*.brdf"""

    def __init__(self,
        *,
        input_anisotropic_samples : typing.Optional[typing.Iterable[global___SpectralBsdfInputData.Sample]] = ...,
        output_file_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_anisotropic_samples",b"input_anisotropic_samples","output_file_name",b"output_file_name"]) -> None: ...
global___SpectralBsdfInputData = SpectralBsdfInputData

class AnisotropicBsdfInputData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Sample(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ANISOTROPIC_ANGLE_FIELD_NUMBER: builtins.int
        FILE_NAME_FIELD_NUMBER: builtins.int
        anisotropic_angle: builtins.float = ...
        """radians in [0, 2*pi]"""

        file_name: typing.Text = ...
        """*.anisotropicbsdf"""

        def __init__(self,
            *,
            anisotropic_angle : builtins.float = ...,
            file_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["anisotropic_angle",b"anisotropic_angle","file_name",b"file_name"]) -> None: ...

    INPUT_ANISOTROPIC_BSDF_SAMPLES_FIELD_NUMBER: builtins.int
    FIX_DISPARITY_FIELD_NUMBER: builtins.int
    OUTPUT_FILE_NAME_FIELD_NUMBER: builtins.int
    @property
    def input_anisotropic_bsdf_samples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnisotropicBsdfInputData.Sample]: ...
    fix_disparity: builtins.bool = ...
    output_file_name: typing.Text = ...
    """*.anisotropicbsdf"""

    def __init__(self,
        *,
        input_anisotropic_bsdf_samples : typing.Optional[typing.Iterable[global___AnisotropicBsdfInputData.Sample]] = ...,
        fix_disparity : builtins.bool = ...,
        output_file_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fix_disparity",b"fix_disparity","input_anisotropic_bsdf_samples",b"input_anisotropic_bsdf_samples","output_file_name",b"output_file_name"]) -> None: ...
global___AnisotropicBsdfInputData = AnisotropicBsdfInputData
