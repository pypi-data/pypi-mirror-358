# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  # release: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#release
  push:

    branches:
      - main
    # tags:
    #   - v[0-9]+.[0-9]+.[0-9]+
    # paths:
    #   - VERSION.txt

permissions:
  contents: read

# https://github.com/astral-sh/trusted-publishing-examples/blob/main/.github/workflows/release.yml
jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.10", "3.11", "3.12"]
  #   steps:
  #     - uses: actions/checkout@v4
  #     # https://github.com/astral-sh/setup-uv
  #     - name: Install the latest version of uv
  #       uses: astral-sh/setup-uv@v6
  #       with:
  #         version: "latest"
  #         python-version: ${{ matrix.python-version }}
  #         activate-environment: true
  #     - name: Test with python ${{ matrix.python-version }}
  #       run: uv run --frozen pytest

  deploy:
    runs-on: ubuntu-latest
    # Environment and permissions trusted publishing.
    environment:
      # Create this environment in the GitHub repository under Settings -> Environments
      name: release
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/github-actions-create-tag
      # - name: Bump version and push tag
      #   uses: laputansoft/github-tag-action@v4.6
      #   with:
      #     github_token: ${{ env.github-token }}
      #     tag: ${{ steps.package-version.outputs.version }}
      # https://github.com/astral-sh/setup-uv
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: 3.11
          activate-environment: true
      - run: uv build
      - name: Publish on PYPI
        run: uv publish --trusted-publishing always

    # steps:
    # - uses: actions/checkout@v4
    # - name: Set up Python
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: '3.x'
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install build
    # - name: Build package
    #   run: python -m build
    # - name: Publish package
    #   uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}
