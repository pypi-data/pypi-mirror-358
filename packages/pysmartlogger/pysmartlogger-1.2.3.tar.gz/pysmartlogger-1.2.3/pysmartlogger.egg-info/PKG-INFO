Metadata-Version: 2.4
Name: pysmartlogger
Version: 1.2.3
Summary: A cross-platform Python library that adds colorful logging capabilities to the standard logging module
Home-page: https://github.com/DeepPythonist/smartlogger
Author: Mohammad Rasol Esfandiari
Author-email: Mohammad Rasol Esfandiari <mrasolesfandiari@gmail.com>
Maintainer-email: Mohammad Rasol Esfandiari <mrasolesfandiari@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/DeepPythonist/smartlogger
Project-URL: Repository, https://github.com/DeepPythonist/smartlogger
Project-URL: Issues, https://github.com/DeepPythonist/smartlogger/issues
Project-URL: Changelog, https://github.com/DeepPythonist/smartlogger/blob/master/CHANGELOG.md
Keywords: logging,colors,terminal,cross-platform,python
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Logging
Classifier: Topic :: Terminals
Classifier: Environment :: Console
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# SmartLogger

A cross-platform Python library that adds beautiful, colorful logging capabilities to the standard Python logging module with zero configuration required.

## Features

- üé® **Colorful Logs**: Each log level gets its distinctive color
- üîß **Zero Configuration**: Just import and it works automatically  
- üñ•Ô∏è **Cross-Platform**: Works on Windows, macOS, and Linux
- üèÉ **Performance Optimized**: Minimal overhead on your application
- üõ°Ô∏è **Safe**: Won't break existing logging functionality
- üì± **Smart Detection**: Automatically detects terminal capabilities

## Installation

```bash
pip install pysmartlogger
```

## Usage

Simply import `smartlogger.auto` and your existing logging will become colorful:

```python
import logging
import smartlogger.auto

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

logger.debug("This is a debug message")     # Blue
logger.info("This is an info message")      # Green  
logger.warning("This is a warning message") # Yellow
logger.error("This is an error message")    # Red
logger.critical("This is a critical message") # Bright Red
```

## Color Scheme

| Level | Color | Description |
|-------|-------|-------------|
| DEBUG | Blue | Development and debugging information |
| INFO | Green | General information messages |
| WARNING | Yellow | Warning messages for potential issues |
| ERROR | Red | Error messages for failures |
| CRITICAL | Bright Red | Critical errors requiring immediate attention |

## Compatibility

- **Python**: 3.8+
- **Operating Systems**: Windows, macOS, Linux
- **Terminals**: CMD, PowerShell, bash, zsh, fish
- **IDEs**: VS Code, PyCharm, Jupyter, and more

## How It Works

SmartLogger uses monkey-patching to enhance the standard logging module. When you import `smartlogger.auto`, it automatically:

1. Detects if your environment supports colors
2. Patches the logging formatters to add color codes
3. Maintains full compatibility with existing logging configuration

## License

MIT License - see [LICENSE](LICENSE) file for details.

## Author

**Mohammad Rasol Esfandiari**  
- GitHub: [@DeepPythonist](https://github.com/DeepPythonist)
- Email: mrasolesfandiari@gmail.com 
