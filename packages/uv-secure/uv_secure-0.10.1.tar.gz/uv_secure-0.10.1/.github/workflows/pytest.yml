name: Pytest
on:
  pull_request:
jobs:
  pytest-with-coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        extra: ["none", "faster-async"]
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project (no extras)
        if: matrix.extra == 'none'
        run: uv sync
      - name: Install the project (faster-async)
        if: matrix.extra == 'faster-async'
        run: uv sync --extra faster-async
      - name: Run tests with Coverage
        run: uv run pytest tests --cov=. --cov-branch --cov-report=term
      - name: Upload coverage artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: coverage-${{ matrix.os }}-python-${{ matrix.python-version }}-extra-${{ matrix.extra }}
          path: .coverage
          include-hidden-files: true
  combine-and-comment:
    runs-on: ubuntu-latest
    needs: pytest-with-coverage
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.13"
      - name: Install the project
        run: uv sync --all-extras
      - name: Download all coverage artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          path: coverage
      - name: Combine coverage data
        run: |
          set -o pipefail
          uv run coverage combine coverage/*-python-*-extra-*/.coverage
          uv run coverage report | tee coverage_summary.txt
      - name: Prepare Comment Body
        run: |
          echo '### Coverage Report' >> comment_body.md
          echo '```txt' >> comment_body.md
          cat coverage_summary.txt >> comment_body.md
          echo '' >> comment_body.md
          echo '```' >> comment_body.md
      - name: Find Coverage Report Comment
        if: github.event.pull_request.head.repo.full_name == github.repository
        id: find-comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: '### Coverage Report'
      - name: Create or Update Coverage Comment
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: comment_body.md
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
      - name: Display Coverage Report in Logs
        run: cat comment_body.md
