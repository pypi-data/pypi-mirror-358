[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "behavioural_contracts"
version = "0.1.2"
description = "A Python package for enforcing behavioural contracts in AI agents"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Andrew Whitehouse", email = "andrewswhitehouse@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "flake8>=6.1.0",
    "tomli>=2.0.0",  # For Python < 3.11
]

[project.urls]
Homepage = "https://github.com/yourusername/behavioural_contracts"
Documentation = "https://github.com/yourusername/behavioural_contracts#readme"
Repository = "https://github.com/yourusername/behavioural_contracts.git"
Issues = "https://github.com/yourusername/behavioural_contracts/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=behavioural_contracts"

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line length violations
    "B008",  # do not perform function calls in argument defaults
    "RUF022",  # __all__ sorting
]

[tool.ruff.lint.isort]
known-first-party = ["behavioural_contracts"]
