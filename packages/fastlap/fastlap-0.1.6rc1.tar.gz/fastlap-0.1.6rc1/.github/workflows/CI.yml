name: Publish

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always
  MATURIN_PYPI_MANYLINUX: 2014

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build wheels
        run: maturin build --release --target ${{ matrix.target }} --out dist
        env:
          CFLAGS: '-march=core2'  # For better compatibility

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'v')
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          verbose: true