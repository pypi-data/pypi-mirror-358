Metadata-Version: 2.4
Name: biql
Version: 0.1.0
Summary: BIDS Query Language - A powerful SQL-like query language for BIDS neuroimaging datasets
Home-page: https://github.com/astewartau/biql
Author: Ashley Stewart
License: MIT License
        
        Copyright (c) 2024 BIQL Development Team
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/astewartau/biql
Project-URL: Documentation, https://astewartau.github.io/biql/
Project-URL: Repository, https://github.com/astewartau/biql
Project-URL: Bug Reports, https://github.com/astewartau/biql/issues
Keywords: bids,neuroimaging,query,language,sql,medical-imaging,neuroscience
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# BIQL - BIDS Query Language

A powerful query language for Brain Imaging Data Structure (BIDS) datasets that allows you to search, filter, and extract information using SQL-like syntax.

## Features

- **Entity-based queries**: Search by BIDS entities (subject, session, task, run, etc.)
- **Logical operators**: AND, OR, NOT with proper bracketing support
- **Advanced filtering**: Wildcards, regular expressions, range queries
- **Metadata queries**: Access JSON sidecar metadata with dot notation
- **Multiple output formats**: JSON, table, CSV, file paths
- **SQL-like syntax**: SELECT, WHERE, GROUP BY, ORDER BY clauses

## Installation

```bash
pip install biql
```

## Quick Start

```bash
# Find all T1w anatomical files
biql "suffix=T1w"

# Find functional files for specific subjects
biql "subject IN ['01', '02'] AND datatype=func"

# Complex query with metadata filtering
biql "task=rest AND metadata.RepetitionTime<3.0"

# Select specific fields and format as table
biql "SELECT subject, session, filepath WHERE datatype=anat FORMAT table"
```

## Query Language Syntax

### Basic Entity Queries
```sql
subject=01
task=rest
datatype=func
run=[1:5]
```

### Logical Operations
```sql
subject=01 AND task=rest
(subject=01 OR subject=02) AND datatype=func
NOT task=localizer
```

### Wildcards and Patterns
```sql
subject=control*
task=*memory*
suffix~=/T[12]w/
```

### Metadata Queries
```sql
metadata.RepetitionTime<3.0
metadata.EchoTime=[0.01:0.05]
participants.age>18
```

### SELECT Clauses
```sql
SELECT subject, session, filepath WHERE task=rest
SELECT COUNT(*) GROUP BY subject
SELECT DISTINCT datatype
```

## Documentation

For complete documentation, examples, and API reference, visit: [https://biql.readthedocs.io](https://biql.readthedocs.io)

## License

MIT License - see LICENSE file for details.
