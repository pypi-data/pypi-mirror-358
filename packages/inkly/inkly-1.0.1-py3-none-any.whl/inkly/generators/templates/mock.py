"""„É¢„ÉÉ„ÇØ„Çµ„Éº„Éê„ÉºÁîüÊàêÁî®„ÉÜ„É≥„Éó„É¨„Éº„Éà"""

# „É¢„ÉÉ„ÇØ„Çµ„Éº„Éê„Éº„ÉÜ„É≥„Éó„É¨„Éº„Éà
MOCK_SERVER_TEMPLATE = '''"""
Auto-generated mock server for API testing.
Do not edit this file directly. Make changes to the original OpenAPI specification.

Generated by inkly v{{ version | default("1.0.0") }}
"""

from flask import Flask, request, jsonify
from flask_cors import CORS
import random
from datetime import datetime
from typing import Any, Dict, List

app = Flask(__name__)
CORS(app)

# Mock data generators
def generate_mock_response(endpoint: str, method: str) -> Dict[str, Any]:
    """Generate mock response based on endpoint and method"""

    # Sample mock data - you can customize this
    mock_data = {
        "id": random.randint(1, 1000),
        "name": f"Mock Item {random.randint(1, 100)}",
        "status": random.choice(["active", "inactive", "pending"]),
        "created_at": datetime.now().isoformat(),
        "description": "This is a mock response generated for testing"
    }

    if method == "GET" and "list" in endpoint.lower():
        return [mock_data for _ in range(random.randint(1, 5))]
    elif method == "DELETE":
        return {"message": "Resource deleted successfully"}
    else:
        return mock_data

{%- for endpoint in endpoints %}
@app.route("{{ endpoint.path }}", methods=["{{ endpoint.method | upper }}"])
def {{ endpoint.operation_id | lower | replace('/', '_') | replace('{', '') | replace('}', '') }}():
    """{{ endpoint.summary }}"""

    # Extract path parameters
{%- for param in endpoint.parameters %}
{%- if param.in == 'path' %}
    {{ param.name }} = request.view_args.get("{{ param.name }}")
{%- endif %}
{%- endfor %}

    # Extract query parameters
{%- for param in endpoint.parameters %}
{%- if param.in == 'query' %}
    {{ param.name }} = request.args.get("{{ param.name }}")
{%- endif %}
{%- endfor %}

    # Get request body for POST/PUT operations
{%- if endpoint.method | upper in ['POST', 'PUT', 'PATCH'] %}
    request_data = request.get_json() if request.is_json else {}
{%- endif %}

    # Generate mock response
    response_data = generate_mock_response("{{ endpoint.path }}", "{{ endpoint.method | upper }}")

    # Return appropriate status code
{%- if endpoint.method | upper == 'POST' %}
    return jsonify(response_data), 201
{%- elif endpoint.method | upper == 'DELETE' %}
    return jsonify(response_data), 204
{%- else %}
    return jsonify(response_data), 200
{%- endif %}

{%- endfor %}

@app.route("/health", methods=["GET"])
def health_check():
    """Health check endpoint"""
    return jsonify({
        "status": "healthy",
        "timestamp": datetime.now().isoformat(),
        "service": "Mock API Server"
    })

if __name__ == "__main__":
    print("üöÄ Starting Mock API Server...")
    print("üì° Server will be available at: http://localhost:8080")
    print("‚ù§Ô∏è  Health check: http://localhost:8080/health")
    app.run(host="0.0.0.0", port=8080, debug=True)
'''
