name: PyPI Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0

permissions:
  contents: write

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build hatchling

      - name: Build package
        run: python -m build

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in v${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "See [CHANGELOG.md](https://github.com/inkly-team/inkly/blob/main/CHANGELOG.md) for detailed changes." >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Installation" >> $GITHUB_OUTPUT
          echo '```bash' >> $GITHUB_OUTPUT
          echo "pip install inkly==${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release with assets
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          files: |
            ./dist/inkly-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
            ./dist/inkly-${{ steps.get_version.outputs.VERSION }}.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

      - name: Verify PyPI installation
        run: |
          sleep 120  # Wait for package to be available on PyPI
          pip install inkly==${{ steps.get_version.outputs.VERSION }}
          inkly --version
