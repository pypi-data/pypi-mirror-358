

subject = """(@rel="su" and not(%kijknoun%) and parent::node[(@cat="smain" or @cat="sv1" or @cat="ssub")])"""
questionmark = """(@pt="let" and @word="?")"""
exclamationmark = """(@pt="let" and @word="!")"""
periodmark = """(@pt="let" and @word=".")"""
topcontainsquestionmark = """(ancestor::node[@cat="top" and node[%questionmark%]])"""
topcontainsexclamationmark = """ (ancestor::node[@cat="top" and node[%exclamationmark%]])"""
topcontainsperiodmark = """ (ancestor::node[@cat="top" and node[%periodmark%]])"""

Ond = """node[%subject%]"""
FullOnd = """(%subject% or %erx%)"""

kijknoun = """((@pt="n" and @lemma="kijk") or node[@rel="hd" and @pt="n" and @lemma="kijk"] )"""

erx = """((@rel="mod" and @lemma="er" and ../node[@rel="su" and @begin>=../node[@rel="mod" and @lemma="er"]/@end]) or
          (@rel="mod" and @lemma="er" and ../node[@rel="su" and not(@pt) and not(@cat)])
         )
      """

impsubjectok = """(not(%Ond%) or (node[%subject% and %impsubject%] and (%impmodfound%  or %topcontainsexclamationmark%)))"""
impsubject = """(@rel="su" and (@word="jij" or @word="u"))"""

basicimperative = """(%normalimp% or %bareverbimp% )"""

bareverbimp = """(%wwimpok% and  %imprelok%  and parent::node[@cat="top"] and not(%topcontainsquestionmark%) and not(%topcontainsperiodmark%)) """
normalimp = """(@cat="sv1" and
					  not(%topcontainsquestionmark%) and 	
					  (not(%topcontainsperiodmark%) or %impmodfound%) and 	
                      %imprelok% and
 					 %impsubjectok% and 
					 node[%wwimpok%]
)
"""

vzdisguisedasadj = """(@pt="adj" and (@lemma="in" or @lemma="af" or @lemma="aan"))"""

wwimpok = """( %wwimpfeatok% and
         not(%modalframe%) and
		 %zijnimpok%       and
		 %potentialimpverb%
        )"""
		
wwimpfeatok = """(%wwimpfin% or %wwimpinf%)"""
wwimpfin = """(@rel="hd" and @pt="ww" and @pvtijd="tgw" and @pvagr="ev" and @wvorm="pv") """
wwimpinf = """(@rel="hd" and @pt="ww" and @wvorm="inf") """
modalframe = """(contains(@frame,"modal"))"""
zijnimpok = """(not(@lemma="zijn") or @word="wees" or @word="weest")"""
potentialimpverb = """(not(contains(@lemma,"moeten") or contains(@lemma,"hoeven") or
              contains(@lemma,"zullen") or contains(@lemma,"kunnen") or
              contains(@lemma,"mogen") or @lemma="hebben" or contains(@lemma, "_hebben") or contains(@lemma, "weten")
             )
         )"""
     
imprelok = """(@rel="--" or @rel="nucl")"""

basicimpmod = """(node[@rel="mod" and (@lemma="maar" or @lemma="eens")])"""

impmodfound = """(%basicimpmod% or node[%nonfinvc% and %basicimpmod%])"""
nonfincat = """(@cat="inf" or @cat="ppart")"""


nonfinvc = """(@rel="vc" and %nonfincat%) """

realcomplormodnode = """node[%realcomplormod%]"""
realcomplormod = """(not(%particlesvp%) and (not(%indexnode%) or %includeindexnode%) and not(%nonfinvc%) and not(@rel="hd"))"""
indexnode = """(@index and not (@cat or @pt or @pos))"""
indexnodecount = """(count(node[%indexnode%]))"""
includeindexnode = """(%indexnode% and  parent::node[@cat="ssub" and parent::node[@cat="rel" ]])"""
suindexnode = """(%indexnode% and @rel="su") """
nonfinindexnode = """(%indexnode% and parent::node[%nonfinvc%])"""
nonsuindexnode = """(%indexnode% and @rel!="su") """
nonsuindexnodecount = """(count(node[%nonsuindexnode%]))"""

fillednode = """node[not(%indexnode%)]"""

particlesvp = """(@rel="svp" and (@pt="vz" or @pt="bw") and not(%svpofhww%))"""

realcomplormodnodecount = """count(%realcomplormodnode% | node[%nonfinvc%]/%realcomplormodnode%)"""

wx = """(%basicimperative%
        and  %realcomplormodnodecount% <= 1)"""


wxy = """(%basicimperative%
        and  %realcomplormodnodecount% = 2) and not(node[%Tarsp_kijkVU%])"""


wxyz = """(%basicimperative%
        and  %realcomplormodnodecount% = 3)"""


wxyz5 = """(%basicimperative%
        and  %realcomplormodnodecount% = 4)"""


ynquery = """@cat="sv1" and
            (@rel="--" or @rel="dp" or %nofollowinghenucl%) and
            not(%topcontainsperiodmark%) and 
			not(%topcontainsexclamationmark%) and 
            node[@rel="hd" and @pt="ww" and @pvtijd !="conj" and (@stype="ynquestion" or %topcontainsquestionmark% ) ] and
            (node[@rel="su"] or %topcontainsquestionmark%)    and
            (not(%impmodfound%) or %topcontainsquestionmark% )			 
		  """	 
		 
nofollowinghenucl = """(@rel="nucl" and not(../node[@rel="tag" and (@lemma="hÃ¨" or @lemma="he") and @begin >= ../node[@rel="nucl"]/@end])) """ 
		 
wondx = """(%ynquery% and %realcomplormodnodecount% <= 2 )"""

wond4 = """(%ynquery% and %realcomplormodnodecount% = 3)"""

wond5plus = """(%ynquery% and %realcomplormodnodecount% >= 4)"""

onlythesearerealwords = """(count(.//node[%bxrealwordnode%]) = count(%allbxrealwordnodes%))"""


partofwhquestion = """((@cat="sv1" or @cat="ssub") and @rel="body" and parent::node[@cat="whq" or @cat="whsub" ]) """
declarative = """(@cat="smain" or (@cat="ssub" and not(%partofwhquestion%)) or (@cat="sv1" and not(%basicimperative%) and not(%ynquery%) and not(%partofwhquestion%)) )"""

Tarsp_OndB = """((%Ond% or node[@naamval="nomin"] or node[@cat and node[@rel="hd" and @naamval="nomin"]]) and  node[%Tarsp_Basic_B%]  and count(node) = 2 and %onlythesearerealwords% and not(%Tarsp_BX%) and not(%Xneg%)) """
Tarsp_OndVC = """((%coreondvc% or %dpdpondvc%)  and count(node) = 2 and %onlythesearerealwords%) """

beetje = """(@word="beetje")"""

coreondvc = """(((node[%subject% and not(%beetje%) and not(node[%ooknogmod%])]) or node[@naamval="nomin" and not(node[%ooknogmod%])]) and  node[%Tarsp_Basic_VC% and not(node[%ooknogmod%])]) """
dpdpondvc = """(node[@rel="dp" and %nominal% and not(node[%ooknogmod%]) and not(%beetje%) and @end<../node/@end] and node[@rel="dp" and (@cat="ap" or @pt="adj")and not(node[%ooknogmod%])])"""

nominal = """(@pt="n" or @pt="vnw" or (@cat="np" ))"""

Tarsp_OndBVC = """(%Ond% and node[%Tarsp_Basic_B%]  and node[%Tarsp_Basic_VC%]  and count(node) = 3) """

coreXneg = """( count(node) = 2 and node[ @lemma!="niet"] and 
                (node[@lemma="niet" ] or 
	             node[@cat="advp" and node[@lemma="niet"] ]
	            )
			  ) """

nonfinxneg = """(node[@rel="hd" and @pt="ww"] and node[@rel="vc" and %coreXneg%] )"""

Xneg = """(%coreXneg% or
           %nonfinxneg%
		  ) and 
		  %onlythesearerealwords%
	  """


wandonlyw_vc = """(%Tarsp_W%  and node[%Tarsp_onlyWinVC%]) """
w_novc = """ (%Tarsp_W% and not(node[@rel="vc"])) """
nowonlyw_vc = """ (not(%Tarsp_W%) and node[%Tarsp_onlyWinVC%]) """

Tarsp_OndW = """(%declarative% and %Ond% and  
                (%wandonlyw_vc% or 
				 %w_novc% or 
				 %nowonlyw_vc% 
				) and 
                 (%realcomplormodnodecount% + %nonsuindexnodecount% = 1) and 
                (@rel!="dp" or (count(descendant::node[%realwordnode%]) = count(ancestor::node[@cat="top"]/descendant::node[%realwordnode%]) ) )
				
				)"""				
			
subjectboundobject = """(@rel="obj1" and @index = parent::node/parent::node/node[@rel="su"]/@index) """			
subjectboundobjectcount = """count(node[%subjectboundobject%]) """ 

oldonlyw = """( (%realcomplormodnodecount% + %nonsuindexnodecount% = 0) or %subjectboundobjectcount% = 1)"""
onlyw = """( (node[@rel="su" and %indexnode%] and %realcomplormodnodecount% = 0) or 
             (node[%subjectboundobject%] and %realcomplormodnodecount% = 0)      or
             (%realcomplormodnodecount% = 0 )			 
           )"""  

Tarsp_onlyWinVC = """(@rel="vc" and node[@rel="hd" and @pt="ww"] and %onlyw% )"""


Tarsp_OndWB = """(%OndWB_core% or %OndWB_special%)"""

OndWB_core = """(%declarative% and %Ond% and  %Tarsp_W_X% and %Tarsp_B_X%  and %realcomplormodnodecount% = 2 )"""
OndWB_special = """(%declarative% and 
                    node[@rel="hd" and @pt="ww" and @wvorm="pv"] and 
                    node[@rel="ld" and (@cat="np" or @pt="n")] and 
					node[@rel="svp"] and %realcomplormodnodecount% = 1)
 """

Tarsp_BasicVCW = """(node[@pt="ww" and @rel="hd"] and node[%Tarsp_Basic_VC%] and count(%fillednode%)=2)"""

Tarsp_VCW_X = """(%Tarsp_BasicVCW% or (node[%nonfinvc% and %Tarsp_BasicVCW%] and count(node)=1) )""" 


Tarsp_OndWBVC = """(%declarative% and %Ond% and  %Tarsp_W_X% and %Tarsp_B_X% and %Tarsp_VC_X% and %realcomplormodnodecount% = 3 )"""

Tarsp_OndWBB = """(%declarative% and %Ond% and %Tarsp_W_X% and %Tarsp_B_X_count% = 2 and %realcomplormodnodecount% = 3)"""

Tarsp_VCWOndBB = """(%declarative% and %Ond% and %Tarsp_W_X% and %Tarsp_B_X_count% = 2 and %Tarsp_VC_X% and %realcomplormodnodecount% = 4)"""

Tarsp_OndWVCVCX = """(%declarative% and %Ond% and %Tarsp_W_X% and %Tarsp_VC_X_count% = 2  and %realcomplormodnodecount% <= 4 )"""

Tarsp_BWOndBB = """(%declarative% and %Ond% and %Tarsp_W_X% and %Tarsp_B_X_count% = 3 and %realcomplormodnodecount% = 4)"""

Tarsp_OndWVC = """
(%declarative% and %Ond% and  %Tarsp_W%  and %Tarsp_VC_X% and %realcomplormodnodecount% = 2 )
"""

Tarsp_WBVC = """(%declarative%  and  %Tarsp_W_X% and %Tarsp_B_X% and %Tarsp_VC_X% and %realcomplormodnodecount% = 2 )"""

Tarsp_Ov4 = """(%declarative% and %realcomplormodnodecount% = 3 and %Tarsp_W_X% and not(%Tarsp_OndWBVC%) and not(%Tarsp_OndWBB%) and not(%Tarsp_OndWVCVCX%))"""

Tarsp_Ov5 = """(%declarative% and %realcomplormodnodecount% = 4 and not(%Tarsp_VCWOndBB%) and not(%Tarsp_OndWVCVCX%) and not(%Tarsp_BWOndBB%) )"""

Tarsp_W_X = """(%Tarsp_W% or node[%nonfinvc%]/%Tarsp_W%) """
Tarsp_B_X = """(node[%Tarsp_B%] or node[%nonfinvc%]/node[%Tarsp_B%])"""
Tarsp_B_X_count = """count(node[%Tarsp_B%] | node[%nonfinvc%]/node[%Tarsp_B%]) """
Tarsp_VC_X_count = """count(node[%Tarsp_VC%] | node[%nonfinvc%]/node[%Tarsp_VC%]) """
Tarsp_VC_X = """(node[%Tarsp_VC%] or node[%nonfinvc%]/node[%Tarsp_VC%])"""
Tarsp_W = """node[@rel="hd" and @pt="ww"]"""
Tarsp_VCr1 = """node[%Tarsp_VC%] """
Tarsp_VC = """((@rel="obj1" or (@rel="pc" and not(%Tarsp_pc_vc_exception%)) or @rel="predc" or @rel="ld" or @rel="obj2" or %Tarsp_finvc% or %Tarsp_vcvnw% or (@rel="svp" and @pt!="vz" and @pt!="bw")) and not(%Tarsp_B%) )"""
Tarsp_finvc = """(@rel="vc" and (@cat="cp" or @cat="whsub"))"""
Tarsp_vcvnw = """(@rel="vc" and @pt="vnw")"""

Tarsp_WOndX = """(%ynquery% and not(%basicimperative%) and %topcontainsquestionmark% and %Tarsp_W% and %Ond% and %realcomplormodnodecount% <= 2 and not(%vrwondplus%))
"""

Tarsp_WOnd4 = """(%ynquery% and not(%basicimperative%) and %topcontainsquestionmark% and %Tarsp_W% and %Ond% and %realcomplormodnodecount% = 3)
"""

Tarsp_WOnd5plus = """(%ynquery% and not(%basicimperative%) and %topcontainsquestionmark% and %Tarsp_W% and %Ond% and %realcomplormodnodecount% =4)
"""

Tarsp_whq = """((@cat="whq" and @rel="--") or (@cat="whsub") or (@cat="whrel" and @rel="--"))"""

Tarsp_whqhead = """(@rel="whd" or @rel="rhd") """
whqbody = """((@cat="sv1" or @cat="ssub") and @rel="body")"""
Tarsp_coreVrXY = """(%Tarsp_whq% and
        node[%Tarsp_whqhead%] and
        node[%whqbody%   and %realcomplormodnodecount% < 2])"""
		
		
vraagwoord = """((@pt="vnw" and @vwtype="vb") or @lemma="hoe" or @lemma="wanneer" or  starts-with(@lemma, "waar") or @lemma="welk")"""

Vr = """(%vraagwoord% or (@cat=pp and node[@rel="obj1" and %vraagwoord%]) )""" 


Tarsp_VrXY = """(%Tarsp_coreVrXY% or (%Vr% and not(../node[%whqbody%]) and count(..//node[%realnode%]) <= 3)) """

Tarsp_Vr4 = """(%Tarsp_whq% and
        node[%Tarsp_whqhead%] and
        node[%whqbody%  and %realcomplormodnodecount% = 2])"""

Tarsp_Vr5plus = """(%Tarsp_whq% and
        node[%Tarsp_whqhead%] and
        node[%whqbody%  and %realcomplormodnodecount% > 2])"""
		
old_Tarsp_BBX = """((@cat="top" and
   count(.//node[@pt!='let' and @pt!='vg'])=3 and 
   count(.//node[@special="er_loc" or @pt="bw" or @pt="vz" or (@pt="adj" and @rel="dp" ) ])=2 and 
   .//node[@pt="n" or (@pt="vnw" and not(@special="er_loc")) ]) or
   ((@cat="sv1" or @cat="smain") and not(%basicimperative%) and not(%ynquery%) and not(%Ond%) and  %Tarsp_W% and count(.//node[%Tarsp_B%]) = 2 and %realcomplormodnodecount% = 2)
   
   )"""
   
Tarsp_BBX = """(%coreBBX% or %clausalBBX% or %wvcBBX% or %abcBBX% or %vabcBBX% or %nadvpbbBBX% or %bplusxpbBBX% or %smallclausebbx%)"""

old_corebb = """ ((@special="er_loc" or @pt="bw" or @pt="vz" or (@pt="adj" and @rel="dp" )) and @rel!="hd" and @rel!="hdf")""" 
   
coreBBX = """((@cat!="smain" and @cat!="sv1") and count(node[%coreB%])=2 and count(node) = 3 and %onlythesearerealwords% )"""
clausalBBX = """((@cat="sv1" or @cat="smain") and not(%basicimperative%) and not(%ynquery%) and not(%Ond%) and  %Tarsp_W% and count(node[%Tarsp_B%]) = 2 and  count(node) = 3 and %onlythesearerealwords%)"""
wvcBBX = """((@cat="sv1" or @cat="smain") and not(%basicimperative%) and not(%ynquery%) and not(%Ond%) and  %Tarsp_W%  and node[@rel="vc" and count(node[%Tarsp_B%]) = 2 and  count(node) = 3 ] and %onlythesearerealwords%) """ 
abcBBX = """((@cat!="smain" and @cat!="sv1") and node[%Tarsp_B% and @rel!="tag"] and node[node[%Tarsp_B%] and count(node) =2 ] and count(node[%realnode%]) = 2 and %onlythesearerealwords%)"""		
vabcBBX = """((@cat!="smain" and @cat!="sv1") and 
               count(node[%realnode%]) = 2 and 
               node[node[%Tarsp_B%] and node[@pt="vg"]] and 
               node[node[%Tarsp_B%] and count(node)=2] and
               %onlythesearerealwords%
              ) """

nadvpbbBBX = """(node[not(%Tarsp_B%) and (not(@pt) or (@pt!="ww" and @pt!="let")) and @cat!="advp"] and node[@cat="advp" and node[@rel="mod" ] and node[@rel="hd" ]] and count(node) = 2 and %onlythesearerealwords%) """
bplusxpbBBX = """(node[%Tarsp_B% and @rel!="tag"] and not(node[@pt="ww"]) and node[not(%Tarsp_B%) and count(.//node[%Tarsp_B%]) = 1]and %onlythesearerealwords%)"""

smallclausebbx = """(@cat="smain" and node[%complement%] and count(node[%coreB%])=2 and count(node)=3 and %onlythesearerealwords% )"""
		
Tarsp_Ov3 = """(%declarative% and 
                not(%Tarsp_OndWVC%) and 
				not(%Tarsp_OndWB%) and 
				not(%Tarsp_BBX%)and 
				not(%Tarsp_WBVC%) and 
				not(%Tarsp_OndB%) and
				not(%Tarsp_OndVC%) and
				%Tarsp_W% and
				%realcomplormodnodecount% = 2) """


onlywordinutt = """(ancestor::node[@cat="top" and count(.//node[@pt])=1] )"""

Tarsp_kijkVU_old = """(@pt="ww" and @lemma="kijken" and @wvorm="pv" and @pvagr="ev" and @pvtijd="tgw" and count(ancestor::node[@cat="top"]/descendant::node[@pt!="let"])<=2)"""
Tarsp_kijkVU_old2 = """(@pt="ww" and @lemma="kijken" and @wvorm="pv" and @pvagr="ev" and @pvtijd="tgw" and not(../node[%Tarsp_pporvc%]))"""
Tarsp_kijkVU1 = """(@pt="ww" and @lemma="kijken" and (( @wvorm="pv" and @pvagr="ev" and @pvtijd="tgw") or @word = "kijke" or @word = "kij") and not(../node[@rel="vc" or @rel="su" or @cat="pp" or @lemma="maar" or @lemma="eens" or @lemma="dan" or @lemma="nou"])) """
Tarsp_kijkVU2 = """(@lemma = "kijk" and (@pt="bw" or @pt="n")) """
Tarsp_kijkVU3 = """(@pt="ww" and @lemma="kijken" and @wvorm="pv" and @pvagr="ev" and @pvtijd="tgw" and ../node[@rel="mod" and (@lemma="eens" or @lemma="hier")] and 
                   (parent::node[count(node) = 2] or (parent::node[count(node) = 3] and ../node[@rel="obj1"]))  
				   ) """
Tarsp_kijkVU = """( %Tarsp_kijkVU1% or %Tarsp_kijkVU2% or %Tarsp_kijkVU3%)"""

Tarsp_pporvc = """ (((@rel="pc" or @rel="mod" or @rel="ld") and @cat="pp")  or @rel="vc")"""

Tarsp_coreW = """ ( @pt="ww" and (@wvorm="pv" or parent::node[@rel!="vc"] or %Tarsp_BarenonfinW%) and 
        not(%Tarsp_kijkVU%) and
        not((@lemma="zijn" or @lemma="worden") and 
            parent::node[node[@rel="vc"]]) )"""

Tarsp_BarenonfinW = """parent::node[@rel="vc" and  parent::node[@cat="smain" and count(node)=1]]"""

Tarsp_coreHwwi = """ ( @pt="ww" and @rel="hd" and @wvorm="pv" and
                       %Tarsp_hww% and
                       ((parent::node[node[@cat="inf" and @rel="vc" and node[@rel="hd" and @pt="ww"]]]) or
                        (parent::node[node[@pt="ww" and @rel="vc" and @wvorm="inf"]]) or
						(parent::node[node[@cat="ti" and @rel="vc"]])
                       )
                     )
"""

Tarsp_Hwwi = """( %Tarsp_coreHwwi% or
	              %robusthwwi%  
	            )"""
				

robusthwwi = """((not(%Tarsp_coreHwwi%) and @pt="ww" and %Tarsp_hww% and @wvorm="pv" and ancestor::node[@cat="top" and descendant::node[@pt="ww" and @wvorm="inf" ]]))
				
			 """

oldrobusthwwi = """ (@cat="top" and 
                  .//node[@pt="ww" and %Tarsp_hww% and @wvorm="pv" and (@rel="--" or @rel="dp")] and
				  .//node[@pt="ww" and @wvorm="inf" and (@rel="--" or @rel="dp")]
				  )
				  
"""
				
	   
Tarsp_hehe = """ (@lemma="hÃ¨" and @end = ancestor::node[@cat="top"]/descendant::node[@lemma="hÃ¨"]/@begin)"""

simplevcw = """
( node[@rel="hd" and @pt="ww" and not(%Tarsp_kijkVU%)] and
  node[%Tarsp_Basic_VC%] and
  count(node) = 2 and
  %onlythesearerealwords%
)
"""

infsuvcw = """
( node[@rel="hd" and @pt="ww" and not(%Tarsp_kijkVU%)] and
  node[%Tarsp_Basic_VC%] and
  node[@rel="su" and not(@cat) and not(@word)] and
  count(node) = 3 and
  %onlythesearerealwords%
)
"""


infvcw = """
( node[@rel="hd" and @pt="ww" and not(%Tarsp_kijkVU%)] and
  node[%Tarsp_Basic_VC%] and
  count(node) = 2 and
  %onlythesearerealwords%
)
"""


vcvcw = """
(node[@rel="vc" and @cat="inf" and (%infvcw% or %infsuvcw%) and %onlythesearerealwords%]
)
"""

suvcw = """
( node[@rel="su"] and
  node[@rel="vc" and @cat="inf" and node[@rel="su" and not(@cat) and not(@word)] and node[@rel="hd" and @pt="ww"] and count(node)=2]
  and count(node) = 2
  and %onlythesearerealwords%
)
"""

Tarsp_vcw = """
( 
 ( %simplevcw% or
   %vcvcw%   
 )
)
"""

singlecharnoun = """(@pt="n" and string-length(@word) = 1)""" 
chatcode = """(@word="xxx" or @word="xx" or @word="yyy" or @word="yy") """

realwordnode = """ (@word and @pt!="let" and (@pt!="tsw" or %tswnoun%) and not(%Tarsp_kijkVU%) and not(%singlecharnoun%) and not(%chatcode%))
"""

horenaux = """(@lemma="horen" and 
               @pt="ww" and 
			   ../node[@rel="ld" or @rel="mod"] and not(../node[@rel="obj1" or @rel="vc"]))"""
			   
inv = """( 
          %declarative% and 
          ((
            (
             (@cat="sv1" and not(parent::node[@cat="whq"])) or
             (@cat="smain" )
            ) and 
            node[@pt="ww" and @rel="hd" and (not(@stype) or @stype!="imparative") ] and node[@rel="su" and number(@end)>../node[@rel="hd"]/@end]
           ) or 
           %robustinversion%
		  )
		 )"""