[project]
name = "ai-council"
version = "0.2.2"
description = "Multi-AI consensus tool: MCP server that queries multiple AI models (OpenAI, Claude, Gemini, custom APIs) in parallel, synthesizes responses for better accuracy, and reduces AI bias through ensemble decision-making"
authors = [{name = "Akuti", email = "a40723201+0xAkuti@users.noreply.github.com"}]
license = {file = "LICENSE"}
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
keywords = [
    # Core functionality
    "ai-council", "multi-model", "ai-aggregation", "ai-consensus", "model-ensemble", "ai-synthesis",
    "parallel-ai", "ai-comparison", "wisdom-of-crowds", "ai-collaboration", "model-fusion", "cognition-wheel",
    
    # MCP and server
    "mcp", "model-context-protocol", "mcp-server", "cursor-ai", "claude-desktop", "ai-tools",
    
    # AI providers and models
    "openai", "openrouter", "claude", "gpt", "gemini", "anthropic", "perplexity", "together-ai",
    "ai-api", "openai-compatible", "llm-api", "ai-proxy", "multi-llm",
    
    # Use cases and domains  
    "ai-research", "ai-evaluation", "llm-evaluation", "ai-benchmarking", "ai-validation",
    "decision-support", "expert-system", "ai-assistant", "chatbot", "ai-automation",
    
    # Technical terms
    "async", "concurrent", "parallel-processing", "ai-pipeline", "llm-orchestration",
    "bias-reduction", "response-synthesis", "ai-middleware", "api-aggregation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "mcp>=1.9.4",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "pyyaml>=6.0.2",
    "openai>=1.91.0",
    "pydantic-settings>=2.10.1",
]

[project.urls]
Homepage = "https://github.com/0xAkuti/ai-council-mcp"
Repository = "https://github.com/0xAkuti/ai-council-mcp"
Issues = "https://github.com/0xAkuti/ai-council-mcp/issues"

[project.scripts]
ai-council = "ai_council.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["ai_council"]

[tool.hatch.build.targets.sdist]
include = [
    "/ai_council",
    "/config.yaml",
]