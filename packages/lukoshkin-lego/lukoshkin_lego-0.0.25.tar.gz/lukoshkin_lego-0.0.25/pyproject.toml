[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lukoshkin-lego"
version = "0.0.25"
description = ""
authors = [{ name = "lukoshkin" }]
readme = "README.md"
requires-python = ">= 3.11"
dependencies = [
  "rodi>=2.0.6",
  "openai>=1.90.0",
  "uvicorn>=0.22.0",
  "python-decouple>=3.8",
  "tenacity>=8.2.3",
  "loguru>=0.7.2",
  "pydantic>=2.6.2",
  "pydantic-settings>=2.2.1",
  "json-repair>=0.8.0",
  "openpyxl>=3.1.2",
  "pyinstrument>=4.6.2",
  "transitions>=0.9.1",
  "pyhumps>=3.8.0",
]

[project.optional-dependencies]
litellm = ["litellm", "boto3"]
milvus = ["pymilvus[model]>=2.5.3"]
dev = [
  "mypy>=1.4.1",
  "pre-commit>=3.3.3",
  "pytest>=8.3.4",
  "pytest-asyncio>=0.25.0",
  "pytest-order>=1.3.0",
  "ipython>=8.14.0",
  "types-pyyaml>=6.0.12.11",
  "ruff>=0.3.0",
]

[tool.hatch.build.targets.wheel]
packages = ["lego"]


[tool.ruff]
line-length = 79
target-version = "py310"
extend-exclude = [
  "*.ipynb",
  "_*.py",
  ".git",
  "__pycache__",
  ".venv",
  ".eggs",
  "*.egg",
  "venv",
  "*.md",
  ".mypy_cache",
  "build",
  "dist",
]

[tool.ruff.lint]
# Enable recommended set of rules:
# E/F: pycodestyle and Pyflakes (default)
# I: isort
# B: flake8-bugbear
# C4: flake8-comprehensions
# D: pydocstyle
# N: naming
# UP: pyupgrade
# S: flake8-bandit (security)
# W: warnings
select = ["E", "F", "I", "B", "C4", "D", "N", "UP", "S", "W"]

# # Common issues to ignore
ignore = [
  "E203", # Whitespace before ':' (conflicts with Black)
  "E501", # Line too long (handled by formatter)
  "D100", # Missing docstring in public module
  "D107", # Missing docstring in __init__
  "D203", # One blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
]

# Allow autofix for all enabled rules (when using `--fix`)
# fixable = ["ALL"]
# unfixable = []

# Allow unused variables when underscore-prefixed
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# From setup.cfg flake8 per-file-ignores
[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101", "S311"]      # Allow assert and pseudorandom in tests
"test_*.py" = ["S101", "S311"]
"exceptions.py" = ["N818"]           # Allow exception names that don't end with "Error"
"lego/utils/profiling.py" = ["E741"] # Allow ambiguous variable names like 'l'

[tool.ruff.lint.isort]
case-sensitive = true
force-sort-within-sections = true
combine-as-imports = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
known-first-party = ["lego"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
allow_redefinition = true
