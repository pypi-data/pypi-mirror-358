[project]
name = "rummikub-solver"
description = "Rummikub solver library"
requires-python = ">=3.11"

authors = [
    {"name" = "Martijn Pieters", "email" = "mj@zopatista.com"},
]

readme = "README.md"
license = "MIT"
license-files = ["LICENSE.txt"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Games/Entertainment :: Board Games",
]

dependencies = [
    "cvxpy-base>=1.3.0",
    "numpy",
]

dynamic = ["version"]

[project.optional-dependencies]
# Additional MILP solvers
cbc = ["cylp"]
glpk_mi = ["cvxopt>=1.3.0"]
highs = ["highspy", "cvxpy-base>=1.6.0"]
scip = ["PySCIPOpt"]

[dependency-groups]
dev = [
    "annotated-types>=0.7.0",
    "ruff",
    "pyright",
    "pytest>=8.4.0",
    "pytest-cov>=6.2.1",
    "pytest-randomly>=3.16.0",
    "hypothesis>=6.135.14",
]
docs = [
    "griffe-modernized-annotations>=1.0.8",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings[python]>=0.29.1",
]

[project.urls]
Documentation = "https://rummikub-solver.readthedocs.io"
GitHub = "https://github.com/mjpieters/rummikub-solver"
Issues = "https://github.com/mjpieters/rummikub-solver/issues"
Changelog = "https://github.com/mjpieters/rummikub-solver/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling~=1.27", "uv-dynamic-versioning~=0.8"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv]
required-version = "~=0.7"

[tool.uv-dynamic-versioning]
fallback-version = "0.0.0"

[tool.ruff.lint]
extend-select = [
    "B",    # bugbear
    "D",    # pydocstyle
    "I",    # isort
    "SIM",  # simplify
    "UP",   # pyupgrade
    "RUF",  # additional ruff rules
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D1"]  # tests do not require a docstring

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
pythonVersion = "3.11"
include = ["src", "tests"]
strict = ["src", "tests"]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov",
    "--cov-report=term",
    "--cov-report=xml",
    "--no-cov-on-fail",
]

[tool.coverage.report]
show_missing = true
exclude_also = [
    'if (t\.)?TYPE_CHECKING:',
    'raise NotImplementedError\(\)',
    'if __name__ == "__main__":',
]

[tool.coverage.run]
relative_files = true
source = [
    "src"
]

[tool.coverage.xml]
output = "coverage.xml"

