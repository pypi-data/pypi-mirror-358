Metadata-Version: 2.4
Name: eddi
Version: 0.1.0
Summary: Interactive lighting system with pose-driven control and AI-powered sequencing
Project-URL: Homepage, https://github.com/mrilikecoding/eddi
Project-URL: Repository, https://github.com/mrilikecoding/eddi
Project-URL: Documentation, https://github.com/mrilikecoding/eddi#readme
Project-URL: Issues, https://github.com/mrilikecoding/eddi/issues
Project-URL: Changelog, https://github.com/mrilikecoding/eddi/blob/main/CHANGELOG.md
Author-email: Eddi Contributors <noreply@github.com>
License: MIT License
        
        Copyright (c) 2025 mrilikecoding
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.11
Provides-Extra: dev
Requires-Dist: pytest>=7.4.0; extra == 'dev'
Description-Content-Type: text/markdown

# starting

1) Set up lights
2) install QLC plus
3) Assign fixures in QLC+
4) In QLC+ visit inputs/outputs
5) Set the USB DMX interface be an Output device
6) Set OSC to be an input device on 127.0.0.1 send port 7700 for universe 0
7) You should see a joystick icon on the universe when sending an OSC message if it's working
8) In QLC+ create/assign all fixtures
9) Create a function for each fixture channel - create the func, add the fixture, select one of its channels, max it out and zero out /deactivate the others
10) Create a slider in the virtual console that uses the function
11) Auto-detect the OSC message to opereate this slider - choose a consistent naming convention
12) the address doesn't matter - it will accept a float 0-1 or int 0-255
13) see lumi.qxw

# Running Lumi
1) start kinect_osc.pde in processing (requires P5OSC and SimpleOpenNI)
2) run main.py