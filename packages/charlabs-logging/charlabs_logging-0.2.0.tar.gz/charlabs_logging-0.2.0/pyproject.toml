[project]
name = "charlabs-logging"
dynamic = ["version"]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pydantic-settings>=2.10.1",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "python-semantic-release>=10.1.0",
    "rich>=14.0.0",
    "ruff>=0.12.0",
]
logging = [
    "python-json-logger>=3.3.0",
]
structlog = [
    "structlog>=25.4.0",
]

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "charlabs.logging.__version__"}

[tool.ruff]
include = ["src/**/*.py", "tests/**/*.py"]

[tool.ruff.lint]
preview = true
extend-select = ["I", "PERF", "E", "W", "PD", "NPY", "S", "FBT", "A", "COM", "DTZ", "ISC", "LOG", "G", "PIE", "T20", "PT", "RET", "SIM", "TID", "PTH", "UP", "DOC"]
ignore = ["COM812", "E501"]

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = ["S"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"src".msg = "Do not use src imports. Imports are relative to the src directory and should not include the 'src.' prefix."

[tool.ruff.format]
docstring-code-format = true

[tool.pyright]
include = ["src/**/*.py"]
exclude = ["tests"]
typeCheckingMode = "strict"
reportMissingParameterType = true
reportMissingTypeArgument = true
reportMissingTypeAnnotation = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src --cov-fail-under=60"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
update_changelog_on_bump = true

[tool.semantic_release]
assets = []
build_command = "uv build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "."
no_git_verify = false
tag_format = "v{version}"
version_provider = "tag"
version_variables = [
    "src/charlabs/logging/__init__.py:__version__",
]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.remote.token]
env = "GITHUB_TOKEN"
