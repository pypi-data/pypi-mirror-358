[project]
name = "tau-eval"
version = "0.2.0"
description = "Text Anonymization Evaluation Library"
license = { text = "GPL-3.0" }
readme = "README.md"
authors = [
    { name = "Gabriel Loiseau", email = "gabriel.loiseau@hornetsecurity.com" },
]
maintainers = [
    { name = "Gabriel Loiseau", email = "gabriel.loiseau@hornetsecurity.com" },
]
requires-python = ">=3.9"
keywords = [
    "Text anonymization",
    "evaluation",
    "NLP",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "transformers>=4.48.0,<5.0.0",
    "sentence-transformers>=3.3.1",
    "torch>=2.5.0",
    "evaluate>=0.4.1",
    "datasets>=2.14.4",
    "huggingface-hub>=0.20.0",
    "tasknet>=1.57.0",
    "tasksource>=0.0.47",
    "ipywidgets>=8.1.5",
    "ipykernel>=6.29.5",
    "rich>=14.0.0",
    "accelerate>=1.6.0",
    "bert-score>=0.3.13",
    "nltk>=3.9.1",
    "rouge-score>=0.1.2",
    "faker>=37.1.0",
    "presidio-analyzer>=2.2.358",
    "presidio-anonymizer>=2.2.358",
    "pip>=25.0.1",
    "pytest>=8.3.5",
    "numpy>=2.0.2",
    "matplotlib>=3.9.4",
]


[project.optional-dependencies]
tests = [
    "pytest",
    "accelerate>=0.20.3",
]
quality = [ 
    "ruff",
    "pyyaml>=5.3.1",
]


[tool.ruff]
line-length = 119
fix = true

[tool.ruff.lint]
# Never enforce `E501` (line length violations).
ignore = ["C901", "E501", "E741", "F402", "F823", "C416" ]
select = ["C", "E", "F", "I", "W"]

[tool.ruff.lint.per-file-ignores]
"examples/**" = [
    # Ignore `E402` (import violations) in all examples
    "E402", 
    # Ignore missing required imports
    "I002"
    ]
"docs/**" = [
    # Ignore missing required imports
    "I002"
    ]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["transformers"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "--strict-markers -m 'not slow'"
markers = [
    "slow: marks tests as slow"
]

