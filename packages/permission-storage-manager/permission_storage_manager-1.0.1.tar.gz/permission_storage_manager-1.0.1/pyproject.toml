[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "permission-storage-manager"
version = "1.0.1"
description = "A flexible, high-performance permission storage system for Python applications"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Fatih Emre", email = "fatihemre@github.com"},
    {name = "Permission Storage Manager Team", email = "support@permission-storage-manager.dev"}
]
maintainers = [
    {name = "Fatih Emre", email = "fatihemre@github.com"}
]
keywords = [
    "permissions",
    "authorization",
    "session-management",
    "redis",
    "storage",
    "async",
    "security",
    "rbac",
    "access-control"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration :: Authentication/Directory",
    "Topic :: Security",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "redis>=4.0.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "typing-extensions>=4.0.0; python_version < '3.9'",
]

[project.optional-dependencies]
redis = [
    "redis>=4.0.0",
    "hiredis>=2.0.0",
]
all = [
    "redis>=4.0.0",
    "hiredis>=2.0.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "celery>=5.3.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "coverage>=7.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "sphinx-autodoc-typehints>=1.23.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "coverage>=7.0.0",
    "redis-server",  # For integration tests
]

[project.urls]
Homepage = "https://github.com/fatihemre/permission-storage-manager"
Documentation = "https://github.com/fatihemre/permission-storage-manager/tree/main/docs"
Repository = "https://github.com/fatihemre/permission-storage-manager.git"
"Bug Tracker" = "https://github.com/fatihemre/permission-storage-manager/issues"
"Source Code" = "https://github.com/fatihemre/permission-storage-manager"
"Changelog" = "https://github.com/fatihemre/permission-storage-manager/blob/main/CHANGELOG.md"
"Download" = "https://pypi.org/project/permission-storage-manager/#files"

[project.scripts]
permission-manager = "permission_storage_manager.cli:main"

[tool.setuptools]
packages = ["permission_storage_manager"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
permission_storage_manager = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["permission_storage_manager"]
known_third_party = ["redis", "pydantic", "structlog", "pytest", "asyncio"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "pydantic.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=permission_storage_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=90",
    "--asyncio-mode=auto",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "redis: marks tests that require Redis",
    "performance: marks tests as performance tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/permission_storage_manager"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".mypy_cache",
    ".pytest_cache",
] 