name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write  # Required for trusted publishing to PyPI
  contents: read

jobs:
  test:
    name: Test Before Release
    uses: ./.github/workflows/ci.yml

  release:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: test
    environment: 
      name: pypi
      url: https://pypi.org/p/flask-remote-logging
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync

    - name: Build package
      run: uv build

    - name: Check package version from git
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        PACKAGE_VERSION=$(uv run python -c "import src.flask_remote_logging; print(src.flask_remote_logging.__version__)")
        echo "üì¶ Tag version: $TAG_VERSION"
        echo "üì¶ Package version (from git): $PACKAGE_VERSION"
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "‚ùå Tag version ($TAG_VERSION) doesn't match package version ($PACKAGE_VERSION)"
          exit 1
        fi
        echo "‚úÖ Version verified: $PACKAGE_VERSION"

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git tag --sort=-version:refname | head -n 2 | tail -n 1)
        if [ -z "$PREV_TAG" ]; then
          PREV_TAG=$(git rev-list --max-parents=0 HEAD)
        fi
        
        # Generate changelog
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## Changes since $PREV_TAG" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          üéâ **flask-remote-logging ${{ github.ref_name }}** has been released!
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          üì¶ **Installation:**
          ```bash
          pip install flask-remote-logging==${{ github.ref_name }}
          ```
          
          üîó **PyPI:** https://pypi.org/project/flask-remote-logging/${{ github.ref_name }}/
        draft: false
        prerelease: false
