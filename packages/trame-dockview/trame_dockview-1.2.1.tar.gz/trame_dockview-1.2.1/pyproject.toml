[project]
name = "trame-dockview"
version = "1.2.1"
description = "Trame wrapper to a Docking Layout Manager"
authors = [{ name = "Kitware Inc." }]
dependencies = ["trame_client>=3.9.1"]
requires-python = ">=3.10"
readme = "README.rst"
license = { text = "MIT License" }
keywords = ["Python", "Interactive", "Web", "Application", "Framework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
dev = ["pre-commit", "ruff", "pytest >=6", "pytest-cov >=3", "nox"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build]
include = [
    "/src/trame/**/*.py",
    "/src/trame_dockview/**/*.py",
    "/src/trame_dockview/**/*.js",
    "/src/trame_dockview/**/*.css",
]

[tool.hatch.build.targets.wheel]
packages = ["src/trame", "/src/trame_dockview"]

[tool.ruff]

[tool.ruff.lint]
extend-select = [
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "G",   # flake8-logging-format
    "I",   # isort
    "ICN", # flake8-import-conventions
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
]
ignore = [
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "ISC001",  # Conflicts with formatter
    "SIM117",  # nested with
    "PLC0415", # lazy import
]
isort.required-imports = []

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20", "PLC0415"]
"noxfile.py" = ["T20"]
"examples/**" = ["T20"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/trame_dockview/__init__.py:__version__"]

build_command = """
  python -m venv .venv
  source .venv/bin/activate
  pip install -U pip build
  python -m build .
"""
