[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "probmetrics"
dynamic = ["version"]
description = 'Probabilistic metrics and calibration methods'
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
keywords = ['Metrics', 'Classification', 'Calibration', 'Refinement']
authors = [
    { name = "David HolzmÃ¼ller" }, #, email = "a@b.org" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = [
    "torch>=2.0",
    "numpy>=1.25",
    # scikit-learn==1.8 will deprecate the cv='prefit' option in CalibratedClassifierCV,
    # for which the suggested solution doesn't work at the moment in case of missing classes
    "scikit-learn>=1.3",
    # older versions of torchmetrics (<1.2.1) have a bug that makes certain metrics slow:
    # https://github.com/Lightning-AI/torchmetrics/pull/2184
    "torchmetrics>=1.2.1",
]

[project.optional-dependencies]
extra = [
    "venn-abers", # Venn-Abers calibration
    "cir-model", # centered isotonic regression
    "netcal", # for temperature scaling comparison
    "relplot", # for smooth ECE
    "pytorch-minimize", # for torchcal TS implementation
    # relplot fails for sklearn 1.7: ModuleNotFoundError: No module named 'sklearn.utils._estimator_html_repr'
    "scikit-learn>=1.3,<1.7",
]
dev = [
    "matplotlib>=3.0", # plotting
    "fire", # running scripts
    # documentation
    "sphinx>=7.0",
    "myst_parser>=3.0",
    "sphinx_rtd_theme>=2.0",
    # testing
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "scipy",  # used only for testing
]
dirichletcal = [# requires python >= 3.12
    "dirichletcal", # dirichlet calibration
]

[tool.hatch.version]
path = "probmetrics/__about__.py"

[tool.hatch.envs.default]
installer = "uv"
features = ["extra", "dev"]

[tool.hatch.envs.hatch-test]
installer = "uv"
features = ["extra", "dev"]

[tool.hatch.build.targets.sdist]
package = ['probmetrics']
only-include = ['probmetrics']

[tool.hatch.build.targets.wheel]
package = ['probmetrics']
only-include = ['probmetrics']

[project.urls]
Documentation = "https://github.com/dholzmueller/probmetrics#readme"
Issues = "https://github.com/dholzmueller/probmetrics/issues"
Source = "https://github.com/dholzmueller/probmetrics"

[tool.hatch.envs.types]
extra-dependencies = [
    "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:probmetrics tests}"

[tool.coverage.run]
source_pkgs = ["probmetrics", "tests"]
branch = true
parallel = true
omit = [
    "probmetrics/__about__.py",
]

[tool.coverage.paths]
main = ["probmetrics", "*/probmetrics/probmetrics"]
tests = ["tests", "*/probmetrics/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]