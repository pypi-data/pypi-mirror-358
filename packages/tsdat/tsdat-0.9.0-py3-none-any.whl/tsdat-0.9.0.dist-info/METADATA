Metadata-Version: 2.4
Name: tsdat
Version: 0.9.0
Summary: A data processing framework used to convert time series data into standardized format.
Author-email: tsdat <tsdat@pnnl.gov>
License: **Time Series Data Utilities**
        
        Copyright © 2021, Battelle Memorial Institute
        
        Licensed under a Simplified BSD 2-Clause License; 
        you may not use this software except in compliance with the License as specified below.
        
        1.	Battelle Memorial Institute (hereinafter Battelle) hereby grants permission to any person or entity lawfully obtaining a copy of this software and associated documentation files (hereinafter “the Software”) to redistribute and use the Software in source and binary forms, with or without modification.  Such person or entity may use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and may permit others to do so, subject to the following conditions:
            * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers. 
            * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 
            * Other than as used herein, neither the name Battelle Memorial Institute or Battelle may be used in any form whatsoever without the express written consent of Battelle.  
            
        2.	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BATTELLE OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Keywords: data,pipeline
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Intended Audience :: Science/Research
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: act-atmos!=1.3.1,!=1.3.3,>=1.1.3
Requires-Dist: cftime
Requires-Dist: dunamai==1.9.0
Requires-Dist: jsonpointer==2.2
Requires-Dist: netCDF4
Requires-Dist: numpy<2.0
Requires-Dist: pandas>=1.2
Requires-Dist: pint
Requires-Dist: pydantic<2.0.0,>=1.10.0
Requires-Dist: pyyaml>=5.4
Requires-Dist: rich
Requires-Dist: typer>=0.4
Requires-Dist: xarray
Provides-Extra: aws
Requires-Dist: boto3; extra == "aws"
Provides-Extra: complete
Requires-Dist: tsdat[aws,io,ocean,transform]; extra == "complete"
Provides-Extra: dev
Requires-Dist: tsdat[complete]; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: boto3-stubs[essential]; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Requires-Dist: mkdocs-gen-files; extra == "dev"
Requires-Dist: mkdocs-literate-nav; extra == "dev"
Requires-Dist: mkdocs-material; extra == "dev"
Requires-Dist: mkdocstrings[python]; extra == "dev"
Requires-Dist: moto[s3,sts]>5.1; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pandas-stubs; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: types-PyYAML; extra == "dev"
Provides-Extra: io
Requires-Dist: h5netcdf; extra == "io"
Requires-Dist: pyarrow; extra == "io"
Requires-Dist: zarr; extra == "io"
Provides-Extra: ocean
Requires-Dist: mhkit; extra == "ocean"
Requires-Dist: matplotlib!=3.9.1.post1; extra == "ocean"
Provides-Extra: transform
Requires-Dist: numpy<2.0.0; extra == "transform"
Dynamic: license-file

<p align="center">
   <img src="./docs/figures/tsdat_logo.svg" width="700" style="max-width: 700px;">
</p>

<p align="center">
<a href=../../actions/workflows/pytest.yml>
    <img src="https://github.com/tsdat/tsdat/actions/workflows/pytest.yml/badge.svg">
</a>
<a href=https://tsdat.readthedocs.io/en/latest/?badge=latest>
    <img src="https://readthedocs.org/projects/tsdat/badge/?version=latest">
</a>
<a href=https://badge.fury.io/py/tsdat>
    <img src="https://badge.fury.io/py/tsdat.svg">
</a>
<a href=https://pepy.tech/project/tsdat>
    <img src="https://pepy.tech/badge/tsdat">
</a>
<a href="https://zenodo.org/badge/latestdoi/306085871">
    <img src="https://zenodo.org/badge/306085871.svg">
</a>
<!-- <a href="https://hub.docker.com/r/tsdat/tsdat-lambda">
    <img src="https://img.shields.io/docker/pulls/tsdat/tsdat-lambda.svg?color=%2327B1FF&logoColor=%234D606E">
</a> -->
</p>
<p align="center">
<a href=https://github.com/psf/black>
    <img src="https://img.shields.io/badge/code%20style-black-000000.svg">
</a>
<a href="https://codecov.io/gh/tsdat/tsdat">
    <img src="https://codecov.io/gh/tsdat/tsdat/branch/main/graph/badge.svg">
</a>
<a href="https://codeclimate.com/github/tsdat/tsdat/maintainability">
    <img src="https://api.codeclimate.com/v1/badges/e82e8c5103f4eb3a5686/maintainability">
</a>
</p>

# About Tsdat

Tsdat is an open-source python framework for declaratively creating pipelines to read,
standardize, and enhance time series datasets of any dimensionality for use in scalable
applications and in building large data repositories.

This repository contains the core tsdat code. We invite you to explore this, especially
for those willing to provide feedback or make contributions to the tsdat core (we
enthusiastically welcome issues, PRs, discussions & new ideas, etc.).

> Most users should start with a [template repository](https://github.com/tsdat/template-repositories)
to generate boilerplate code and configurations needed to create a tsdat data pipeline.
We recommend **[this template](https://github.com/tsdat/pipeline-template)** to start
with, as it is the most flexible and well-supported template that we offer.

# Development Environment

Instructions on setting up your development environment for working on the core tsdat
code are included below:

1. Fork this repository to your github account and open it on your desktop in an IDE of
your choice.

    > We recommend using VS Code, as we've included extra settings that make it easy to
    start developing in a standard environment with no overhead configuration time.

2. Open an appropriate terminal shell from your computer
   1. If you are on Linux or Mac, just open a regular terminal
   2. If you are on Windows, start your Anaconda prompt if you installed Anaconda
   directly to Windows, OR open a WSL terminal if you installed Anaconda via WSL.

3. Run the following commands to create and activate your `conda` environment

    ```shell
    conda env create
    conda activate tsdat
    pip install -e ".[dev]"
    ```

# Community

Tsdat is an open-source repository and we highly-value community contributions and
engagement via [issues](https://github.com/tsdat/tsdat/issues),
[pull requests](https://github.com/tsdat/tsdat/pulls), and
[discussions](https://github.com/tsdat/tsdat/discussions). Please let us know if you
find bugs, want to request new features, or have specific questions about the framework!

# Additional resources

- Learn more about `tsdat`:
  - GitHub: <https://github.com/tsdat>
  - Documentation: <https://tsdat.readthedocs.io>
  - Data standards: <https://github.com/tsdat/data_standards>
  - Preferred template: <https://github.com/tsdat/pipeline-template>
  - All templates: <https://github.com/tsdat/template-repositories>
  - Docker Images: <https://hub.docker.com/u/tsdat>
- Learn more about `xarray`:
  - GitHub: <https://github.com/pydata/xarray>
  - Documentation: <https://xarray.pydata.org>
- Learn more about `act-atmos`:
  - GitHub: <https://github.com/arm-doe/act>
  - Documentation: <https://arm-doe.github.io/ACT/>
- Other useful tools:
  - VS Code: <https://code.visualstudio.com/docs>
  - Docker: <https://docs.docker.com/get-started/>
  - `pytest`: <https://github.com/pytest-dev/pytest>
  - `black`: <https://github.com/psf/black>
  - `matplotlib` guide: <https://realpython.com/python-matplotlib-guide/>
