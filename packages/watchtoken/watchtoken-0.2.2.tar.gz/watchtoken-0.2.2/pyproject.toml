[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "watchtoken"
version = "0.2.2"
description = "A Python library for tracking and controlling token usage in LLM prompts without running the models"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Kuba", email = "kuba@kamionka.eu"}
]
keywords = ["llm", "tokens", "openai", "claude", "gemini", "cost-estimation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "tiktoken>=0.5.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
sentencepiece = [
    "sentencepiece>=0.1.99",
]
transformers = [
    "transformers>=4.20.0",
]

[project.urls]
Homepage = "https://github.com/Kvmyk/Watchtoken"
Repository = "https://github.com/Kvmyk/Watchtoken"
Issues = "https://github.com/Kvmyk/Watchtoken/issues"
Documentation = "https://github.com/Kvmyk/Watchtoken#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["watchtoken*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
]
filterwarnings = [
    "ignore::pytest.PytestDeprecationWarning",
]
asyncio_default_fixture_loop_scope = "function"
