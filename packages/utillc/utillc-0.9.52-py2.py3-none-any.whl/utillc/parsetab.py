
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSCOLONleftTIMESDIVIDErightUMINUSASSIGN COLON COMMA DIVIDE DIVIDE2 DOT EKON EKOT EKOX EQUALS FLOAT LBRACKET LPAREN MINUS NAME NUMBER PLUS RBRACKET RPAREN STRING TIMEStop : expressionstop : EKON expressionstop : EKOX expressionstop : EKOT expressionsexpressions : expressionexpressions : expressions COMMA expressionexpression : expression PLUS expression\n\t\t\t\t  | expression MINUS expression\n\t\t\t\t  | expression TIMES expression\n\t\t\t\t  | expression EQUALS expression\n\t\t\t\t  | NAME ASSIGN expression\n\t\t\t\t  | expression DIVIDE2 expression\n\t\t\t\t  | expression DIVIDE expression name : expression DOT dot_namesexpression : MINUS expression %prec UMINUSexpression : LPAREN expressions RPAREN\n\t\t\t\t  | expression LBRACKET expressionsBE RBRACKET\n\t\t\t\t  | name LPAREN expressionsV RPAREN\n\texpression : NUMBERexpression : FLOATexpression : nameexpression : STRINGdot_names : NAMEexpressionsBE : expressionsBE : expressionsBEE COMMA expressionsBEexpressionsBE : expressionsBEEexpressionsBEE : expressionsBEE : expressionexpressionsBEE : COLONexpressionsBEE : expression COLON expressionsBEEexpressionsV : expressionsV : expressions name : NAME'
    
_lr_action_items = {'EKON':([0,],[3,]),'EKOX':([0,],[4,]),'EKOT':([0,],[5,]),'NAME':([0,3,4,5,7,9,14,18,19,20,21,22,23,24,25,27,29,47,49,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,42,8,8,8,8,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,37,41,42,43,44,47,48,49,50,],[7,7,7,7,19,7,-33,7,-21,-19,-20,-22,7,7,7,7,7,7,7,7,-15,7,7,19,-7,-8,-9,19,19,-13,19,-14,-23,19,-16,7,-17,7,-18,]),'LPAREN':([0,3,4,5,7,8,9,10,14,18,19,20,21,22,23,24,27,29,41,42,47,49,],[9,9,9,9,9,-33,9,29,9,9,9,9,9,9,9,9,9,9,-14,-23,9,9,]),'NUMBER':([0,3,4,5,7,9,14,18,19,20,21,22,23,24,27,29,47,49,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FLOAT':([0,3,4,5,7,9,14,18,19,20,21,22,23,24,27,29,47,49,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRING':([0,3,4,5,7,9,14,18,19,20,21,22,23,24,27,29,47,49,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,2,6,8,10,11,12,13,15,16,17,26,30,31,32,33,34,35,36,41,42,43,44,48,50,],[0,-1,-5,-33,-21,-19,-20,-22,-2,-3,-4,-15,-6,-7,-8,-9,-10,-12,-13,-14,-23,-11,-16,-17,-18,]),'COMMA':([2,6,8,10,11,12,13,15,16,17,24,26,28,30,31,32,33,34,35,36,37,39,40,41,42,43,44,46,47,48,49,50,51,],[14,-5,-33,-21,-19,-20,-22,14,14,14,-27,-15,14,-6,-7,-8,-9,-10,-12,-13,-28,49,-29,-14,-23,-11,-16,14,-27,-17,-27,-18,-30,]),'RPAREN':([6,8,10,11,12,13,26,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,48,50,],[-5,-33,-21,-19,-20,-22,-15,44,-31,-6,-7,-8,-9,-10,-12,-13,-14,-23,-11,-16,50,-32,-17,-18,]),'PLUS':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[18,-33,-21,-19,-20,-22,-15,18,-7,-8,-9,18,18,-13,18,-14,-23,18,-16,-17,-18,]),'TIMES':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[20,-33,-21,-19,-20,-22,-15,20,20,20,-9,20,20,-13,20,-14,-23,20,-16,-17,-18,]),'EQUALS':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[21,-33,-21,-19,-20,-22,-15,21,-7,-8,-9,21,21,-13,21,-14,-23,21,-16,-17,-18,]),'DIVIDE2':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[22,-33,-21,-19,-20,-22,-15,22,-7,-8,-9,22,22,-13,22,-14,-23,22,-16,-17,-18,]),'DIVIDE':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[23,-33,-21,-19,-20,-22,-15,23,23,23,-9,23,23,-13,23,-14,-23,23,-16,-17,-18,]),'LBRACKET':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[24,-33,-21,-19,-20,-22,-15,24,-7,-8,-9,24,24,-13,24,-14,-23,24,-16,-17,-18,]),'DOT':([6,8,10,11,12,13,26,30,31,32,33,34,35,36,37,41,42,43,44,48,50,],[25,-33,-21,-19,-20,-22,-15,25,-7,-8,-9,25,25,-13,25,-14,-23,25,-16,-17,-18,]),'ASSIGN':([8,],[27,]),'COLON':([8,10,11,12,13,24,26,31,32,33,34,35,36,37,41,42,43,44,47,48,49,50,],[-33,-21,-19,-20,-22,40,-15,-7,-8,-9,-10,-12,-13,47,-14,-23,-11,-16,40,-17,40,-18,]),'RBRACKET':([8,10,11,12,13,24,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,],[-33,-21,-19,-20,-22,-24,-15,-7,-8,-9,-10,-12,-13,-28,48,-26,-29,-14,-23,-11,-16,-27,-17,-24,-18,-30,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top':([0,],[1,]),'expressions':([0,3,4,5,9,29,],[2,15,16,17,28,46,]),'expression':([0,3,4,5,7,9,14,18,19,20,21,22,23,24,27,29,47,49,],[6,6,6,6,26,6,30,31,32,33,34,35,36,37,43,6,37,37,]),'name':([0,3,4,5,7,9,14,18,19,20,21,22,23,24,27,29,47,49,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'expressionsBE':([24,49,],[38,52,]),'expressionsBEE':([24,47,49,],[39,51,39,]),'dot_names':([25,],[41,]),'expressionsV':([29,],[45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> expressions','top',1,'p_top','utillc.py',169),
  ('top -> EKON expressions','top',2,'p_top_1','utillc.py',173),
  ('top -> EKOX expressions','top',2,'p_top_2','utillc.py',176),
  ('top -> EKOT expressions','top',2,'p_top_3','utillc.py',180),
  ('expressions -> expression','expressions',1,'p_expressions_1','utillc.py',184),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions_2','utillc.py',188),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','utillc.py',193),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','utillc.py',194),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','utillc.py',195),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','utillc.py',196),
  ('expression -> NAME ASSIGN expression','expression',3,'p_expression_binop','utillc.py',197),
  ('expression -> expression DIVIDE2 expression','expression',3,'p_expression_binop','utillc.py',198),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','utillc.py',199),
  ('name -> expression DOT dot_names','name',3,'p_expression_dot','utillc.py',203),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','utillc.py',207),
  ('expression -> LPAREN expressions RPAREN','expression',3,'p_expression_group','utillc.py',211),
  ('expression -> expression LBRACKET expressionsBE RBRACKET','expression',4,'p_expression_group','utillc.py',212),
  ('expression -> name LPAREN expressionsV RPAREN','expression',4,'p_expression_group','utillc.py',213),
  ('expression -> NUMBER','expression',1,'p_expression_number','utillc.py',223),
  ('expression -> FLOAT','expression',1,'p_expression_float','utillc.py',227),
  ('expression -> name','expression',1,'p_expression_name','utillc.py',231),
  ('expression -> STRING','expression',1,'p_expression_string','utillc.py',235),
  ('dot_names -> NAME','dot_names',1,'p_dot_names_1','utillc.py',239),
  ('expressionsBE -> <empty>','expressionsBE',0,'p_expressionsBE_1','utillc.py',248),
  ('expressionsBE -> expressionsBEE COMMA expressionsBE','expressionsBE',3,'p_expressionsBE_2','utillc.py',252),
  ('expressionsBE -> expressionsBEE','expressionsBE',1,'p_expressionsBE_3','utillc.py',256),
  ('expressionsBEE -> <empty>','expressionsBEE',0,'p_expressionsBEE_0','utillc.py',260),
  ('expressionsBEE -> expression','expressionsBEE',1,'p_expressionsBEE_1','utillc.py',263),
  ('expressionsBEE -> COLON','expressionsBEE',1,'p_expressionsBEE_2','utillc.py',266),
  ('expressionsBEE -> expression COLON expressionsBEE','expressionsBEE',3,'p_expressionsBEE_3','utillc.py',269),
  ('expressionsV -> <empty>','expressionsV',0,'p_expressionsV_1','utillc.py',274),
  ('expressionsV -> expressions','expressionsV',1,'p_expressionsV_2','utillc.py',278),
  ('name -> NAME','name',1,'p_name_1','utillc.py',286),
]
