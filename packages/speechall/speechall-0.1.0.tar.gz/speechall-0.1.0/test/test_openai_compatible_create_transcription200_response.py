# coding: utf-8

"""
    Speechall API

    The Speechall REST API provides powerful and flexible speech-to-text capabilities. It allows you to transcribe audio files using various underlying STT providers and models, optionally apply custom text replacement rules, and access results in multiple formats. The API includes standard endpoints for transcription and endpoints compatible with the OpenAI API structure. 

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from speechall.models.openai_compatible_create_transcription200_response import OpenaiCompatibleCreateTranscription200Response  # noqa: E501

class TestOpenaiCompatibleCreateTranscription200Response(unittest.TestCase):
    """OpenaiCompatibleCreateTranscription200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenaiCompatibleCreateTranscription200Response:
        """Test OpenaiCompatibleCreateTranscription200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenaiCompatibleCreateTranscription200Response`
        """
        model = OpenaiCompatibleCreateTranscription200Response()  # noqa: E501
        if include_optional:
            return OpenaiCompatibleCreateTranscription200Response(
                language = '',
                duration = 1.337,
                text = '',
                words = [
                    speechall.models.open_ai_transcription_word.OpenAI_TranscriptionWord(
                        word = '', 
                        start = 1.337, 
                        end = 1.337, )
                    ],
                segments = [
                    speechall.models.open_ai_transcription_segment.OpenAI_TranscriptionSegment(
                        id = 56, 
                        seek = 56, 
                        start = 1.337, 
                        end = 1.337, 
                        text = '', 
                        tokens = [
                            56
                            ], 
                        temperature = 1.337, 
                        avg_logprob = 1.337, 
                        compression_ratio = 1.337, 
                        no_speech_prob = 1.337, )
                    ]
            )
        else:
            return OpenaiCompatibleCreateTranscription200Response(
                language = '',
                duration = 1.337,
                text = '',
        )
        """

    def testOpenaiCompatibleCreateTranscription200Response(self):
        """Test OpenaiCompatibleCreateTranscription200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
