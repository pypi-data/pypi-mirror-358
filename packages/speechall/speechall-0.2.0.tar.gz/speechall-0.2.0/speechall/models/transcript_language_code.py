# coding: utf-8

"""
    Speechall API

    The Speechall REST API provides powerful and flexible speech-to-text capabilities. It allows you to transcribe audio files using various underlying STT providers and models, optionally apply custom text replacement rules, and access results in multiple formats. The API includes standard endpoints for transcription and endpoints compatible with the OpenAI API structure. 

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class TranscriptLanguageCode(str, Enum):
    """
    The language code of the audio file, typically in ISO 639-1 format. Specifying the correct language improves transcription accuracy and speed. The special value `auto` can be used to request automatic language detection, if supported by the selected model. If omitted, the default language is English (`en`). 
    """

    """
    allowed enum values
    """
    AUTO = 'auto'
    EN = 'en'
    EN_AU = 'en_au'
    EN_UK = 'en_uk'
    EN_US = 'en_us'
    AF = 'af'
    AM = 'am'
    AR = 'ar'
    AS = 'as'
    AZ = 'az'
    BA = 'ba'
    BE = 'be'
    BG = 'bg'
    BN = 'bn'
    BO = 'bo'
    BR = 'br'
    BS = 'bs'
    CA = 'ca'
    CS = 'cs'
    CY = 'cy'
    DA = 'da'
    DE = 'de'
    EL = 'el'
    ES = 'es'
    ET = 'et'
    EU = 'eu'
    FA = 'fa'
    FI = 'fi'
    FO = 'fo'
    FR = 'fr'
    GL = 'gl'
    GU = 'gu'
    HA = 'ha'
    HAW = 'haw'
    HE = 'he'
    HI = 'hi'
    HR = 'hr'
    HT = 'ht'
    HU = 'hu'
    HY = 'hy'
    ID = 'id'
    IS = 'is'
    IT = 'it'
    JA = 'ja'
    JW = 'jw'
    KA = 'ka'
    KK = 'kk'
    KM = 'km'
    KN = 'kn'
    KO = 'ko'
    LA = 'la'
    LB = 'lb'
    LN = 'ln'
    LO = 'lo'
    LT = 'lt'
    LV = 'lv'
    MG = 'mg'
    MI = 'mi'
    MK = 'mk'
    ML = 'ml'
    MN = 'mn'
    MR = 'mr'
    MS = 'ms'
    MT = 'mt'
    MY = 'my'
    NE = 'ne'
    NL = 'nl'
    NN = 'nn'
    FALSE = 'false'
    OC = 'oc'
    PA = 'pa'
    PL = 'pl'
    PS = 'ps'
    PT = 'pt'
    RO = 'ro'
    RU = 'ru'
    SA = 'sa'
    SD = 'sd'
    SI = 'si'
    SK = 'sk'
    SL = 'sl'
    SN = 'sn'
    SO = 'so'
    SQ = 'sq'
    SR = 'sr'
    SU = 'su'
    SV = 'sv'
    SW = 'sw'
    TA = 'ta'
    TE = 'te'
    TG = 'tg'
    TH = 'th'
    TK = 'tk'
    TL = 'tl'
    TR = 'tr'
    TT = 'tt'
    UK = 'uk'
    UR = 'ur'
    UZ = 'uz'
    VI = 'vi'
    YI = 'yi'
    YO = 'yo'
    ZH = 'zh'

    @classmethod
    def from_json(cls, json_str: str) -> TranscriptLanguageCode:
        """Create an instance of TranscriptLanguageCode from a JSON string"""
        return TranscriptLanguageCode(json.loads(json_str))


