[tool.poetry]
name = "pydantic-resolve"
version = "1.12.3"
description = "It just provide a pair of pre & post methods around pydantic fields, the rest is up to your imagination"
authors = ["tangkikodo <allmonday@126.com>"]
readme = "README.md"
repository = "https://github.com/allmonday/pydantic_resolve"
keywords = ["pydantic", "fastapi"]
license = "MIT"
packages = [{include = "pydantic_resolve"}]

[tool.poetry.dependencies]
python = "^3.7"
aiodataloader = "^0.4.0"

[tool.poetry.group.dev.dependencies]
tox = "^4.4.6"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
coverage = "^7.2.1"
aiosqlite = "^0.18.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.7"}
pytest-asyncio = "^0.21.0"
fastapi = "^0.101.0"
uvicorn = "^0.22.0"
mkdocs-material = "9.*"
mkdocs-static-i18n = {version = "1.2.0", extras = ["material"]}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
]