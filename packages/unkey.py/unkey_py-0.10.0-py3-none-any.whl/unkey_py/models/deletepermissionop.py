"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unkey_py.types import BaseModel


class DeletePermissionRequestBodyTypedDict(TypedDict):
    permission_id: str
    r"""The id of the permission you want to delete."""


class DeletePermissionRequestBody(BaseModel):
    permission_id: Annotated[str, pydantic.Field(alias="permissionId")]
    r"""The id of the permission you want to delete."""


class DeletePermissionResponseBodyTypedDict(TypedDict):
    r"""Sucessfully deleted a permission"""


class DeletePermissionResponseBody(BaseModel):
    r"""Sucessfully deleted a permission"""


class DeletePermissionResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    object: NotRequired[DeletePermissionResponseBodyTypedDict]
    r"""Sucessfully deleted a permission"""


class DeletePermissionResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    object: Optional[DeletePermissionResponseBody] = None
    r"""Sucessfully deleted a permission"""
