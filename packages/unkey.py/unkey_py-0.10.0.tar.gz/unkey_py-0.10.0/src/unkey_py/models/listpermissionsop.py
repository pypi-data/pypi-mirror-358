"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unkey_py.types import BaseModel


class ListPermissionsResponseBodyTypedDict(TypedDict):
    id: str
    r"""The id of the permission"""
    name: str
    r"""The name of the permission."""
    description: NotRequired[str]
    r"""The description of what this permission does. This is just for your team, your users will not see this."""


class ListPermissionsResponseBody(BaseModel):
    id: str
    r"""The id of the permission"""

    name: str
    r"""The name of the permission."""

    description: Optional[str] = None
    r"""The description of what this permission does. This is just for your team, your users will not see this."""


class ListPermissionsResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    response_bodies: NotRequired[List[ListPermissionsResponseBodyTypedDict]]
    r"""The permissions in your workspace"""


class ListPermissionsResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    response_bodies: Optional[List[ListPermissionsResponseBody]] = None
    r"""The permissions in your workspace"""
