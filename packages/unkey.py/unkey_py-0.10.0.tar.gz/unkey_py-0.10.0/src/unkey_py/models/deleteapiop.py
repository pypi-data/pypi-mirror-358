"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unkey_py.types import BaseModel


class DeleteAPIRequestBodyTypedDict(TypedDict):
    api_id: str
    r"""The id of the api to delete"""


class DeleteAPIRequestBody(BaseModel):
    api_id: Annotated[str, pydantic.Field(alias="apiId")]
    r"""The id of the api to delete"""


class DeleteAPIResponseBodyTypedDict(TypedDict):
    r"""The api was successfully deleted, it may take up to 30s for this to take effect in all regions"""


class DeleteAPIResponseBody(BaseModel):
    r"""The api was successfully deleted, it may take up to 30s for this to take effect in all regions"""


class DeleteAPIResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    object: NotRequired[DeleteAPIResponseBodyTypedDict]
    r"""The api was successfully deleted, it may take up to 30s for this to take effect in all regions"""


class DeleteAPIResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    object: Optional[DeleteAPIResponseBody] = None
    r"""The api was successfully deleted, it may take up to 30s for this to take effect in all regions"""
