"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from unkey_py.types import BaseModel


class CreateAPIRequestBodyTypedDict(TypedDict):
    name: str
    r"""The name for your API. This is not customer facing."""


class CreateAPIRequestBody(BaseModel):
    name: str
    r"""The name for your API. This is not customer facing."""


class CreateAPIResponseBodyTypedDict(TypedDict):
    r"""The configuration for an api"""

    api_id: str
    r"""The id of the api"""


class CreateAPIResponseBody(BaseModel):
    r"""The configuration for an api"""

    api_id: Annotated[str, pydantic.Field(alias="apiId")]
    r"""The id of the api"""


class CreateAPIResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    object: NotRequired[CreateAPIResponseBodyTypedDict]
    r"""The configuration for an api"""


class CreateAPIResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    object: Optional[CreateAPIResponseBody] = None
    r"""The configuration for an api"""
