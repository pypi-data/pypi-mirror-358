[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cli-onprem"
version = "1.3.1"
description = "CLI tool for infrastructure engineers"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [
    { name = "kang hee yong", email = "cagojeiger89@gmail.com" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pyyaml>=6.0.0",
    "pydantic<2.0.0",
    "boto3>=1.28.0",
    "tqdm>=4.65.0",
    "types-tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pre-commit-uv",
    "ruff",
    "black",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-mypy-plugins",
    "pyupgrade",
    "build",
    "python-semantic-release",
    "twine",
    "types-PyYAML",
]

[project.scripts]
cli-onprem = "cli_onprem.__main__:main_cli"

[tool.hatch.build.targets.wheel]
packages = ["src/cli_onprem"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = []

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = false



[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "semantic_release.commit_parser.angular:AngularCommitParser"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
version_toml = ["pyproject.toml:project.version"]
tag_format = "v{version}"

[semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[dependency-groups]
dev = [
    "pytest-cov>=6.1.1",
]
