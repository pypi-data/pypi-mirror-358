def main():
    print("""
CodeWise CLI 

Ferramenta para an√°lise de c√≥digo, documenta√ß√£o autom√°tica e gera√ß√£o de Pull Requests (Gemini + CrewAI).

 Pr√©-requisitos para evitar erros:
- Criar um arquivo .env com: GEMINI_API_KEY=sua-chave
- Ter o GitHub CLI (gh) instalado e autenticado
- Estar dentro de um reposit√≥rio Git com commits v√°lidos.

 Comandos dispon√≠veis:

  codewise-init --all
    ‚Üí Instala os hooks na pasta .git (pr√©-push e pr√©-commit), ativando a automa√ß√£o para o reposit√≥rio atual.

  codewise-pr
    ‚Üí Ir√° perguntar para qual remote voc√™ quer que o PR seja criado, caso tenha um upstream configurado.
    ‚Üí Analisa commits e cria ou atualiza Pull Request com IA (t√≠tulo, descri√ß√£o e an√°lise t√©cnica).
    ‚Üí H√° duas varia√ß√µes: no origin "codewise-pr-origin" / no upstream "codewise-pr-upstream"	

  codewise-lint
    ‚Üí Analisa os arquivos staged antes do commit (modo leve, sem IA de PR).

üí° Dica:

- Rode codewise-pr ap√≥s fazer commits e **antes do push**, para evitar erros silenciosos (ex: falta do `.env`, falha no gh, conflito de branch).
- O pre-push roda codewise-pr automaticamente ‚Äî √∫til como backup, mas **pode bloquear o push se algo falhar**.

 ‚Üí‚ö†Ô∏è Use codewise-init --all uma √∫nica vez por reposit√≥rio para configurar os pr√© hooks ( a n√£o ser que voc√™ queira trocar o destino da cria√ß√£o do PR para o upstream) , 
caso tenha um remoto upstream configurado voc√™ pode trocar aonde ser√° criado o PR entre ele e o origin com esse comando tamb√©m.‚ö†Ô∏è

-  **LEMBRE-SE DE CONFIGURAR O .env COM SUA CHAVE DO GEMINI.**
-  Se voc√™ estiver apenas na branch main (sem commits ou sem branch separada), **o PR n√£o poder√° ser criado**, pois n√£o h√° base de compara√ß√£o.

""")
