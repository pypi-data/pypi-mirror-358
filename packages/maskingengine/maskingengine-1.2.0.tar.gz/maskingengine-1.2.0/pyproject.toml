[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "maskingengine"
version = "1.2.0"
authors = [
    {name = "MaskingEngine Team", email = "contact@maskingengine.dev"}
]
description = "Local-first PII redaction for LLM integration - mask before AI processing, restore after. Uses default patterns + multilingual NER, no network calls."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: Text Processing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = ["pii", "privacy", "redaction", "llm", "openai", "claude", "gpt", "langchain", "local-first", "multilingual", "ner", "regex", "ai-pipelines"]
dependencies = [
    "pyyaml>=6.0",
    "transformers>=4.21.0",
    "torch>=1.12.0",
    "click>=8.0.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "pydantic>=1.8.0",
    "requests>=2.25.0",
    "jsonschema>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "pre-commit>=2.15",
    "httpx>=0.23.0",
]
api = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "httpx>=0.23.0",
]
minimal = [
    "pyyaml>=6.0",
    "click>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/foofork/maskingengine"
Documentation = "https://github.com/foofork/maskingengine/blob/main/docs/README.md"
Repository = "https://github.com/foofork/maskingengine"
"Bug Tracker" = "https://github.com/foofork/maskingengine/issues"

[project.scripts]
maskingengine = "maskingengine.cli.main:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["maskingengine*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
maskingengine = ["pattern_packs/*.yaml", "core/*.yaml", "core/*.json"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=maskingengine"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
exclude = ["transformers"]

[[tool.mypy.overrides]]
module = "transformers.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "click.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "torch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonschema.*"
ignore_missing_imports = true