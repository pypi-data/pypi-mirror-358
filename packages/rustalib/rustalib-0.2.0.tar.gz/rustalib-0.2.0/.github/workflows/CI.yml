name: CI

on:
  push:
    branches:
      - main
      - master
    tags: # Se añade esto para que el workflow se dispare con las etiquetas
      - 'v*' # Ejemplo: 'v1.0.0', 'v2.1.3'. Puedes usar '*' para cualquier etiqueta.
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - x86_64
          - x86
          - aarch64
          - armv7
          - s390x
          - ppc64le
    steps:
      - uses: actions/checkout@v4
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}
      - name: Configure Git to use SSH
        run: |
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Configure Cargo for SSH
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build Linux wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      - name: Upload Linux wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  build-musllinux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - x86_64
          - x86
          - aarch64
          - armv7
    steps:
      - uses: actions/checkout@v4
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}
      - name: Configure Git to use SSH
        run: |
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Configure Cargo for SSH
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build musllinux wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2
      - name: Upload musllinux wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.target }}
          path: dist

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read # Asegúrate de que este permiso esté configurado
    strategy:
      matrix:
        target:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTIONS_PAT }}

      - name: Configure Git for PAT authentication
        run: |
          git config --global url."https://oauth2:${{ secrets.ACTIONS_PAT }}@github.com/".insteadOf "ssh://git@github.com/"
          git config --global credential.helper store
        shell: bash

      - name: Configure Cargo
        run: |
          mkdir -p ~/.cargo
          echo '[net]' > ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
        shell: bash

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.target }}

      - name: Build Windows wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload Windows wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}
      - name: Configure Git to use SSH
        run: |
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Configure Cargo for SSH
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build macOS wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload macOS wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}
      - name: Configure Git to use SSH
        run: |
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Configure Cargo for SSH
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
      - name: Build source distribution
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  # Job para liberar a Test PyPI
  release:
    name: Release to Test PyPI
    runs-on: ubuntu-latest
    needs: [build-linux, build-musllinux, build-windows, build-macos, build-sdist]
    # **CONDICIÓN AÑADIDA**: Solo se ejecuta si es un 'push' de una etiqueta
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true
      
      - name: Check dist contents
        run: |
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Total files to upload:"
          find dist/ -name "*.whl" -o -name "*.tar.gz" | wc -l
      
      # Usando la GitHub Action oficial de PyPI
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          packages-dir: dist/
          verbose: true
          print-hash: true
          #repository-url: https://test.pypi.org/legacy/
