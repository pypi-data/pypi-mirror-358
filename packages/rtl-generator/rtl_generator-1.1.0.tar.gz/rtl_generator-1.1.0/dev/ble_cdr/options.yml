# Example Argument
# pi: ### replaces #{(pi)} with 3.14159
#   type: float
#   help: "This string is used to generate help text for the argument"
#   default: 3.14159
# Arguments are values to be used in the generated RTL
# Matches of the pattern #{key} in the template file are used to replace the values in the template file
# The replacement order is as follows:
# 1. Arguments
# 2. Variables
# 3. Functions
# The script will throw an error if a key is not found in any of the above locations
# These keys are also used to generate the CLI interface
# Sub-keys are passed as keyword arguments to the ArgumentParser constructor

# Arguments
clk_freq:
  type: int
  help: "Module Clock Frequency"
  default: 16000000
fsym:
  type: int
  help: "Symbol Rate"
  default: 1000000
adc_width:
  type: int
  help: "Width of the Analog to Digital Converters"
  default: 4
ifreq:
  type: float
  help: "Intermediate Frequency"
  default: 1.25e6
mf_clock_rec:
  help: "Use the matched filter output to recover the symbol clock"
  action: store_true
ek_shift:
  type: int
  help: "Amount to bit shift error term down by"
  default: 2
tau_shift:
  type: int
  help: "Amount to bit shift tau term down by"
  default: 11
sample_pos:
  type: int
  help: "Index to toggle generated RX clock high"
  default: 2
amp:
  type: int
  help: "Template Amplitude"
  default: 15
preamble_len:
  type: int
  help: "Length of preamble in bits"
  default: 8
transition_error:
  type: int
  help: "Max allowable transition error to detect preamble"
  default: 1