[build-system]
requires = ["hatchling>=1.4.0", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "ryoma-nicer"
version = "0.7.1"
description = "a clone from the root project for Ryoma AI Platform â€“ made compatible with Pydantic v2"
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "pytest >= 6.2.5",
    "black >= 23.3.0",
    "isort >= 5.9.3",
    "mypy >= 0.910",
    "flake8 >= 3.9.2",
    "click >= 8.0.0",
    "pip >= 21.3.1",
    "setuptools >= 58.0.4",
    "tabulate>=0.9.0",
    "pyupgrade >= 2.26.0",
    "pytest-cov>=5.0.0",
    "openai-responses>=0.10.0",
    "coverage-badge>=1.1.2",
]

[project.optional-dependencies]
bigquery = [
  "google-cloud-bigquery>=3.33.0",
  "gcsfs>=2025.3.2",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/ryoma_ai/ryoma_ai",
  "src/ryoma_lab/ryoma_lab"
]

[tool.hatch.packages]
ryoma_ai  = { from = "src" }
ryoma_lab = { from = "src" }

[tool.hatch.version]
source = "vcs"
tag-pattern = "^v(?P<version>\\d+\\.\\d+\\.\\d+(?:-[^+]+)?)$"
fallback-version = "0.1.0"

[tool.uv.sources]
ryoma_ai = { workspace = true}
ryoma_lab = { workspace = true}

[tool.uv.workspace]
members = ["src/ryoma_ai", "src/ryoma_lab"]

[tool.isort]
profile = "black"


[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "ryoma"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
