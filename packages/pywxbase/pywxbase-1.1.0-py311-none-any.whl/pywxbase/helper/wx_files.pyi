# Stub file for type hints

import os
import shutil
import zipfile
import tarfile
from typing import Callable, Optional, List
from datetime import datetime, timedelta, timezone

class WXFiles:
    @staticmethod
    def read_file(file_path: str, mode: str = 'rb', encoding: str = 'utf-8'): ...
    @staticmethod
    def write_file(file_path: str, content: str, encoding: str = 'utf-8'): ...
    @staticmethod
    def copy_file(src_path: str, dst_path: str): ...
    @staticmethod
    def move_file(src_path: str, dst_path: str): ...
    @staticmethod
    def delete_file(file_path: str): ...
    @staticmethod
    def create_directory(dir_path: str): ...
    @staticmethod
    def delete_directory(dir_path: str): ...
    @staticmethod
    def compress_to_zip(src_path: str, zip_path: str): ...
    @staticmethod
    def extract_zip(zip_path: str, extract_path: str): ...
    @staticmethod
    def compress_to_tar(src_path: str, tar_path: str, compression: str = 'gz'): ...
    @staticmethod
    def extract_tar(tar_path: str, extract_path: str): ...
    @staticmethod
    def list_files(dir_path: str): ...
    @staticmethod
    def get_file_size(file_path: str): ...
    @staticmethod
    def get_directory_size(dir_path: str): ...
    @staticmethod
    def reserve_days_of_files(files_path: str, reserve_days: int = 3, dt: datetime = None, timezone_offset: Optional[float] = None, log_callback: Callable[[str, str], any] = None): ...
    @staticmethod
    def scan_directory_files(directory_path): ...
    @staticmethod
    def roll_files_for_reserve_sizes(files_path: str = None, sizes_threshold: int = 5 * 1024 * 1024 * 1024, log_callback: Callable[[str, str], any] = None): ...
    @staticmethod
    def zip_files_by_filename(files_path: str = '.', file_zip_filename: str = None, filename_startswith: str = None, filename_endswith: str = None, file_sync_del: bool = False, zips_path: str = None, compression, allow_zip_64, compress_level, log_callback: Callable[[str, str], any] = None): ...
