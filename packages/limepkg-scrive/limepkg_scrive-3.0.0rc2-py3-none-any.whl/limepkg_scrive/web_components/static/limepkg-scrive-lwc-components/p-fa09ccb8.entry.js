import{r as t}from"./p-02a3464d.js";import{C as e,P as c}from"./p-31906486.js";let n=class{constructor(){this.target="_blank"}};n=function(t,e,c,n){var o,s=arguments.length,i=s<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,c):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,c,n);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(s<3?o(i):s>3?o(e,c,i):o(e,c))||i);return s>3&&i&&Object.defineProperty(e,c,i),i}([e({id:"limepkg_scrive.esign"})],n);class o{constructor(t){this.notifications=t}handle(t){console.log(t,t.filter.exp),"document"===t.context.limetype&&t.filter&&"IN"===t.filter.op&&"_id"===t.filter.key?window.open("https://scrive.com",t.target):this.notifications.notify("The EsignCommand can only be run on document limetypes with a filter expression that includes _id.")}}const s=class{constructor(e){t(this,e)}connectedCallback(){}componentWillLoad(){const t=new o(this.notificationService);this.commandBus.register(n,t)}componentWillUpdate(){}disconnectedCallback(){}get notificationService(){return this.platform.get(c.Notification)}get commandBus(){return this.platform.get(c.CommandBus)}};export{s as lwc_limepkg_scrive_loader}