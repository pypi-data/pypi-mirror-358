import{r as e}from"./p-02a3464d.js";import{C as t,P as o,S as n,a as s}from"./p-9d28355d.js";let c=class{};c=function(e,t,o,n){var s,c=arguments.length,i=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var r=e.length-1;r>=0;r--)(s=e[r])&&(i=(c<3?s(i):c>3?s(t,o,i):s(t,o))||i);return c>3&&i&&Object.defineProperty(t,o,i),i}([t({id:"limepkg_scrive.esign"})],c);class i{constructor(e,t,o){this.notifications=e,this.config=t,this.language=o,this.config=t}handle(e){const t=e.filter.exp;if(console.log(e,t,this.config),"document"!==e.context.limetype||!e.filter||"IN"!==e.filter.op||"_id"!==e.filter.key)return void this.notifications.notify("The EsignCommand can only be run on document limetypes with a filter expression that includes _id.");const{scriveHost:o,includePerson:n,includeCoworker:s,cloneDocument:c,target:i}=this.config;window.open(`${o}/public/?limeDocId=${t.join(",")}&lang=${this.language}&usePerson=${n}&useCoworker=${s}&cloneDocument=${c}`,i)}}var r=function(e,t,o,n){var s,c=arguments.length,i=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var r=e.length-1;r>=0;r--)(s=e[r])&&(i=(c<3?s(i):c>3?s(t,o,i):s(t,o))||i);return c>3&&i&&Object.defineProperty(t,o,i),i};const l=class{constructor(t){e(this,t)}connectedCallback(){}componentWillLoad(){const e=new i(this.notificationService,this.config.limepkg_scrive,this.session.language);this.commandBus.register(c,e)}componentWillUpdate(){}disconnectedCallback(){}get notificationService(){return this.platform.get(o.Notification)}get commandBus(){return this.platform.get(o.CommandBus)}};r([n({})],l.prototype,"config",void 0),r([s()],l.prototype,"session",void 0);export{l as lwc_limepkg_scrive_loader}