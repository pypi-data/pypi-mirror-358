import{r as e}from"./p-02a3464d.js";import{C as t,P as o,S as c}from"./p-001c2b99.js";let n=class{};n=function(e,t,o,c){var n,i=arguments.length,s=i<3?t:null===c?c=Object.getOwnPropertyDescriptor(t,o):c;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,c);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(s=(i<3?n(s):i>3?n(t,o,s):n(t,o))||s);return i>3&&s&&Object.defineProperty(t,o,s),s}([t({id:"limepkg_scrive.esign"})],n);class i{constructor(e,t){this.notifications=e,this.config=t,this.config=t}handle(e){const t=e.filter.exp;if(console.log(e,t,this.config),"document"!==e.context.limetype||!e.filter||"IN"!==e.filter.op||"_id"!==e.filter.key)return void this.notifications.notify("The EsignCommand can only be run on document limetypes with a filter expression that includes _id.");const{scriveHost:o,includePerson:c,includeCoworker:n,cloneDocument:i,target:s}=this.config;window.open(`${o}/public/?limeDocId=${t.join(",")}&lang=en&usePerson=${c}&useCoworker=${n}&cloneDocument=${i}`,s)}}const s=class{constructor(t){e(this,t)}connectedCallback(){}componentWillLoad(){const e=new i(this.notificationService,this.config.limepkg_scrive);this.commandBus.register(n,e)}componentWillUpdate(){}disconnectedCallback(){}get notificationService(){return this.platform.get(o.Notification)}get commandBus(){return this.platform.get(o.CommandBus)}};!function(e,t,o,c){var n,i=arguments.length,s=i<3?t:null===c?c=Object.getOwnPropertyDescriptor(t,o):c;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,c);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(s=(i<3?n(s):i>3?n(t,o,s):n(t,o))||s);i>3&&s&&Object.defineProperty(t,o,s)}([c({})],s.prototype,"config",void 0);export{s as lwc_limepkg_scrive_loader}