[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "monsoon-crop-predictor"
dynamic = ["version"]
description = "Advanced ML-based crop yield prediction system using monsoon and rainfall data"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Subrat Dash", email = "subratdash2022@gmail.com"},
]
keywords = ["agriculture", "crop yield", "machine learning", "monsoon", "rainfall", "prediction"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "lightgbm>=3.2.0",
    "xgboost>=1.4.0"
]

[project.optional-dependencies]
api = [
    "fastapi>=0.68.0",
    "uvicorn[standard]>=0.15.0",
    "pydantic>=1.8.0"
]
cli = [
    "click>=8.0.0"
]
visualization = [
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0"
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.4.0"
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0"
]
all = [
    "fastapi>=0.68.0",
    "uvicorn[standard]>=0.15.0",
    "pydantic>=1.8.0",
    "click>=8.0.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.4.0"
]

[project.urls]
Homepage = "https://github.com/SubratDash67/Monsoon-Crop-Yield"
Documentation = "https://github.com/SubratDash67/Monsoon-Crop-Yield/blob/main/README.md"
Repository = "https://github.com/SubratDash67/Monsoon-Crop-Yield"
"Bug Tracker" = "https://github.com/SubratDash67/Monsoon-Crop-Yield/issues"

[project.scripts]
crop-predictor = "monsoon_crop_predictor.cli.commands:cli"

[tool.setuptools]
packages = ["monsoon_crop_predictor"]
include-package-data = true

[tool.setuptools.package-data]
monsoon_crop_predictor = [
    "models/best_advanced_models/*.pkl",
    "data/*.csv",
    "config/*.json"
]

[tool.setuptools_scm]
write_to = "monsoon_crop_predictor/_version.py"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["monsoon_crop_predictor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/cli/*"  # CLI testing requires special setup
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
