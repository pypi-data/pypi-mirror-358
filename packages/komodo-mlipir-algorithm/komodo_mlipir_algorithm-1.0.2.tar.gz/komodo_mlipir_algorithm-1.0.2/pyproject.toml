[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "komodo-mlipir-algorithm"
version = "1.0.2"
authors = [
    {name = "Pejalan Sunyi", email = "khalifardy.miqdarsah@gmail.com"},
]
maintainers = [
    {name = "Pejalan Sunyi", email = "khalifardy.miqdarsah@gmail.com"},
]
description = "A Python implementation of Komodo Mlipir Algorithm (KMA) for optimization"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = [
    "optimization",
    "metaheuristic",
    "komodo-mlipir",
    "evolutionary-algorithm",
    "swarm-intelligence",
    "nature-inspired",
    "global-optimization",
]
dependencies = [
    "numpy>=1.20.0",
]

[project.urls]
Homepage = "https://github.com/khalifardy/komodo_mlipir_algorithm"
Documentation = "https://komodo-mlipir-algorithm.readthedocs.io/"
Repository = "https://github.com/khalifardy/komodo_mlipir_algorithm"
"Bug Tracker" = "https://github.com/khalifardy/komodo_mlipir_algorithm/issues"
Changelog = "https://github.com/khalifardy/komodo_mlipir_algorithm/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "black>=21.6b0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "isort>=5.9.0",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
    "sphinx-autodoc-typehints>=1.12.0",
]
viz = [
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]
examples = [
    "jupyter>=1.0.0",
    "notebook>=6.4.0",
    "ipykernel>=6.0.0",
]
all = [
    "komodo-mlipir-algorithm[dev,docs,viz,examples]",
]

[project.scripts]
kma-benchmark = "optimizer.cli:benchmark_cli"
kma-optimize = "optimizer.cli:optimize_cli"

[tool.setuptools.packages.find]
include = ["optimizer*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
komodo_mlipir = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=komodo_mlipir",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["komodo_mlipir"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]