[tool.poetry]
name = "PyCCE-RC"
version = "0.4.0"
description = "Package for handling panel data with strong cross-sectional dependence"
authors = ["Merijn Huiskes <merijnhuiskes1@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"

[[tool.poetry.packages]]
include = "py_cce"

[tool.poetry.dependencies]
python = "^3.12"
numpy = "^2.2.3"
pandas = "^2.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
black = "^25.1.0"
ruff = "^0.9.6"
mypy = "^1.15.0"
pre-commit = "^4.1.0"
coverage = "^7.4.4"
pytest-cov = "^5.0.0"
sphinx = "^7.3.7"
sphinx-rtd-theme = "^2.0.0"
sphinx-autodoc-typehints = "^2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
skip-string-normalization = false
target-version = ["py311"]

[tool.ruff]
# Enhanced selection of linters
line-length = 88
lint.select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "ANN",  # flake8-annotations
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]
lint.ignore = ["E501", "D100", "D104"]
fix = true
target-version = "py311"

# PEP 257 docstring standards
[tool.ruff.lint.pydocstyle]
convention = "google"

# Import sorting (PEP 328)
[tool.ruff.lint.isort]
known-first-party = ["py_cce"]
force-single-line = false
lines-between-types = 1
case-sensitive = true

# Type annotation settings
[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true

[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

# Package-specific mypy settings
[[tool.mypy.overrides]]
module = "py_cce.*"
disallow_any_generics = true
disallow_subclassing_any = true
