[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "postgres-mcp-server"
version = "1.0.0"
authors = [
    {name = "MCP Community", email = "community@mcp.dev"},
]
description = "A Model Context Protocol server for PostgreSQL databases with SSL support"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Framework :: AsyncIO",
]
keywords = ["mcp", "postgresql", "database", "ai", "llm", "model-context-protocol"]
dependencies = [
    "mcp>=1.0.0",
    "psycopg2-binary>=2.9.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
postgres-mcp-server = "postgres_mcp_server:main"
postgres-mcp = "postgres_mcp_server:main"

[project.urls]
Homepage = "https://modelcontextprotocol.io"
Documentation = "https://github.com/mcp-community/postgres-mcp-server/blob/main/README.md"
Repository = "https://github.com/mcp-community/postgres-mcp-server"
"Bug Reports" = "https://github.com/mcp-community/postgres-mcp-server/issues"

[tool.setuptools]
py-modules = ["postgres_mcp_server"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
    "."
]
asyncio_mode = "auto"
