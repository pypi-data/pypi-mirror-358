{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,G,C,C,E,C,O,C,C,E,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,ICEY,EAMA,EAOA,EAQA,EAQA,EAOA,EAMA,EAOA,EAOA,EAMA,EAaA,EAKA,E,E,E,kD,E,iB,C,GAhFA,EAAA,MAAA,CAAA,EAAA,mBAAA,IAAA,GAMA,EAAA,MAAA,CAAA,EAAA,iBAAA,IAAA,GAOA,EAAA,MAAA,CAAA,EAAA,kBAAA,IAAA,GAQA,EAAA,MAAA,CAAA,EAAA,gBAAA,IAAA,GAQA,EAAA,MAAA,CAAA,EAAA,cAAA,IAAA,GAOA,EAAA,MAAA,CAAA,EAAA,aAAA,IAAA,GAMA,EAAA,MAAA,CAAA,EAAA,UAAA,IAAA,GAOA,EAAA,MAAA,CAAA,EAAA,iBAAA,IAAA,GAOA,EAAA,MAAA,CAAA,EAAA,gBAAA,IAAA,GAMA,EAAA,MAAA,CAAA,EAAA,aAAA,IAAA,GAaA,EAAA,MAAA,CAAA,EAAA,eAAA,IAAA,GAKA,EAAA,MAAA,CAAA,EAAA,aAAA,IAAA,GAhFL,IAAK,G,CAAA,E,C,G,Q,C,W,E,O,C,U,E,K,C,QAAA,GAMA,G,CAAA,E,C,G,K,C,G,E,E,C,wB,E,E,C,2B,E,E,C,aAAA,GAOA,G,CAAA,E,C,G,Y,C,e,E,O,C,U,E,O,C,U,E,M,C,S,E,Q,C,WAAA,GAQA,G,CAAA,E,C,G,O,C,U,E,M,C,S,E,M,C,S,E,M,C,SAAA,GAQA,G,CAAA,E,C,G,U,C,a,E,U,C,a,E,O,C,U,E,Q,C,WAAA,GAOA,G,CAAA,E,C,G,Q,C,W,E,W,C,c,E,O,C,UAAA,GAMA,G,CAAA,E,C,G,Y,C,e,E,M,C,S,E,Y,C,e,E,U,C,aAAA,GAOA,G,CAAA,E,C,G,kB,C,qB,E,kB,C,qB,E,c,C,iB,E,c,C,iBAAA,GAOA,G,CAAA,E,C,G,G,C,M,E,E,C,K,E,K,C,QAAA,GAMA,G,CAAA,E,C,G,K,C,Q,E,M,C,S,E,U,C,a,E,K,C,Q,E,Q,C,W,E,E,C,K,E,G,C,M,E,U,C,a,E,M,C,SAAA,GAaA,G,CAAA,E,C,G,W,C,c,E,U,C,aAAA,GAKA,G,CAAA,E,C,G,I,C,O,E,O,C,U,E,O,C,U,E,M,C,SAAA,E,E,C,iD,O,E,C,M,C,S,C,C,C,C,C,C,C,EClFZ,EAAQ,cAAc,CAAG,SAAU,CAAC,EAClC,OAAO,GAAK,EAAE,UAAU,CAAG,EAAI,CAAC,QAAS,CAAC,CAC5C,EAEA,EAAQ,iBAAiB,CAAG,SAAU,CAAC,EACrC,OAAO,cAAc,CAAC,EAAG,aAAc,CAAC,MAAO,CAAA,CAAI,EACrD,EAEA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EAkBxC,OAjBA,OAAO,IAAI,CAAC,GAAQ,OAAO,CAAC,SAAU,CAAG,EAE7B,YAAR,GACA,AAAQ,eAAR,GACA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAK7C,OAAO,cAAc,CAAC,EAAM,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,CAAM,CAAC,EAAI,AACpB,CACF,EACF,GAEO,CACT,EAEA,EAAQ,MAAM,CAAG,SAAU,CAAI,CAAE,CAAQ,CAAE,CAAG,EAC5C,OAAO,cAAc,CAAC,EAAM,EAAU,CACpC,WAAY,CAAA,EACZ,IAAK,CACP,EACF,C,E,C,E,E,C,Q,C,Q,oB,C","sources":["<anon>","src/front/d.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (\n  modules,\n  entry,\n  mainEntry,\n  parcelRequireName,\n  externals,\n  distDir,\n  publicUrl,\n  devServer\n) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var importMap = previousRequire.i || {};\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        if (externals[name]) {\n          return externals[name];\n        }\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.require = nodeRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.distDir = distDir;\n  newRequire.publicUrl = publicUrl;\n  newRequire.devServer = devServer;\n  newRequire.i = importMap;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  // Only insert newRequire.load when it is actually used.\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\n  // INSERT_LOAD_HERE\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n    }\n  }\n})({\"a9LI9\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"TournamentFormat\", ()=>TournamentFormat);\nparcelHelpers.export(exports, \"TournamentRank\", ()=>TournamentRank);\nparcelHelpers.export(exports, \"TournamentState\", ()=>TournamentState);\nparcelHelpers.export(exports, \"StandingsMode\", ()=>StandingsMode);\nparcelHelpers.export(exports, \"PlayerState\", ()=>PlayerState);\nparcelHelpers.export(exports, \"TableState\", ()=>TableState);\nparcelHelpers.export(exports, \"Barrier\", ()=>Barrier);\nparcelHelpers.export(exports, \"RankingCategoy\", ()=>RankingCategoy);\nparcelHelpers.export(exports, \"LeagueRanking\", ()=>LeagueRanking);\nparcelHelpers.export(exports, \"MemberRole\", ()=>MemberRole);\nparcelHelpers.export(exports, \"MemberFilter\", ()=>MemberFilter);\nparcelHelpers.export(exports, \"AlertLevel\", ()=>AlertLevel);\nvar TournamentFormat = /*#__PURE__*/ function(TournamentFormat) {\n    TournamentFormat[\"Standard\"] = \"Standard\";\n    TournamentFormat[\"Limited\"] = \"Limited\";\n    TournamentFormat[\"Draft\"] = \"Draft\";\n    return TournamentFormat;\n}({});\nvar TournamentRank = /*#__PURE__*/ function(TournamentRank) {\n    TournamentRank[\"BASIC\"] = \"\";\n    TournamentRank[\"NC\"] = \"National Championship\";\n    TournamentRank[\"CC\"] = \"Continental Championship\";\n    TournamentRank[\"GP\"] = \"Grand Prix\";\n    return TournamentRank;\n}({});\nvar TournamentState = /*#__PURE__*/ function(TournamentState) {\n    TournamentState[\"REGISTRATION\"] = \"Registration\";\n    TournamentState[\"WAITING\"] = \"Waiting\";\n    TournamentState[\"PLAYING\"] = \"Playing\";\n    TournamentState[\"FINALS\"] = \"Finals\";\n    TournamentState[\"FINISHED\"] = \"Finished\";\n    return TournamentState;\n}({});\nvar StandingsMode = /*#__PURE__*/ function(StandingsMode) {\n    StandingsMode[\"PRIVATE\"] = \"Private\";\n    StandingsMode[\"CUTOFF\"] = \"Cutoff\";\n    StandingsMode[\"TOP_10\"] = \"Top 10\";\n    StandingsMode[\"PUBLIC\"] = \"Public\";\n    return StandingsMode;\n}({});\nvar PlayerState = /*#__PURE__*/ function(PlayerState) {\n    PlayerState[\"REGISTERED\"] = \"Registered\";\n    PlayerState[\"CHECKED_IN\"] = \"Checked-in\";\n    PlayerState[\"PLAYING\"] = \"Playing\";\n    PlayerState[\"FINISHED\"] = \"Finished\";\n    return PlayerState;\n}({});\nvar TableState = /*#__PURE__*/ function(TableState) {\n    TableState[\"FINISHED\"] = \"Finished\";\n    TableState[\"IN_PROGRESS\"] = \"In Progress\";\n    TableState[\"INVALID\"] = \"Invalid\";\n    return TableState;\n}({});\nvar Barrier = /*#__PURE__*/ function(Barrier) {\n    Barrier[\"MISSING_DECK\"] = \"Missing Deck\";\n    Barrier[\"BANNED\"] = \"Banned\";\n    Barrier[\"DISQUALIFIED\"] = \"Disqualified\";\n    Barrier[\"MAX_ROUNDS\"] = \"Max Rounds\";\n    return Barrier;\n}({});\nvar RankingCategoy = /*#__PURE__*/ function(RankingCategoy) {\n    RankingCategoy[\"CONSTRUCTED_ONLINE\"] = \"Constructed Online\";\n    RankingCategoy[\"CONSTRUCTED_ONSITE\"] = \"Constructed Onsite\";\n    RankingCategoy[\"LIMITED_ONLINE\"] = \"Limited Online\";\n    RankingCategoy[\"LIMITED_ONSITE\"] = \"Limited Onsite\";\n    return RankingCategoy;\n}({});\nvar LeagueRanking = /*#__PURE__*/ function(LeagueRanking) {\n    LeagueRanking[\"RTP\"] = \"RTP\";\n    LeagueRanking[\"GP\"] = \"GP\";\n    LeagueRanking[\"Score\"] = \"Score\";\n    return LeagueRanking;\n}({});\nvar MemberRole = /*#__PURE__*/ function(MemberRole) {\n    MemberRole[\"ADMIN\"] = \"Admin\";\n    MemberRole[\"PRINCE\"] = \"Prince\";\n    MemberRole[\"RULEMONGER\"] = \"Rulemonger\";\n    MemberRole[\"JUDGE\"] = \"Judge\";\n    MemberRole[\"JUDGEKIN\"] = \"Judgekin\";\n    MemberRole[\"NC\"] = \"NC\";\n    MemberRole[\"PTC\"] = \"PTC\";\n    MemberRole[\"PLAYTESTER\"] = \"Playtester\";\n    MemberRole[\"ETHICS\"] = \"Ethics\";\n    return MemberRole;\n}({});\nvar MemberFilter = /*#__PURE__*/ function(MemberFilter) {\n    MemberFilter[\"MY_RECRUITS\"] = \"My Recruits\";\n    MemberFilter[\"NO_SPONSOR\"] = \"No Sponsor\";\n    return MemberFilter;\n}({});\nvar AlertLevel = /*#__PURE__*/ function(AlertLevel) {\n    AlertLevel[\"INFO\"] = \"Info\";\n    AlertLevel[\"SUCCESS\"] = \"Success\";\n    AlertLevel[\"WARNING\"] = \"Warning\";\n    AlertLevel[\"DANGER\"] = \"Danger\";\n    return AlertLevel;\n}({});\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[\"a9LI9\"], \"a9LI9\", \"parcelRequire94c2\", {})\n\n//# sourceMappingURL=d.js.map\n","import * as events from \"./events\"\n\nexport enum TournamentFormat {\n    Standard = \"Standard\",\n    Limited = \"Limited\",\n    Draft = \"Draft\",\n}\n\nexport enum TournamentRank {\n    BASIC = \"\",\n    NC = \"National Championship\",\n    CC = \"Continental Championship\",\n    GP = \"Grand Prix\",\n}\n\nexport enum TournamentState {\n    REGISTRATION = \"Registration\",\n    WAITING = \"Waiting\",\n    PLAYING = \"Playing\",\n    FINALS = \"Finals\",\n    FINISHED = \"Finished\",\n}\n\nexport enum StandingsMode {\n    PRIVATE = \"Private\",\n    CUTOFF = \"Cutoff\",\n    TOP_10 = \"Top 10\",\n    PUBLIC = \"Public\",\n\n}\n\nexport enum PlayerState {\n    REGISTERED = \"Registered\",\n    CHECKED_IN = \"Checked-in\",\n    PLAYING = \"Playing\",\n    FINISHED = \"Finished\",\n}\n\nexport enum TableState {\n    FINISHED = \"Finished\",\n    IN_PROGRESS = \"In Progress\",\n    INVALID = \"Invalid\",\n}\n\nexport enum Barrier {\n    MISSING_DECK = \"Missing Deck\",\n    BANNED = \"Banned\",\n    DISQUALIFIED = \"Disqualified\",\n    MAX_ROUNDS = \"Max Rounds\",\n}\n\nexport enum RankingCategoy {\n    CONSTRUCTED_ONLINE = \"Constructed Online\",\n    CONSTRUCTED_ONSITE = \"Constructed Onsite\",\n    LIMITED_ONLINE = \"Limited Online\",\n    LIMITED_ONSITE = \"Limited Onsite\",\n}\n\nexport enum LeagueRanking {\n    RTP = \"RTP\",\n    GP = \"GP\",\n    Score = \"Score\",\n}\n\nexport enum MemberRole {\n    ADMIN = \"Admin\",\n    PRINCE = \"Prince\",\n    RULEMONGER = \"Rulemonger\",  // Judge Coordinator\n    JUDGE = \"Judge\",\n    JUDGEKIN = \"Judgekin\",  // Judge in training\n    NC = \"NC\",  // National Coordinator\n    PTC = \"PTC\",  // Playtest Coordinator\n    PLAYTESTER = \"Playtester\",\n    ETHICS = \"Ethics\",  // Member of the Ethics committee\n}\n\n// ---------------------------------- frontend enums\nexport enum MemberFilter {\n    MY_RECRUITS = \"My Recruits\",\n    NO_SPONSOR = \"No Sponsor\",\n}\n\nexport enum AlertLevel {\n    INFO = \"Info\",\n    SUCCESS = \"Success\",\n    WARNING = \"Warning\",\n    DANGER = \"Danger\",\n}\n// ---------------------------------- end frontend enums\n\nexport interface Score {\n    gw: number,\n    vp: number,\n    tp: number,\n}\n\nexport interface PublicPerson {\n    name: string,\n    vekn?: string,\n    uid?: string,\n    country?: string | null,  // country name\n    country_flag?: string | null,  // unicode flag char\n    city?: string | null,  // city name\n}\n\nexport interface TournamentRef {\n    name: string,\n    uid?: string,\n    format: TournamentFormat,\n    online?: boolean,\n    start: string,\n    timezone: string,\n    rank?: TournamentRank,\n}\n\nexport interface Sanction {\n    uid?: string,\n    judge?: Person,\n    level?: events.SanctionLevel,\n    category?: events.SanctionCategory,\n    comment?: string,\n}\n\nexport interface RegisteredSanction extends Sanction {\n    tournament?: TournamentRef | null,\n}\n\nexport interface Person extends PublicPerson {\n    nickname?: string | null,  // player nickname\n    roles?: MemberRole[],  // city name\n    sponsor?: string | null,\n    sanctions?: RegisteredSanction[],\n    ranking?: Record<RankingCategoy, number>,\n}\n\nexport interface KrcgCard {\n    id: number,\n    name: string,\n    count: number,\n    comments: string,\n}\n\nexport interface KrcgCardsGroup {\n    type: string,\n    count: number,\n    cards: KrcgCard[],\n}\n\nexport interface KrcgCrypt {\n    count: number,\n    cards: KrcgCard[],\n}\n\nexport interface KrcgLibrary {\n    count: number,\n    cards: KrcgCardsGroup[],\n}\n\nexport interface KrcgDeck {\n    id?: string,\n    crypt: KrcgCrypt,\n    library: KrcgLibrary,\n    vdb_link?: string,\n    event?: string,\n    event_link?: string,\n    place?: string,\n    date?: string | null,\n    tournament_format?: string,\n    players_count?: number,\n    player?: string,\n    score?: string,\n    name?: string,\n    author?: string,\n    comments?: string,\n}\n\nexport interface PlayerInfo extends PublicPerson {\n    state?: PlayerState,\n    rounds_played?: number,\n    table?: number,\n    seat?: number,\n    result?: Score,\n    seed?: number,\n    toss?: number,\n}\n\nexport interface LeaguePlayer extends PublicPerson {\n    tournaments?: string[],\n    score?: Score,\n    points?: number,\n}\n\nexport interface Player extends Person {\n    state?: PlayerState,\n    barriers?: Barrier[],\n    rounds_played?: number,\n    table?: number,  // non-zero when playing\n    seat?: number,  // non-zero when playing\n    toss?: number,  // non-zero when draws for seeding finals\n    seed?: number,  // Finals seed\n    result?: Score,\n    deck?: KrcgDeck | null,\n}\n\nexport interface SeatInfo {\n    player_uid: string,\n    result?: Score,\n}\n\nexport interface TableSeat extends SeatInfo {\n    deck?: KrcgDeck | null,\n    judge_uid?: string\n}\n\nexport interface ScoreOverride {\n    judge: Person,\n    comment?: string,\n}\n\nexport interface TableInfo {\n    seating: SeatInfo[],\n}\n\nexport interface Table {\n    seating: TableSeat[],\n    state?: TableState,\n    override?: ScoreOverride | null,\n}\n\nexport interface RoundInfo {\n    tables: TableInfo[]\n}\n\nexport interface Round {\n    tables: Table[]\n}\n\nexport interface LimitedFormat {\n    mono_vampire?: boolean,\n    mono_clan?: boolean,\n    storyline?: string,\n    include?: number[],\n    exclude?: number[],\n}\n\nexport interface LeagueRef {\n    name: string,\n    uid?: string,\n}\n\nexport interface League extends LeagueRef {\n    start: string,\n    finish?: string | null,\n    timezone: string,\n    description?: string,\n    online?: boolean,\n    country?: string | null,\n    country_flag?: string | null,\n    format: TournamentFormat,\n    ranking: LeagueRanking,\n    organizers?: PublicPerson[],\n}\n\nexport interface TournamentMinimal extends TournamentRef {\n    finish?: string | null,\n    country?: string | null,\n    country_flag?: string | null,\n    league?: LeagueRef | null,\n    state?: TournamentState,\n}\n\nexport interface TournamentConfig extends TournamentMinimal {\n    venue?: string,\n    venue_url?: string,\n    address?: string,\n    map_url?: string,\n    proxies?: boolean,\n    multideck?: boolean,\n    decklist_required?: boolean,\n    description?: string,\n    judges?: Person[],\n    standings_mode?: StandingsMode,\n    max_rounds?: number,\n    limited?: LimitedFormat | null,\n}\n\nexport interface Tournament extends TournamentConfig {\n    // active tournament console\n    // current_round: number,\n    checkin_code?: boolean,\n    players?: Record<string, Player>,\n    finals_seeds?: string[],\n    rounds?: Round[],\n    sanctions?: Record<string, Sanction[]>,\n    winner?: string,\n    extra?: any,\n}\n\nexport interface TournamentInfo extends TournamentConfig {\n    players?: Record<string, PlayerInfo>,\n    finals_seeds?: string[],\n    rounds?: RoundInfo[],\n    winner?: string,\n}\n\nexport interface TournamentFilter {\n    date?: string,\n    uid?: string,\n    country?: string,\n    online?: boolean,\n    states?: TournamentState[],\n}\n\nexport interface VenueCompletion {\n    venue: string,\n    venue_url: string | null,\n    address: string | null,\n    map_url: string | null,\n}\n\nexport interface LeagueWithTournaments extends League {\n    tournaments?: TournamentInfo[]\n    rankings?: [number, LeaguePlayer][]\n}\n\nexport interface LeagueFilter {\n    date?: string,\n    uid?: string,\n    country?: string,\n    online?: boolean,\n}\n\nexport interface DeckInfo {\n    deck: KrcgDeck,\n    score: Score,\n    winner?: boolean,\n}\n\nexport interface TournamentDeckInfo extends TournamentConfig {\n    decks?: DeckInfo[]\n}\n\nexport interface DiscordUser {\n    id: string,  // the user's id (Discord snowflake)\n    username: string,  // the user's username, not unique across the platform\n    discriminator: string,  // the user's Discord-tag\n    global_name: string | null,  // the user's display name, if it is set\n    // other fields should not be used\n}\n\nexport interface TournamentRating {\n    tournament: TournamentRef,\n    size?: number\n    rounds_played?: number,\n    result?: Score,\n    rank?: number,\n    rating_points?: number,\n}\n\nexport interface MemberInfo {\n    name?: string | null,\n    country?: string | null,  // country name\n    city?: string | null,  // city name\n    nickname?: string | null,  // player nickname (on social, lackey, etc.)\n    email?: string | null,  // the user's email\n    whatsapp?: string | null,  // phone\n}\n\nexport interface PersonWithRatings extends Person {\n    ratings?: Record<string, TournamentRating>\n}\n\nexport interface Member extends PersonWithRatings {\n    email?: string | null,  // the user's email\n    verified?: boolean | null,  // whether the email has been verified\n    discord?: DiscordUser | null,\n    whatsapp?: string | null,\n    // prefix: string | undefined // Do not use - temporary field will be removed\n}\n\nexport interface Client {\n    name: string,\n    uid?: string | null,  // UUID assigned by the backend\n}\n\nexport interface Country {\n    iso: string,  // ISO-3166 alpha-2 country code\n    iso3: string,  // ISO-3166 alpha-3 country code\n    iso_numeric: number,  // ISO-3166 numeric country code\n    fips: string,  // FIPS 2 - letters code\n    country: string,  // Country name\n    flag: string,  // Country flag (unicode char)\n    capital: string,  // Capital name\n    continent: string,  // Continent 2 - letters code(cf.top - level comment)\n    tld: string,  // Internet Top - Level Domain, including the dot\n    currency_code: string,  // ISO 4217 alpha - 3 currency code\n    currency_name: string,  // Currency name\n    phone: string,  // Phone prefix\n    postal_code_regex: string,  // Perl / Python regular expression\n    languages: string[],  // list of IETF language tags\n    geoname_id: number,  // integer id of record in geonames database\n}\n\nexport interface City {\n    geoname_id: number,  // integer id of record in geonames database\n    name: string,  // name of geographical point (utf8) varchar(200)\n    unique_name: string,  // unique name in the country (w/ admin zone suffix)\n    ascii_name: string,  // name of geographical point in plain ascii characters\n    latitude: number,  // latitude in decimal degrees (wgs84)\n    longitude: number,  // longitude in decimal degrees (wgs84)\n    feature_class: string,  // see http://www.geonames.org/export/codes.html\n    feature_code: string,  // see http://www.geonames.org/export/codes.html\n    country_code: string,  // ISO-3166 2-letter country code, 2 characters\n    country_name: string,  // country name, matches country.country\n    country_flag: string,  // country flag, unicode char\n    cc2: string[],  // alternate country codes, ISO-3166 2-letter country codes\n    admin1: string,  // name of first administrative division (state/region)\n    admin2: string,  // name of second administrative division (county)\n    timezone: string,  // iana timezone id\n    modification_date: string,  // date of last modification in ISO format\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","externals","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","TournamentFormat","TournamentRank","TournamentState","StandingsMode","PlayerState","TableState","Barrier","RankingCategoy","LeagueRanking","MemberRole","MemberFilter","AlertLevel","parcelHelpers","defineInteropFlag","export","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"d.js.map"}