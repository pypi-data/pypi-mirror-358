[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "spyglasses"
dynamic = ["version"]
description = "AI Agent Detection and Management for Python web applications"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
authors = [
    { name = "Spyglasses", email = "support@spyglasses.io" },
]
keywords = [
    "ai",
    "bot",
    "crawler",
    "detection",
    "agent",
    "middleware",
    "django",
    "flask",
    "fastapi",
    "web",
    "security",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Flask",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests>=2.25.0",
    "typing-extensions>=4.0.0;python_version<'3.10'",
]

[project.optional-dependencies]
django = ["django>=3.2"]
flask = ["flask>=2.0"]
fastapi = ["fastapi>=0.68.0", "starlette>=0.14.2"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "types-requests",
    "httpx>=0.24.0",  # For async testing
]

[project.urls]
Homepage = "https://spyglasses.io"
Documentation = "https://www.spyglasses.io/docs/platforms/python"
Repository = "https://github.com/orchestra-code/spyglasses-python"
Changelog = "https://github.com/orchestra-code/spyglasses-python/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/orchestra-code/spyglasses-python/issues"

[tool.hatch.version]
path = "src/spyglasses/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/spyglasses"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 