[build-system]
requires = ["setuptools==69.2.0", "wheel==0.43.0", "setuptools-scm==8.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "grizzly-loadtester-cli"
description = "Command line interface for grizzly-loadtester"
dynamic = ["version"]
authors = [
    {name = "biometria", email="opensource@biometria.se"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "behave ==1.2.6",
    "Jinja2 ==3.1.4",
    "requests ==2.32.3",
    "packaging ==24.1",
    "chardet ==5.2.0",
    "tomli ==2.0.1",
    "pyotp ==2.9.0",
    "PyYAML ==6.0.1",
    "progress ==1.6",
    "jinja2-simple-tags ==0.6.1",
    "azure-core ==1.30.1",
    "azure-keyvault-secrets ==4.8.0",
    "azure-identity ==1.17.1"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
keywords = [
    "grizzly",
    "grizzly-loadtester",
    "cli",
    "command line interface",
    "locust",
    "behave",
    "load",
    "loadtest",
    "performance",
    "traffic generator"
]

[project.urls]
Documentation = "https://biometria-se.github.io/grizzly/command-line-interface/usage/"
Code = "https://github.com/biometria-se/grizzly/"
Tracker = "https://github.com/Biometria-se/grizzly/issues"

[project.scripts]
grizzly-cli = "grizzly_cli.__main__:main"

[project.optional-dependencies]
dev = [
    "mypy ==1.11.1",
    "pylint ==3.2.6",
    "pytest ==8.3.2",
    "coverage[toml] ==7.6.1",
    "pytest-cov ==5.0.0",
    "pytest-mock ==3.14.0",
    "pytest-timeout ==2.3.1",
    "atomicwrites ==1.4.1",
    "flake8-pyproject ==1.2.3",
    "requests-mock ==1.12.1",
    "pip-licenses ==4.3.4",
    "pytablewriter ==1.2.0",
    "PyYAML ==6.0.1",
    "line-profiler ==4.1.2",
    "gevent ==24.2.1",
    "flask ==3.0.3",
    "types-requests >=2.27.13,<3.0.0",
    "setuptools-scm==8.1.0",
    "types-pyyaml",
    "snakeviz"
]
ci = [
    "build ==1.1.1",
    "twine ==5.0.0"
]

[tool.setuptools_scm]
write_to = "grizzly_cli/__version__.py"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
include = ["grizzly*"]
exclude = ["tests"]

[tool.setuptools.package-data]
grizzly_cli = [
    "py.typed",
    "static/compose.yaml",
    "static/Containerfile",
    "argparse/bashcompletion/bashcompletion.bash"
]

[tool.pylint.master]
ignore = [".env", ".venv", ".pytest_tmp", "tests/e2e/example"]
jobs = 1
disable = "all"
enable = [
    'F',
    'unreachable',
    'duplicate-key',
    'unnecessary-semicolon',
    'global-variable-not-assigned',
    'unused-variable',
    'unused-wildcard-import',
    'unused-import',
    'line-too-long',
    'binary-op-exception',
    'bad-format-string',
    'anomalous-backslash-in-string',
    'bad-open-mode',
    'E0001', 'E0011', 'E0012', 'E0100', 'E0101',
    'E0102', 'E0103', 'E0104', 'E0105', 'E0107',
    'E0108', 'E0110', 'E0111', 'E0112', 'E0113',
    'E0114', 'E0115', 'E0116', 'E0117', 'E0118',
    'E0202', 'E0203', 'E0211', 'E0213', 'E0236',
    'E0237', 'E0238', 'E0239', 'E0240', 'E0241',
    'E0301', 'E0302', 'E0303', 'E0401', 'E0402',
    'E0601', 'E0602', 'E0603', 'E0604', 'E0611',
    'E0632', 'E0633', 'E0701', 'E0702', 'E0703',
    'E0704', 'E0710', 'E0711', 'E0712', 'E1003',
    'E1101', 'E1102', 'E1111', 'E1120', 'E1121',
    'E1123', 'E1124', 'E1125', 'E1126', 'E1127',
    'E1128', 'E1129', 'E1130', 'E1131', 'E1132',
    'E1133', 'E1134', 'E1135', 'E1136', 'E1137',
    'E1138', 'E1139', 'E1200', 'E1201', 'E1205',
    'E1206', 'E1300', 'E1301', 'E1302', 'E1303',
    'E1304', 'E1305', 'E1306', 'E1310', 'E1700',
    'E1701'
]
max-line-length = 180
msg-template = "{path}:{line}:{column},{category},{symbol}:{msg}"
reports = "no"
output-format = "text"
generated-members = []

[tool.flake8]
max-line-length = 180
ignore = ["E722", "W503", "E402", "F405", "F403"]
exclude = [".git", "__pycache__", "docs", "build", "dist", ".pytest_tmp"]

[tool.mypy]
exclude = ["tests/e2e/example"]
# https://github.com/python/mypy/issues/5870
#follow_missing_imports = true
show_column_numbers = true
check_untyped_defs = true
disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_any_generics = true
#disallow_subclassing_any = true
#disallow_untyped_calls = true
disallow_incomplete_defs = true
#disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "behave.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gevent.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools_scm.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "progress.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jinja2_simple_tags.*"
ignore_missing_imports = true

[tool.coverage.run]
omit = ["tests/*", "/tmp/*"]

[tool.pytest.ini_options]
addopts = [
    "--cov-config=pyproject.toml",
    "--cov=.",
    "--cov-report=",
    "--no-cov-on-fail"
]
