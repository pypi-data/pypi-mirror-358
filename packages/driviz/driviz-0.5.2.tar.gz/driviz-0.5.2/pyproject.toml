[project]
name = "driviz"
version = "0.5.2"
description = "Data Visualization Library containing the Dribia Theme."
authors = [{ name = "Dribia Data Research", email = "code@dribia.com" }]
requires-python = ">=3.10,<3.14"
readme = "README.md"
license = "MIT"
maintainers = [{ name = "Dribia Data Research", email = "code@dribia.com" }]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "numpy>=1.26,<3.0",
    "altair>=5.5.0,<6",
    "matplotlib>=3.9.2,<4",
    "cycler>=0.12.1,<0.13",
    "pydantic>=2.9.0,<3",
    "pydantic-extra-types>=2.10.0,<3",
    "vl-convert-python>=1.8.0,<2",
]

[project.urls]
Homepage = "https://github.com/dribia/driviz"
Repository = "https://github.com/dribia/driviz"

[dependency-groups]
ci = [
    "setuptools>=80.9.0,<81",
]
dev = [
    "pre-commit>=3.8,<5.0",
    "deptry==0.23.0",
]
lint = [
    "ruff==0.12.0",
    "mypy==1.16.1",
    "pandas-stubs>=2.2.3,<3",
    "vega-datasets>=0.9.0,<0.10",
]
test = [
    "pytest>=8.4.1,<9",
    "pytest-cov>=6.2.1,<7",
]
docs = [
    "mike>=2.1.3,<3",
    "mkdocs>=1.5.3,<2",
    "mkdocs-material>=9.6.14,<10",
    "mkdocs-charts-plugin>=0.0.12,<0.0.13",
    "vega-datasets>=0.9.0,<0.10",
    "jinja2>=3.1.6,<4",
    "pandas>=2.3.0,<3",
]

[tool.uv]
required-version = ">=0.7.13,<1.0"
default-groups = [
    "ci",
    "dev",
    "lint",
    "test",
    "docs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.deptry.per_rule_ignores]
DEP004 = ["pandas", "vega_datasets", "jinja2"]
DEP002 = ["vl-convert-python"]

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # convention
    "B",  # flake8-bugbear
    "D",  # pydocstyle
    "UP",  # pyupgrade
    "N",  # pep8-naming
    "NPY",  # numpy
    "PD",   # pandas
    "RUF",  # ruff
    "PTH",  # pathlib
    "SIM",  # simplify
    "RET",  # return
    "RSE",  # raise
    "Q",  # quotes
    "G",  # logging-format
    "LOG",  # logging
    "ISC",  # implicit str concat
    "C4",  # comprehensions
    "COM",  # commas
    "TD",  # to-do
    "INT",  # gettext
    "TRY",  # tryceratops
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # function is too complex
    "RUF013",  # implicit optional
    "ISC001",  # allow implicit str concat
    "COM812",  # allow missing trailing comma
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"driviz/cli.py" = ["B008"]
"scripts/examples/*" = ["D100"]

[tool.ruff.lint.isort]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
plugins = []
strict_optional = true
ignore_missing_imports = false

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--verbose"
filterwarnings = 'error'
xfail_strict = true
testpaths = ["tests"]
markers = [
  "integration: integration tests",
]

[tool.coverage.run]
source = ["driviz"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.coverage.xml]
output = "coverage.xml"
