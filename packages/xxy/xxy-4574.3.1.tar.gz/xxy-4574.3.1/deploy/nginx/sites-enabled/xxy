##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

server {
	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;
    	server_name xxy.az.iaalm.cn; # managed by Certbot

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		proxy_pass http://unix:/tmp/xxy.sock;

		# musr remove following, not sure why it is needed
		# try_files $uri $uri/ =404;
	}


    listen 443 ssl; # managed by Certbot

	# because of https://github.com/certbot/certbot/issues/5550 following line need to be disabled
    # listen [::]:443 ssl ipv6only=on; # managed by Certbot

    ssl_certificate /etc/letsencrypt/live/yongch.az.iaalm.cn/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/yongch.az.iaalm.cn/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
