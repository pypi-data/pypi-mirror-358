[project]
name = "PyBastion"
dynamic = ["version"]
description = "Network device configuration security analysis tool (Development Version - Not Production Ready)"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"
authors = [
    { name = "Randy", email = "randy@example.com" }
]
keywords = ["network", "security", "configuration", "analysis", "cisco", "fortinet", "paloalto"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: Security",
]
dependencies = [
    "sqlmodel>=0.0.16",
    "duckdb>=0.10.0",
    "click>=8.1.0",
    "pydantic>=2.5.0",
    "httpx>=0.27.0",
    "rich>=13.7.0",
    "openpyxl>=3.1.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
]

[project.scripts]
pybastion = "pybastion.cli.main:main"

[project.urls]
Homepage = "https://github.com/flyguy62n/pybastion"
Repository = "https://github.com/flyguy62n/pybastion.git"
Issues = "https://github.com/flyguy62n/pybastion/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "pybastion.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = "src/"
addopts = ["--import-mode=importlib -v --cov=src/pybastion --cov-report=html --cov-report=term-missing"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]