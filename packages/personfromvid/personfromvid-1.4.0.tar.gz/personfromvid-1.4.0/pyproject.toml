[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "personfromvid"
version = "1.4.0"
description = "Extract and categorize high-quality frames containing people in specific poses from video files"
readme = "README.md"
license = "GPL-3.0-or-later"
authors = [
    {name = "codeprimate"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.10"
dependencies = [
    # Core libraries
    "opencv-python==4.8.1.78",
    "ffmpeg-python==0.2.0",
    "Pillow==10.1.0",
    "numpy==1.24.4",
    
    # AI/ML libraries
    "torch==2.1.1",
    "torchvision==0.16.1",
    "onnxruntime==1.16.3",
    "ultralytics==8.0.220",
    "safetensors==0.5.3",
    "gfpgan>=1.3.8",
    
    # CLI and progress
    "click==8.1.7",
    "rich==13.7.0",
    
    # Data handling
    "pydantic==2.5.0",
    "PyYAML==6.0.1",
    "tomli>=2.0.1; python_version<'3.11'",
    
    # Utilities
    "requests==2.31.0",
    "tqdm==4.66.1",
    "platformdirs==4.2.2",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "black==23.11.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    "build==1.2.2.post1",
    "twine==6.1.0",
    "ruff==0.5.5",
]
gpu = [
    "onnxruntime-gpu>=1.15.0",
]

[project.scripts]
personfromvid = "personfromvid.cli:main"

[project.urls]
Homepage = "https://github.com/codeprimate/personfromvid"
Documentation = "https://github.com/codeprimate/personfromvid/docs"
Repository = "https://github.com/codeprimate/personfromvid"
Issues = "https://github.com/codeprimate/personfromvid/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["personfromvid*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=personfromvid --cov-report=term-missing --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = ["E501"] # Ignore line length 