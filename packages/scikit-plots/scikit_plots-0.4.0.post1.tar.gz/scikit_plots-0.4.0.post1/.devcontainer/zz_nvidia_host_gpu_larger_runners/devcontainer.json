// Authors: The scikit-plots developers
// SPDX-License-Identifier: BSD-3-Clause
// See the full list here: https://aka.ms/ghcs-default-image
// Learn more here: https://aka.ms/configure-codespace
// https://containers.dev/implementers/json_reference/
// https://code.visualstudio.com/docs/reference/variables-reference#_predefined-variables-example
{
  // More info about Features: https://containers.dev/features
  "hostRequirements": {
    // free limit 1 core 120 hours
    // 2-core, 8gb ram, 32 gb
    // 4-core, 16gb ram, 32 gb
    "cpus": 2,
    "memory": "8gb",
    "storage": "32gb",
    "gpu": "optional"
  },
  // https://docs.github.com/en/enterprise-cloud@latest/actions/using-github-hosted-runners/using-larger-runners/about-larger-runners
  "name": "Host GPU Dev (for larger runners)",
  // "image": "mcr.microsoft.com/devcontainers/universal:2",
  // "build": {
    // Path is relative to the devcontainer.json file.
    // "dockerfile": "../../docker/Dockerfile",
    // "context": "../..",
    // "args": {}
  // },
  "dockerComposeFile": "../../docker/docker-compose.yml",
  "service": "app_nvidia_host_gpu_driver",
  "runServices": ["app_nvidia_host_gpu_driver"],
  // "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  // runArgs only for github Desktop
  "runArgs": ["--gpus","all"],
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root",
  // "containerUser": "root",
  // "updateRemoteUserUID ": "true",
  // "workspaceFolder": "/workspace",
  "features": {
    // Enable Docker-in-Docker to allow running Docker inside the container
    // "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    // Provides a lightweight desktop environment (e.g., for GUI applications)
    // "ghcr.io/devcontainers/features/desktop-lite:1": {},
    // Enables SSH access to the container
    // "ghcr.io/devcontainers/features/sshd:1": {},
    // Common utilities like zsh, bash-completion, etc.
    // "ghcr.io/devcontainers/features/common-utils:2.5.2": {},
    // GitHub CLI for interacting with GitHub from the terminal
    // "ghcr.io/devcontainers/features/github-cli:1": {},
    // Installs various APT packages required for development
    "ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
      "packages": [
        // Text editors and utilities
        "vim",
        "nano",
        "wget",
        "curl",

        // Git and related tools
        "git",
        "git-lfs",

        // Archive utilities
        "unzip",
        "gzip",
        "bzip2",
        "p7zip-full",
        "p7zip-rar",
        "unrar",
        "tar",

        // Documentation tools
        "pandoc",  // Converts notebooks to HTML

        // File and directory utilities
        "tree",

        // Graph visualization software
        "graphviz",

        // Multimedia tools
        "ffmpeg",    // Needed for matplotlib animations
        "inkscape",  // Vector graphics editor

        // Build tools
        "make",
        "cmake",
        "ninja-build",
        "pkg-config",

        // Python-related tools
        "python3-pip",
        "python3-venv",
        "python3-dev",

        // Compilers and build dependencies
        "gfortran",
        "gcc",
        "g++",
        "clang",
        "clang-format",  // Formats C++ and other languages
        "clang-tidy",    // Static analysis for C++

        // Linear algebra and numerical libraries
        "libblas-dev",
        "libopenblas-dev",
        "liblapack-dev",
        "libblis-dev",

        // Parallel computing libraries
        "libomp-dev",
        "libtbb-dev",
        "libmkl-dev",

        // Boost C++ Libraries
        "libboost-all-dev"
      ]
    }
  },
  // https://containers.dev/implementers/json_reference/#formatting-string-vs-array-properties
  // If this is a single string, it will be run in a shell.
  // If this is an array of strings, it will be run as a single command without shell. Use script file.
  // If this is an object, each provided command will be run in parallel.
  // "initializeCommand": "docker pull mcr.microsoft.com/devcontainers/universal:2",
  "onCreateCommand": {
    "message": "echo 'Runing onCreateCommand...'"
    // "notice": "bash -c 'sudo cp .devcontainer/script/first-run-notice.txt /usr/local/etc/vscode-dev-containers/first-run-notice.txt'"
    // "setup_conda_env_create": "bash .devcontainer/script/setup_conda_env_create.sh"
    // "post_create_commands": ["bash", ".devcontainer/script/post_create_commands.sh"]
  },
  // "updateContentCommand": "echo 'Runing updateContentCommand...'",
  // Use 'postCreateCommand' to run commands after the container is created. Can be cause memory error.
  // "postCreateCommand": ["bash", ".devcontainer/script/post_create_commands.sh"],
  "postStartCommand": {
    "message": "echo 'Runing postStartCommand...'"
    // "notice": "cat .devcontainer/script/first-run-notice.txt"
    // "open": "bash -c 'code .devcontainer/script/first-run-notice.txt'"
  },
  // "postAttachCommand": ["bash", "-c", "'Runing postStartCommand...'"],
  "waitFor": "postCreateCommand",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [8889],
  "portsAttributes": {
    "8889": {
      "label": "desktop"
    }
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        // === Python Development ===
        "ms-python.python",                       // Python language support
        "ms-toolsai.jupyter",                     // Jupyter Notebook support
        "ms-toolsai.vscode-jupyter-slideshow",    // Jupyter Slide Show

        // === Formatter extension ===
        "ms-python.isort",                        // Import sorting extension
        "ms-python.autopep8",                     // autopep8 formatter
        "ms-python.flake8",                       // Flake8 extension
        "ms-python.black-formatter",              // Black code formatter
        "ms-python.mypy-type-checker",            // Mypy extension
        "ms-python.pylint",                       // Pylint extension
        "charliermarsh.ruff",                     // Ruff linter
        // "ms-pyright.pyright",                     // Static Type Checker for Python

        // === Markdown & Docs ===
        "yzhang.markdown-all-in-one",             // Markdown enhancements
        "stkb.rewrap",                            // Auto-wrap text and comments
        "bierner.markdown-mermaid",               // Support for Mermaid diagrams in Markdown

        // === Shell & Terminal ===
        "timonwong.shellcheck",                   // Shell script linting
        "foxundermoon.shell-format",              // Shell script formatting
        "ms-vscode.makefile-tools",               // Makefile support
        // "ms-vscode.cmake-tools",                  // CMake Tools

        // === Web Development ===
        "ms-vscode.live-server",                  // Live Server
        "ritwickdey.liveserver",                  // Alternative Live Server
        "esbenp.prettier-vscode",                 // Prettier formatter for JS, HTML, etc.

        // === Git & Productivity ===
        "eamodio.gitlens",                        // Git supercharged
        "donjayamanne.githistory",                // View git history
        "github.vscode-pull-request-github",      // GitHub PRs and Issues
        "mhutchie.git-graph",                     // Interactive Git graph

        // === C/C++ Development ===
        // "ms-vscode.cpptools",                     // C/C++ IntelliSense, debugging, etc.
        "ms-vscode.cpptools-extension-pack",      // C/C++ IntelliSense, debugging, etc.
        "llvm-vs-code-extensions.vscode-clangd",  // Clang language server
        "jeff-hykin.better-cpp-syntax",           // Better syntax highlighting

        // === continuous integration and continuous deployment (CI/CD) platform used to automate software builds, tests, and deployments ===
        // "HashiCorp.terraform",                 // terraform
        // "ms-azuretools.vscode-azureterraform", // azureterraform
        "ms-azuretools.vscode-docker",            // Docker for Visual Studio Code
        "circleci.circleci"

        // === GenAI ===
        // "genaiscript.genaiscript-vscode"          // GenAIScript

        // === Learn extension ===
        // "docsmsft.docs-markdown",                 // Learn Markdown Extension
        // "ms-vscode.copilot-mermaid-diagram",      // vscode-mermAId
        // "docsmsft.docs-yaml",                     // Docs YAML Extension
        // "azurepaas-tools.vscode-learncloud",      // Learn Cloud
      ],
      "settings": {
        "terminal.integrated.shell.linux": "/bin/bash",
        "markdown.preview.autoShowPreviewToSide": true,
        "editor.tabSize": 4
      }
    },
    "codespaces": {
      "openFiles": [
        ".devcontainer/script/first-run-notice.txt",
        "README.md",
        "docs/source/devel/codespaces.md"
      ]
    }
  }
}
