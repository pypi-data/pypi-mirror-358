[tool.poetry]
name = "aiowebdav2"
version = "0.5.0"
description = "Async Python 3 client for WebDAV, based on aiowebdav and https://github.com/ezhov-evgeny/webdav-client-python-3"
authors = ["Jan-Philipp Benecke <jan-philipp@bnck.me>"]
repository = "https://github.com/jpbede/aiowebdav2"
license = "MIT License"
readme = "README.md"
packages = [
  { include = "aiowebdav2" }
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = ">=3.8.0"
aiofiles = ">=0.7.0"
lxml = ">=5.3.0"
python-dateutil = ">=2.9.0.post0"
yarl = ">=1.18.3"

[tool.poetry.group.dev.dependencies]
codespell = "2.4.1"
covdefaults = "2.3.0"
coverage = {version = "7.9.1", extras = ["toml"]}
pylint = "3.3.7"
pytest = "8.4.1"
pytest-asyncio = "1.0.0"
pytest-cov = "6.2.1"
pre-commit = "==4.2.0"
pre-commit-hooks = "5.0.0"
mypy = "1.16.1"
ruff = "0.12.1"
syrupy = "4.9.1"
yamllint = "1.37.1"
aioresponses = "0.7.8"
types-aiofiles = "^24.1.0.20241221"
types-python-dateutil = "^2.9.0.20241206"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/jpbede/aiowebdav2/issues"
Changelog = "https://github.com/jpbede/aiowebdav2/releases"

[tool.coverage.report]
show_missing = true
fail_under = 50

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["aiowebdav2"]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
ignore = [
  "tests",
]

[tool.pylint.BASIC]
good-names = [
  "_",
  "ex",
  "fp",
  "i",
  "id",
  "j",
  "k",
  "on",
  "Run",
  "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "duplicate-code",
  "format",
  "unsubscriptable-object",
  "too-many-instance-attributes",
  "too-many-arguments",
  "too-many-public-methods",
  "too-few-public-methods",
  "wrong-import-order",
  "protected-access"
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 120
extension-pkg-allow-list = "lxml"

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint.pycodestyle]
max-doc-length = 120
max-line-length = 120

[tool.ruff.lint]
ignore = [
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful
  "PLR0913", # Too many arguments
  "COM812", # avoid conflicts
  "COM819", # avoid conflicts
  "ISC001", # avoid conflicts
  "ISC002", # avoid conflicts
  "S320", # ignore lxml warnings for now
  "DTZ007",
  "ASYNC109",
]
select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["aiowebdav2"]
force-sort-within-sections = true
split-on-trailing-comma = false
combine-as-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 25

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
