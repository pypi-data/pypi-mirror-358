[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "khora"
version = "0.0.1"
description = "Ad-hoc Dagster pipelines for data fetching using AI/LLM prompts and agentic AI"
readme = "README.md"
requires-python = "==3.12.*"
license = {text = "MIT"}
authors = [
    { name = "Khora Team" },
]
keywords = ["dagster", "langgraph", "langchain", "ai", "pipelines", "data-fetching"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
    "dagster>=1.7.0",
    "dagster-webserver>=1.7.0",
    "langchain>=0.2.0",
    "langgraph>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-community>=0.2.0",
    "playwright>=1.45.0",
    "google-api-python-client>=2.120.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.0",
    "pandas>=2.2.0",
    "pydantic>=2.7.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.4.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "isort>=5.13.0",
    "pre-commit>=3.7.0",
    "build>=1.2.0",
    "twine>=5.1.0",
    "types-requests>=2.32.0",
    "types-pyyaml>=6.0.0",
    "types-python-dateutil>=2.9.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/khora"
Repository = "https://github.com/yourusername/khora"
Issues = "https://github.com/yourusername/khora/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/khora"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=khora --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
force_single_line = false
combine_as_imports = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501", "W191", "N802", "N803", "N806", "N815", "N816"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
strict = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_calls = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = false
strict_concatenate = false
allow_untyped_globals = true
implicit_reexport = true

[[tool.mypy.overrides]]
module = [
    "langgraph.*",
    "langchain.*",
    "dagster.*",
    "playwright.*",
    "google.*",
    "googleapiclient.*",
]
ignore_missing_imports = true
