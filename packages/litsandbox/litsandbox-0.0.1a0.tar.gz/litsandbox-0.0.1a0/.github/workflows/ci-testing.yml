name: CI testing

on:
  push:
    branches: [main, "release/*"]
  pull_request:
    branches: [main, "release/*"]

defaults:
  run:
    shell: bash

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  pytester:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.12"]
        include:
          - { os: "macos-latest", python-version: "3.12" }
          - { os: "windows-latest", python-version: "3.12" }

    timeout-minutes: 35

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Tests
        timeout-minutes: 15
        run: uv run python -m pytest --cov=litsandbox src/ tests -v -s --durations=100
      - name: Statistics
        run: |
          coverage report
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
