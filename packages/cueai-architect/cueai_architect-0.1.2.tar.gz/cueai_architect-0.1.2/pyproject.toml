[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cueai-architect"
version = "0.1.2"
description = "Modular AI Architecture Components based on the Collective Unified Equation (CUE) Framework"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CUE Framework Research Team", email = "cue-research@example.com"}
]
maintainers = [
    {name = "Karl Farah Ambrosius", email = "karlambrosius@outlook.com.au"}
]
keywords = [
    "consciousness", 
    "quantum", 
    "neural-networks", 
    "geometric-deep-learning",
    "renormalization-group",
    "fiber-bundles",
    "artificial-intelligence",
    "cue-framework"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "torch>=1.12.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "networkx>=2.6.0",
    "sympy>=1.9.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "tqdm>=4.60.0",
    "pydantic>=1.8.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]
experimental = [
    "qiskit>=0.39.0",
    "pennylane>=0.25.0",
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/cue-framework/cueai-architect"
Documentation = "https://cueai-architect.readthedocs.io"
Repository = "https://github.com/cue-framework/cueai-architect.git"
Issues = "https://github.com/cue-framework/cueai-architect/issues"

[project.scripts]
cueai = "cueai_architect.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["cueai_architect*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=cueai_architect --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["cueai_architect"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
