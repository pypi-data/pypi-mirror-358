Metadata-Version: 2.4
Name: ken-mcp
Version: 3.7.3
Summary: MCP server generator with modular architecture for creating FastMCP servers from natural language requirements
Project-URL: Homepage, https://github.com/ken-mcp/ken-mcp
Project-URL: Bug Reports, https://github.com/ken-mcp/ken-mcp/issues
Project-URL: Source, https://github.com/ken-mcp/ken-mcp
Author: KEN-MCP Contributors
License: MIT
License-File: LICENSE
Keywords: ai,fastmcp,generator,mcp,model-context-protocol
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Requires-Dist: fastmcp>=0.1.0
Requires-Dist: httpx
Requires-Dist: pydantic
Provides-Extra: test
Requires-Dist: pytest-asyncio>=0.21.0; extra == 'test'
Requires-Dist: pytest-cov>=4.0.0; extra == 'test'
Requires-Dist: pytest-mock>=3.10.0; extra == 'test'
Requires-Dist: pytest>=7.0.0; extra == 'test'
Description-Content-Type: text/markdown

# KEN-MCP - MCP Server Generator

Generate complete MCP (Model Context Protocol) servers from natural language descriptions.

## Features

- **Natural Language to MCP**: Describe what you want, get a working MCP server
- **Cross-Platform Support**: Works on Windows, macOS, and Linux
- **Smart Analysis**: Understands your requirements and generates appropriate tools
- **Complete Package**: Generates server code, tests, documentation, and setup scripts
- **FastMCP Integration**: Built on the reliable FastMCP framework

## Installation

```bash
pip install ken-mcp
```

## Quick Start

```python
from ken_mcp import mcp_ken

# Generate an MCP server
result = await mcp_ken.generate(
    "I want an MCP that helps me manage my todo list with categories and priorities"
)
```

## Generated MCP Structure

Each generated MCP includes:
- **server.py**: Main MCP server implementation
- **run_server.py**: Universal runner script
- **test.py**: Comprehensive test suite
- **verify.py**: Implementation verification
- **diagnose.py**: Cross-platform diagnostic tool
- **README.md**: Project documentation
- **help.md**: Setup and troubleshooting guide

## Documentation

- See individual MCP folders for specific documentation
- Each MCP includes comprehensive help.md for setup instructions
- Run diagnostic scripts for troubleshooting

## License

MIT License - see LICENSE file for details