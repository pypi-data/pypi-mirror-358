# Complete Mathematics Test for Chi Programming Language
# This file tests ALL mathematical operations and functions available in Chi

onetsa("============================================")
onetsa("    CHI COMPLETE MATHEMATICS TEST")
onetsa("    Testing ALL Mathematical Operations")
onetsa("============================================")
onetsa("")

# ===== SECTION 1: BASIC ARITHMETIC OPERATORS =====
onetsa("=== SECTION 1: Basic Arithmetic Operators ===")

ika a = 15
ika b = 4
ika c = 2.5

# Basic operations
onetsa("Variables: a=15, b=4, c=2.5")
onetsa("Addition (a + b):", a + b)
onetsa("Subtraction (a - b):", a - b)
onetsa("Multiplication (a * b):", a * b)
onetsa("Division (a / b):", a / b)
onetsa("Mixed types (a + c):", a + c)
onetsa("Mixed types (b * c):", b * c)
onetsa("")

# ===== SECTION 2: ADVANCED ARITHMETIC OPERATORS =====
onetsa("=== SECTION 2: Advanced Arithmetic Operators ===")

# Power operator
onetsa("Power Operations:")
onetsa("2 ** 3:", 2 ** 3)
onetsa("5 ** 2:", 5 ** 2)
onetsa("10 ** 0:", 10 ** 0)
onetsa("4 ** 0.5:", 4 ** 0.5)
onetsa("a ** b:", a ** b)

# Modulo operator
onetsa("Modulo Operations:")
onetsa("17 % 5:", 17 % 5)
onetsa("20 % 6:", 20 % 6)
onetsa("100 % 7:", 100 % 7)
onetsa("a % b:", a % b)
onetsa("")

# ===== SECTION 3: MATHEMATICAL FUNCTIONS =====
onetsa("=== SECTION 3: Mathematical Functions ===")

# Power function (mphamvu)
onetsa("Power Function (mphamvu):")
onetsa("mphamvu(2, 8):", mphamvu(2, 8))
onetsa("mphamvu(3, 4):", mphamvu(3, 4))
onetsa("mphamvu(10, 3):", mphamvu(10, 3))
onetsa("mphamvu(5, 0):", mphamvu(5, 0))

# Modulo function (chotsalira)
onetsa("Modulo Function (chotsalira):")
onetsa("chotsalira(25, 7):", chotsalira(25, 7))
onetsa("chotsalira(100, 9):", chotsalira(100, 9))
onetsa("chotsalira(50, 6):", chotsalira(50, 6))

# Square root (muzu)
onetsa("Square Root Function (muzu):")
onetsa("muzu(4):", muzu(4))
onetsa("muzu(9):", muzu(9))
onetsa("muzu(16):", muzu(16))
onetsa("muzu(25):", muzu(25))
onetsa("muzu(2):", muzu(2))

# Absolute value (chopanda)
onetsa("Absolute Value Function (chopanda):")
onetsa("chopanda(10):", chopanda(10))
onetsa("chopanda(-10):", chopanda(-10))
onetsa("chopanda(0):", chopanda(0))
onetsa("chopanda(-7.5):", chopanda(-7.5))
onetsa("chopanda(3.14):", chopanda(3.14))

# Floor function (pansi)
onetsa("Floor Function (pansi):")
onetsa("pansi(4.9):", pansi(4.9))
onetsa("pansi(4.1):", pansi(4.1))
onetsa("pansi(-3.7):", pansi(-3.7))
onetsa("pansi(-2.1):", pansi(-2.1))
onetsa("pansi(5.0):", pansi(5.0))

# Ceiling function (pamwamba)
onetsa("Ceiling Function (pamwamba):")
onetsa("pamwamba(4.1):", pamwamba(4.1))
onetsa("pamwamba(4.9):", pamwamba(4.9))
onetsa("pamwamba(-3.1):", pamwamba(-3.1))
onetsa("pamwamba(-2.9):", pamwamba(-2.9))
onetsa("pamwamba(7.0):", pamwamba(7.0))

# Round function (kuzungulira)
onetsa("Round Function (kuzungulira):")
onetsa("kuzungulira(4.567):", kuzungulira(4.567))
onetsa("kuzungulira(4.567, 1):", kuzungulira(4.567, 1))
onetsa("kuzungulira(4.567, 2):", kuzungulira(4.567, 2))
onetsa("kuzungulira(123.456, 0):", kuzungulira(123.456, 0))
onetsa("kuzungulira(-3.789, 1):", kuzungulira(-3.789, 1))

# Maximum function (chachikulu)
onetsa("Maximum Function (chachikulu):")
onetsa("chachikulu(5, 3, 8):", chachikulu(5, 3, 8))
onetsa("chachikulu(10, 20, 15, 25):", chachikulu(10, 20, 15, 25))
onetsa("chachikulu(-5, -10, -2):", chachikulu(-5, -10, -2))
onetsa("chachikulu(1.5, 2.7, 1.9):", chachikulu(1.5, 2.7, 1.9))

# Minimum function (chachingono)
onetsa("Minimum Function (chachingono):")
onetsa("chachingono(5, 3, 8):", chachingono(5, 3, 8))
onetsa("chachingono(10, 20, 15, 25):", chachingono(10, 20, 15, 25))
onetsa("chachingono(-5, -10, -2):", chachingono(-5, -10, -2))
onetsa("chachingono(1.5, 2.7, 1.9):", chachingono(1.5, 2.7, 1.9))
onetsa("")

# ===== SECTION 4: ORDER OF OPERATIONS =====
onetsa("=== SECTION 4: Order of Operations ===")

onetsa("Testing mathematical precedence:")
onetsa("2 + 3 * 4:", 2 + 3 * 4)
onetsa("(2 + 3) * 4:", (2 + 3) * 4)
onetsa("2 ** 3 * 4:", 2 ** 3 * 4)
onetsa("2 * 3 ** 4:", 2 * 3 ** 4)
onetsa("10 + 5 % 3:", 10 + 5 % 3)
onetsa("(10 + 5) % 3:", (10 + 5) % 3)
onetsa("2 ** 3 ** 2:", 2 ** 3 ** 2)
onetsa("(2 ** 3) ** 2:", (2 ** 3) ** 2)
onetsa("2 ** (3 ** 2):", 2 ** (3 ** 2))
onetsa("")

# ===== SECTION 5: COMPLEX EXPRESSIONS =====
onetsa("=== SECTION 5: Complex Expressions ===")

onetsa("Combining multiple operations:")
ika complex1 = muzu(16) + mphamvu(2, 3) * chopanda(-5)
onetsa("muzu(16) + mphamvu(2, 3) * chopanda(-5):", complex1)

ika complex2 = chachikulu(5, 8, 3) - chachingono(10, 7, 12)
onetsa("chachikulu(5, 8, 3) - chachingono(10, 7, 12):", complex2)

ika complex3 = kuzungulira(pansi(7.8) + pamwamba(3.2), 1)
onetsa("kuzungulira(pansi(7.8) + pamwamba(3.2), 1):", complex3)

ika complex4 = chotsalira(mphamvu(3, 3), 5) + muzu(chopanda(-16))
onetsa("chotsalira(mphamvu(3, 3), 5) + muzu(chopanda(-16)):", complex4)
onetsa("")

# ===== SECTION 6: MATHEMATICAL APPLICATIONS =====
onetsa("=== SECTION 6: Real-World Mathematical Applications ===")

# Geometry calculations
onetsa("Geometry Calculations:")
ika radius = 7
ika pi = 3.14159
ika circle_area = pi * mphamvu(radius, 2)
ika circle_circumference = 2 * pi * radius
onetsa("Circle (radius=7) - Area:", circle_area)
onetsa("Circle (radius=7) - Circumference:", circle_circumference)

# Rectangle area and perimeter
ika length = 12
ika width = 8
ika rect_area = length * width
ika rect_perimeter = 2 * (length + width)
onetsa("Rectangle (12x8) - Area:", rect_area)
onetsa("Rectangle (12x8) - Perimeter:", rect_perimeter)

# Triangle calculations
ika base = 10
ika height = 6
ika triangle_area = (base * height) / 2
onetsa("Triangle (base=10, height=6) - Area:", triangle_area)

# Pythagorean theorem
ika side1 = 5
ika side2 = 12
ika hypotenuse = muzu(mphamvu(side1, 2) + mphamvu(side2, 2))
onetsa("Right triangle (5, 12) - Hypotenuse:", hypotenuse)

# Distance between two points
ika x1 = 1
ika y1 = 2
ika x2 = 4
ika y2 = 6
ika distance = muzu(mphamvu(x2 - x1, 2) + mphamvu(y2 - y1, 2))
onetsa("Distance between (1,2) and (4,6):", distance)
onetsa("")

# ===== SECTION 7: STATISTICAL OPERATIONS =====
onetsa("=== SECTION 7: Statistical Operations ===")

# Using lists with mathematical functions
ika numbers = ndandanda(12, 8, 15, 3, 9, 21, 6)
onetsa("Dataset:", numbers)

# Calculate min, max, and range
ika dataset_min = chachingono(12, 8, 15, 3, 9, 21, 6)
ika dataset_max = chachikulu(12, 8, 15, 3, 9, 21, 6)
ika range_val = dataset_max - dataset_min
onetsa("Minimum:", dataset_min)
onetsa("Maximum:", dataset_max)
onetsa("Range:", range_val)

# Calculate sum and average
ika total = 12 + 8 + 15 + 3 + 9 + 21 + 6
ika count = 7
ika average = total / count
onetsa("Sum:", total)
onetsa("Count:", count)
onetsa("Average:", average)
onetsa("")

# ===== SECTION 8: NUMBER THEORY APPLICATIONS =====
onetsa("=== SECTION 8: Number Theory Applications ===")

# Perfect squares
onetsa("Perfect Squares:")
bwereza i mu ndandanda(1, 2, 3, 4, 5, 6, 7, 8, 9, 10):
    ika square = mphamvu(i, 2)
    onetsa("  ", i, "Â² =", square)

# Even and odd classification
onetsa("Even/Odd Classification:")
ika test_nums = ndandanda(15, 22, 37, 48, 51, 64)
bwereza num mu test_nums:
    ika remainder = chotsalira(num, 2)
    ngati remainder == 0:
        onetsa("  ", num, "is even")
    sizoona:
        onetsa("  ", num, "is odd")

# Divisibility tests
onetsa("Divisibility by 3:")
ika div_test = ndandanda(12, 13, 15, 17, 18, 19, 21)
bwereza num mu div_test:
    ika div_remainder = chotsalira(num, 3)
    ngati div_remainder == 0:
        onetsa("  ", num, "is divisible by 3")
    sizoona:
        onetsa("  ", num, "is not divisible by 3")
onetsa("")

# ===== SECTION 9: TYPE CHECKING =====
onetsa("=== SECTION 9: Mathematical Type Checking ===")

ika int_result = pansi(5.7)
ika float_result = muzu(16)
ika power_result = 2 ** 3
ika mod_result = 17 % 5

onetsa("Type checking of mathematical results:")
onetsa("pansi(5.7) =", int_result, "| Type:", mtundu(int_result))
onetsa("muzu(16) =", float_result, "| Type:", mtundu(float_result))
onetsa("2 ** 3 =", power_result, "| Type:", mtundu(power_result))
onetsa("17 % 5 =", mod_result, "| Type:", mtundu(mod_result))
onetsa("")

# ===== SECTION 10: ERROR HANDLING DEMONSTRATION =====
onetsa("=== SECTION 10: Safe Mathematical Operations ===")

onetsa("Mathematical edge cases:")
onetsa("chopanda(0):", chopanda(0))
onetsa("mphamvu(1, 100):", mphamvu(1, 100))
onetsa("mphamvu(0, 5):", mphamvu(0, 5))
onetsa("muzu(1):", muzu(1))
onetsa("chachikulu(5):", chachikulu(5))
onetsa("chachingono(5):", chachingono(5))
onetsa("kuzungulira(5.0):", kuzungulira(5.0))
onetsa("")

# ===== FINAL SUMMARY =====
onetsa("============================================")
onetsa("         COMPLETE MATHEMATICS SUMMARY")
onetsa("============================================")
onetsa("âœ… Basic Arithmetic: +, -, *, /")
onetsa("âœ… Advanced Operators: **, %")
onetsa("âœ… Power Function: mphamvu()")
onetsa("âœ… Modulo Function: chotsalira()")
onetsa("âœ… Square Root: muzu()")
onetsa("âœ… Absolute Value: chopanda()")
onetsa("âœ… Floor Function: pansi()")
onetsa("âœ… Ceiling Function: pamwamba()")
onetsa("âœ… Round Function: kuzungulira()")
onetsa("âœ… Maximum Function: chachikulu()")
onetsa("âœ… Minimum Function: chachingono()")
onetsa("âœ… Order of Operations: Proper precedence")
onetsa("âœ… Complex Expressions: Nested functions")
onetsa("âœ… Real-world Applications: Geometry, Statistics")
onetsa("âœ… Type Safety: Proper type handling")
onetsa("")
onetsa("ðŸŽ‰ CHI MATHEMATICS IS COMPREHENSIVE & COMPLETE!")
onetsa("ðŸŽ‰ All mathematical operations working perfectly!")
onetsa("============================================")

