[project]
name = "tensor-network-code"
version = "0.2.0" # finished all from Lecture 1.1 to 5.2
description = "Tensor Network Code"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "einops",
    "numpy>=2.2.3",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.2",
]

[project.optional-dependencies]
mlx = ["mlx>=0.26.0"]

[dependency-groups]

torch = ["torch>=2.7.0", "torchmetrics>=1.7.1", "torchvision>=0.22.0"]

dev = [
    "nbdev>=2.3.37",
    "poethepoet>=0.33.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.5",
    "safetensors>=0.5.3",
]

notebook = [
    "matplotlib>=3.10.1",
    "ipywidgets>=8.1.5",
    "jupyterlab>=4.3.6",
    "tqdm>=4.67.1",
]

ref-code-deps = ["opencv-python>=4.11.0.86"]

mlx = [
    "mlx>=0.26.0",
    "mlxx>=0.3.2",
]


[tool.uv.sources]
einops = { git = "https://github.com/ifsheldon/einops", branch = "mlx-backend" }
torch = [
    { index = "torch-cpu", marker = "platform_system == 'Darwin'" },
    { index = "torch-gpu", marker = "platform_system == 'Linux'" },
]


[[tool.uv.index]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "torch-gpu"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only-include = ["tensor_network"]

[tool.hatch.build.targets.sdist]
only-include = ["tensor_network"]

[tool.uv]
# include dev, notebook, and ref-code-deps in the default groups for running the notebooks
default-groups = ["dev", "notebook", "ref-code-deps", "mlx", "torch"]

[tool.ruff]
extend-exclude = ["tensor_network", "setup.py"]
line-length = 100

[tool.ruff.lint]
ignore = ["E402", "E741", "F401", "F811", "F402"]

[tool.poe.tasks]
format = "uv run ruff format"
sync = "uv run nbdev_export"
check_tensor_network = "uv run ruff check tensor_network"
check = "uv run ruff check --exclude reference_code"
check_all = ["check", "check_tensor_network"]
precommit = ["format", "sync", "check_all"]
lab = "uv run jupyter lab"
count = "uvx pygount tensor_network --generated=\"(?i).*AUTOGENERATED\" --format summary"