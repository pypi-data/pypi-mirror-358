[project]
name = "amati"
version = "0.2.2"
description = "Validates that a .yaml or .json file conforms to the OpenAPI Specifications 3.x."
readme = "README.md"
authors = [
    { name = "Ben", email = "2551337+ben-alexander@users.noreply.github.com" }
]
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Documentation",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Testing :: Acceptance"
]
licence = "MIT"
license-files = ["LICENSE"]
dependencies = [
    "abnf>=2.3.1",
    "idna>=3.10",
    "jinja2>=3.1.6",
    "jsonpickle>=4.1.1",
    "jsonschema>=4.24.0",
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
]

[project.urls]
Homepage = "https://github.com/ben-alexander/amati"
Issues = "https://github.com/ben-alexander/amati/issues"

[project.scripts]
amati = "amati:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "hypothesis>=6.131.28",
    "isort>=6.0.1",
    "pre-commit>=4.2.0",
    "pylint>=3.3.7",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
]

[tool.isort]
src_paths = ["amati", "tests"]
known_first_party=["amati"]
known_third_party=["pytest","pydantic","yaml","abnf", "rfc3987"]
extra_standard_library=["typing_extensions"]
profile="black"

[tool.coverage.run]
relative_files=true

[tool.pyright]
reportMissingTypeStubs=false
typeCheckingMode="strict"

[tool.pytest.ini_options]
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS"
addopts = "--strict-markers"
markers = [
    "external: requires external dependencies"
    ]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
default = true
[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/legacy/"
publish-url = "https://test.pypi.org/legacy/"
