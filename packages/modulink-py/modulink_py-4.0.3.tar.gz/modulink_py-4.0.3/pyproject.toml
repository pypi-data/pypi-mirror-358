[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "modulink-py"
version = "4.0.3"
description = "A Python library for building modular applications with unified triggers"
readme = "README.md"
requires-python = ">=3.8"
license = "Apache-2.0"
authors = [
    {name = "Orchestrate LLC", email = "joshua@orchestrate.solutions"}
]
maintainers = [
    {name = "Orchestrate LLC", email = "joshua@orchestrate.solutions"}
]
keywords = [
    "modular",
    "applications",
    "triggers",
    "fastapi",
    "automation",
    "scheduling"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "apscheduler>=3.10.0",
    "click>=8.1.0",
    "pydantic>=2.5.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/orchestrate-solutions/modulink-py"
Repository = "https://github.com/orchestrate-solutions/modulink-py"
Issues = "https://github.com/orchestrate-solutions/modulink-py/issues"
Documentation = "https://github.com/orchestrate-solutions/modulink-py#readme"

[tool.setuptools]
packages = ["modulink"]

[tool.setuptools.package-data]
modulink = ["py.typed"]

# Exclude test files from the distribution
[tool.setuptools.exclude-package-data]
"*" = ["tests", "tests.*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["modulink"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "asyncio: marks tests as async tests",
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["modulink"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

# MyPy configuration
[tool.mypy]
python_version = "4.0.3"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
