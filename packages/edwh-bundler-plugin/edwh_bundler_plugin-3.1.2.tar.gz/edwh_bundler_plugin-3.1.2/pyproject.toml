[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "edwh-bundler-plugin"
dynamic = ["version"]
description = 'Python-only static file (js, css) bundler for `edwh`'
readme = "README.md"
requires-python = ">=3.10"
license-expression = "MIT"
keywords = []
authors = [
    { name = "Robin van der Noord", email = "robin.vdn@educationwarehouse.nl" },
    { name = "Remco Boerma", email = "remco.b@educationwarehouse.nl" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "edwh >= 0.56.6",
    "tomlkit",
    "python-dotenv",
    "sassquatch >= 1.0.1",
    "rjsmin",
    "dukpy",
    "requests",
    "pyyaml",
    "configuraptor >= 1.28.0",
]

[project.optional-dependencies]
dev = [
    "hatch",
    "python-semantic-release < 8",
    # "black",
    "pytest",
]

[project.urls]
Documentation = "https://github.com/educationwarehouse/edwh-bundler-plugin#readme"
Issues = "https://github.com/educationwarehouse/edwh-bundler-plugin/issues"
Source = "https://github.com/educationwarehouse/edwh-bundler-plugin"

# https://packaging.python.org/en/latest/guides/creating-and-discovering-plugins/#using-package-metadata
[project.entry-points."edwh.tasks"]
bundle = "edwh_bundler_plugin.bundler_plugin"

[tool.edwh.bundle]
js = [
    "https://unpkg.com/htmx.org@1.9.2/dist/htmx.min.js"
]

css = [
    "https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"
]

[tool.edwh.bundle.config]
minify = true
filename = "bundled"
output-css = "static/css/$filename-$version.css"
output_js = "static/js/$filename-$version.js"
hash = true


[tool.hatch.version]
path = "src/edwh_bundler_plugin/__about__.py"

[tool.semantic_release]
branch = "master"
version_variable = "src/edwh_bundler_plugin/__about__.py:__version__"
change_log = "CHANGELOG.md"
upload_to_repository = false
upload_to_release = false
build_command = "hatch build"
version_source = "tag"

parser_angular_minor_types = "feat,minor"
parser_angular_patch_types = "fix,perf,refactor,build,chore,patch"

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]
[tool.hatch.envs.default.scripts]
publish = [
    'semantic-release publish',
    'hatch build -c',
    'hatch publish',
]

test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/edwh_bundler_plugin tests}"
style = [
    "ruff {args:.}",
    "black --check --diff {args:.}",
]
fmt = [
    "black {args:.}",
    "ruff --fix {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.black]
target-version = ["py310"]
line-length = 120
skip-string-normalization = false

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
    "F", # pyflake error
    "E", # pycodestyle error
    "W", # pycodestyle warning
    "Q", # quotes
    "A", # builtins
    # "C4", # comprehensions - NO: doesn't allow dict()
    # "RET", # return - NO: annoying
    "SIM", # simplify
    "ARG", # unused arguments
    # "COM", # comma's - NO: annoying
    # "PTH", # use pathlib - NO: annoying
    "RUF", # ruff rules
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

ignore = [
    "RUF013" # implicit Optional
]

[tool.isort]
profile = "black"
extend_skip_glob = ["*.bak/*"]

[tool.coverage.run]
source_pkgs = ["edwh_bundler_plugin", "tests"]
branch = true
parallel = true
omit = [
    "src/edwh_bundler_plugin/__about__.py",
]

[tool.coverage.paths]
edwh_bundler_plugin = ["src/edwh_bundler_plugin", "*/edwh-bundler-plugin/src/edwh_bundler_plugin"]
tests = ["tests", "*/edwh-bundler-plugin/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
