[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "syft-objects"
version = "0.3.0"
description = "Share files with explicit mock vs private control"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "OpenMined", email = "contact@openmined.org"}
]
maintainers = [
    {name = "OpenMined", email = "contact@openmined.org"}
]
keywords = ["privacy", "data-sharing", "distributed", "syft", "openmined"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
syftbox = [
    "syft-core>=0.1.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-jupyter>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/OpenMined/syft-objects"
Documentation = "https://openmined.github.io/syft-objects/"
Repository = "https://github.com/OpenMined/syft-objects"
"Bug Tracker" = "https://github.com/OpenMined/syft-objects/issues"
"Discussions" = "https://github.com/OpenMined/syft-objects/discussions"

[project.scripts]
syft-objects = "syft_objects.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/syft_objects"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py38']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pydantic.*",
    "yaml.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--cov=src/syft_objects",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
