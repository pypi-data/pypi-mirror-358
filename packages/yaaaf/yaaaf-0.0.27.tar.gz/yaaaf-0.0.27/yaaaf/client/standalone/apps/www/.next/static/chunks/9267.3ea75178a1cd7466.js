"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9267,2730],{69267:(e,r,t)=>{t.r(r),t.d(r,{useAudioRecording:()=>c});var a=t(2265),o=t(82730);function c(e){let{transcribeAudio:r,onTranscriptionComplete:t}=e,[c,n]=(0,a.useState)(!1),[i,s]=(0,a.useState)(!!r),[u,d]=(0,a.useState)(!1),[l,f]=(0,a.useState)(!1),[p,w]=(0,a.useState)(null),g=(0,a.useRef)(null);(0,a.useEffect)(()=>{(async()=>{s(!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)&&!!r)})()},[r]);let h=async()=>{d(!1),f(!0);try{o.recordAudio.stop();let e=await g.current;if(r){let a=await r(e);null==t||t(a)}}catch(e){console.error("Error transcribing audio:",e)}finally{f(!1),n(!1),p&&(p.getTracks().forEach(e=>e.stop()),w(null)),g.current=null}},y=async()=>{if(c)await h();else try{n(!0),d(!0);let e=await navigator.mediaDevices.getUserMedia({audio:!0});w(e),g.current=(0,o.recordAudio)(e)}catch(e){console.error("Error recording audio:",e),n(!1),d(!1),p&&(p.getTracks().forEach(e=>e.stop()),w(null))}};return{isListening:c,isSpeechSupported:i,isRecording:u,isTranscribing:l,audioStream:p,toggleListening:y,stopRecording:h}}},82730:(e,r,t)=>{t.r(r),t.d(r,{recordAudio:()=>a});let a=function(){let e=async function(r){try{let t=new MediaRecorder(r,{mimeType:"audio/webm;codecs=opus"}),a=[];return new Promise((r,o)=>{t.ondataavailable=e=>{e.data.size>0&&a.push(e.data)},t.onstop=()=>{let e=new Blob(a,{type:"audio/webm"});r(e)},t.onerror=()=>{o(Error("MediaRecorder error occurred"))},t.start(1e3),e.currentRecorder=t})}catch(e){throw Error("Failed to start recording: "+(e instanceof Error?e.message:"Unknown error occurred"))}};return e.stop=()=>{let r=e.currentRecorder;r&&"inactive"!==r.state&&r.stop(),delete e.currentRecorder},e}()}}]);