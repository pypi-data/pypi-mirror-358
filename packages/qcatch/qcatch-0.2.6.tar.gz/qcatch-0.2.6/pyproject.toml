[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling" ]

[project]
name = "qcatch"
version = "0.2.6"
description = "QCatch: Quality Control downstream of alevin-fry / simpleaf."
readme = "README.md"
authors = [
  { name = "Yuan Gao" },
  { name = "Dongze He" },
  { name = "Rob Patro" },
]
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "anndata>=0.11.4",
  "beautifulsoup4>=4.13.3",
  "igraph>=0.11,<0.12",
  "numpy>=2.1.3,<3",
  "pandas>=2.2.3,<3",
  "plotly>=6",
  "requests>=2.32.4",
  "scanpy>=1.10.4,<2",
  "scipy>=1.15.2,<2",
  "session-info2>=0.1,<0.2",
]
optional-dependencies.dev = [ "pre-commit", "twine>=4.0.2" ]
optional-dependencies.test = [ "coverage", "pytest", "pytest-cov", "setuptools" ]
urls.Documentation = "https://github.com/COMBINE-lab/QCatch#readme"
urls.Homepage = "https://github.com/COMBINE-lab/QCatch"
urls.Source = "https://github.com/COMBINE-lab/QCatch"
scripts.qcatch = "qcatch.main:main"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = [ "src" ]

[tool.hatch.envs.default]
# installer = "uv"
installer = "virtual"
features = [ "dev" ]

#[tool.hatch.envs.docs]
#features = ["doc"]
#scripts.build = "sphinx-build -M html docs docs/_build {args}"
#scripts.open = "python -m webbrowser -t docs/_build/html/index.html"
#scripts.clean = "git clean -fdX -- {args:docs}"

# Test the lowest and highest supported Python versions with normal deps
# [[tool.hatch.envs.hatch-test.matrix]]
# deps = [ "stable" ]
# python = [ "3.10", "3.11", "3.12", "3.13" ]

# Test the newest supported Python version also with pre-release deps
# [[tool.hatch.envs.hatch-test.matrix]]
# deps = [ "pre" ]
# python = [ "3.13" ]

[tool.hatch.envs."hatch-test-3.11"]
python = "3.11"
features = [ "test" ]
installer = "virtual"

[tool.hatch.envs."hatch-test-3.12"]
python = "3.12"
features = [ "test" ]
installer = "virtual"

[tool.hatch.envs."hatch-test-3.11".scripts]
run-cov = "pytest --cov=qcatch --cov-report=term-missing tests"

[tool.hatch.envs."hatch-test-3.12".scripts]
run-cov = "pytest --cov=qcatch --cov-report=term-missing tests"

# [tool.hatch.envs.hatch-test.overrides]
# If the matrix variable `deps` is set to "pre",
# set the environment variable `UV_PRERELEASE` to "allow".
# matrix.deps.env-vars = [
#   { key = "UV_PRERELEASE", value = "allow", if = [ "pre" ] },
# ]

[tool.ruff]
line-length = 120
src = [ "src" ]
extend-include = [ "*.ipynb" ]
fix = true

format.docstring-code-format = true
lint.select = [
  "B",      # flake8-bugbear
  "B904",
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]
lint.ignore = [
  "B008", # Errors from function calls in argument defaults. These are fine when the result is immutable.
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
  "D107", # Missing docstring in __init__
  # Disable one in each pair of mutually incompatible rules
  "D203", # We don’t want a blank line before a class docstring
  "D213", # <> We want docstrings to start immediately after the opening triple quote
  "D400", # first line should end with a period [Bug: doesn’t work with single-line docstrings]
  "D401", # First line should be in imperative mood; try rephrasing
  "E501", # line too long -> we accept long comment lines; formatter gets rid of long code lines
  "E731", # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
  "E741", # allow I, O, l as variable names -> I is the identity matrix
]
lint.per-file-ignores."*/__init__.py" = [ "F401" ]
lint.per-file-ignores."docs/*" = [ "I" ]
lint.per-file-ignores."tests/*" = [ "D" ]
lint.pydocstyle.convention = "numpy"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
xfail_strict = true
addopts = [
  "--import-mode=importlib", # allow using test files with same name
]

[tool.coverage.run]
source = [ "qcatch" ]
omit = [ "**/test_*.py" ]

[tool.cruft]
skip = [
  "tests",
  "src/**/__init__.py",
  "src/**/basic.py",
  "docs/api.md",
  "docs/changelog.md",
  "docs/references.bib",
  "docs/references.md",
  "docs/notebooks/example.ipynb",
]
