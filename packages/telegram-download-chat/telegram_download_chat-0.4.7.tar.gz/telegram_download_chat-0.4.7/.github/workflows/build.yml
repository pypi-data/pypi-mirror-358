name: Build and Release

on:
  push:
    tags: 
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Run Windows build script
      run: |
        # Extract version from tag if available, otherwise use 0.0.0
        if ("${{ github.ref }}" -like 'refs/tags/*') {
          $VERSION = "${{ github.ref }}" -replace 'refs/tags/v',''
        } else {
          $VERSION = "0.0.0"
        }
        Write-Host "Using version: $VERSION"
        $env:SETUPTOOLS_SCM_PRETEND_VERSION = $VERSION
        .\build_windows.ps1
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegram-download-chat-windows
        path: dist/telegram-download-chat.exe
        if-no-files-found: error

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        brew install libmagic
        
    - name: Install Python build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools_scm
        
    - name: Run macOS build script
      run: |
        # Extract version from tag if available, otherwise use 0.0.0
        if [[ ${{ github.ref }} == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="0.0.0"
        fi
        echo "Using version: $VERSION"
        SETUPTOOLS_SCM_PRETEND_VERSION=$VERSION bash build_macos.sh
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegram-download-chat-macos
        path: dist/telegram-download-chat.dmg
        if-no-files-found: error

  release:
    name: Create Release
    needs: [build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases and uploading assets
      actions: read    # Required for downloading artifacts
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: telegram-download-chat-windows
        path: artifacts/windows
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: telegram-download-chat-macos
        path: artifacts/macos
    
    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref }}
        name: Release v${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          artifacts/windows/telegram-download-chat.exe
          artifacts/macos/telegram-download-chat.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
